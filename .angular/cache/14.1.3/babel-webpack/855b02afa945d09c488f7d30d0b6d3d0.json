{"ast":null,"code":"import _assertThisInitialized from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Current version of Angular Material. */\n\nvar _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nvar _c1 = [\"*\", \"mat-option, ng-container\"];\n\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\n\nfunction MatOption_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n  }\n}\n\nvar _c2 = [\"*\"];\nvar VERSION = new Version('14.1.3');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\n\nvar AnimationCurves = /*#__PURE__*/_createClass(function AnimationCurves() {\n  _classCallCheck(this, AnimationCurves);\n});\n\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\n\nvar AnimationDurations = /*#__PURE__*/_createClass(function AnimationDurations() {\n  _classCallCheck(this, AnimationDurations);\n});\n\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n/** @docs-private */\n\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\n\n\nvar MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n\nvar MatCommonModule = /*#__PURE__*/function () {\n  function MatCommonModule(highContrastModeDetector, _sanityChecks, _document) {\n    _classCallCheck(this, MatCommonModule);\n\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n\n    this._hasDoneGlobalChecks = false; // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document);\n        }\n\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n\n\n  _createClass(MatCommonModule, [{\n    key: \"_checkIsEnabled\",\n    value: function _checkIsEnabled(name) {\n      if (_isTestEnvironment()) {\n        return false;\n      }\n\n      if (typeof this._sanityChecks === 'boolean') {\n        return this._sanityChecks;\n      }\n\n      return !!this._sanityChecks[name];\n    }\n  }]);\n\n  return MatCommonModule;\n}();\n\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n};\n\nMatCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [BidiModule, BidiModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: i1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/** Checks that the page has a doctype. */\n\n\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\n\n\nfunction _checkThemeIsPresent(doc) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || typeof getComputedStyle !== 'function') {\n    return;\n  }\n\n  var testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  var computedStyle = getComputedStyle(testElement); // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\n\n\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisabled(base) {\n  return /*#__PURE__*/function (_base) {\n    _inherits(_class, _base);\n\n    var _super = _createSuper(_class);\n\n    function _class() {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this._disabled = false;\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"disabled\",\n      get: function get() {\n        return this._disabled;\n      },\n      set: function set(value) {\n        this._disabled = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinColor(base, defaultColor) {\n  return /*#__PURE__*/function (_base2) {\n    _inherits(_class2, _base2);\n\n    var _super2 = _createSuper(_class2);\n\n    function _class2() {\n      var _this2;\n\n      _classCallCheck(this, _class2);\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this2 = _super2.call.apply(_super2, [this].concat(args));\n      _this2.defaultColor = defaultColor; // Set the default color that can be specified from the mixin.\n\n      _this2.color = defaultColor;\n      return _this2;\n    }\n\n    _createClass(_class2, [{\n      key: \"color\",\n      get: function get() {\n        return this._color;\n      },\n      set: function set(value) {\n        var colorPalette = value || this.defaultColor;\n\n        if (colorPalette !== this._color) {\n          if (this._color) {\n            this._elementRef.nativeElement.classList.remove(\"mat-\".concat(this._color));\n          }\n\n          if (colorPalette) {\n            this._elementRef.nativeElement.classList.add(\"mat-\".concat(colorPalette));\n          }\n\n          this._color = colorPalette;\n        }\n      }\n    }]);\n\n    return _class2;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinDisableRipple(base) {\n  return /*#__PURE__*/function (_base3) {\n    _inherits(_class3, _base3);\n\n    var _super3 = _createSuper(_class3);\n\n    function _class3() {\n      var _this3;\n\n      _classCallCheck(this, _class3);\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      _this3 = _super3.call.apply(_super3, [this].concat(args));\n      _this3._disableRipple = false;\n      return _this3;\n    }\n    /** Whether the ripple effect is disabled or not. */\n\n\n    _createClass(_class3, [{\n      key: \"disableRipple\",\n      get: function get() {\n        return this._disableRipple;\n      },\n      set: function set(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n      }\n    }]);\n\n    return _class3;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinTabIndex(base) {\n  var defaultTabIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return /*#__PURE__*/function (_base4) {\n    _inherits(_class4, _base4);\n\n    var _super4 = _createSuper(_class4);\n\n    function _class4() {\n      var _this4;\n\n      _classCallCheck(this, _class4);\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      _this4 = _super4.call.apply(_super4, [this].concat(args));\n      _this4._tabIndex = defaultTabIndex;\n      _this4.defaultTabIndex = defaultTabIndex;\n      return _this4;\n    }\n\n    _createClass(_class4, [{\n      key: \"tabIndex\",\n      get: function get() {\n        return this.disabled ? -1 : this._tabIndex;\n      },\n      set: function set(value) {\n        // If the specified tabIndex value is null or undefined, fall back to the default value.\n        this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n      }\n    }]);\n\n    return _class4;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction mixinErrorState(base) {\n  return /*#__PURE__*/function (_base5) {\n    _inherits(_class5, _base5);\n\n    var _super5 = _createSuper(_class5);\n\n    function _class5() {\n      var _this5;\n\n      _classCallCheck(this, _class5);\n\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      _this5 = _super5.call.apply(_super5, [this].concat(args));\n      /** Whether the component is in an error state. */\n\n      _this5.errorState = false;\n      return _this5;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n\n\n    _createClass(_class5, [{\n      key: \"updateErrorState\",\n      value: function updateErrorState() {\n        var oldState = this.errorState;\n        var parent = this._parentFormGroup || this._parentForm;\n        var matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n        var control = this.ngControl ? this.ngControl.control : null;\n        var newState = matcher.isErrorState(control, parent);\n\n        if (newState !== oldState) {\n          this.errorState = newState;\n          this.stateChanges.next();\n        }\n      }\n    }]);\n\n    return _class5;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\n\n\nfunction mixinInitialized(base) {\n  return /*#__PURE__*/function (_base6) {\n    _inherits(_class6, _base6);\n\n    var _super6 = _createSuper(_class6);\n\n    function _class6() {\n      var _this6;\n\n      _classCallCheck(this, _class6);\n\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      _this6 = _super6.call.apply(_super6, [this].concat(args));\n      /** Whether this directive has been marked as initialized. */\n\n      _this6._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n\n      _this6._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n\n      _this6.initialized = new Observable(function (subscriber) {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (_this6._isInitialized) {\n          _this6._notifySubscriber(subscriber);\n        } else {\n          _this6._pendingSubscribers.push(subscriber);\n        }\n      });\n      return _this6;\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n\n\n    _createClass(_class6, [{\n      key: \"_markInitialized\",\n      value: function _markInitialized() {\n        if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n        }\n\n        this._isInitialized = true;\n\n        this._pendingSubscribers.forEach(this._notifySubscriber);\n\n        this._pendingSubscribers = null;\n      }\n      /** Emits and completes the subscriber stream (should only emit once). */\n\n    }, {\n      key: \"_notifySubscriber\",\n      value: function _notifySubscriber(subscriber) {\n        subscriber.next();\n        subscriber.complete();\n      }\n    }]);\n\n    return _class6;\n  }(base);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\n\n\nvar MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\n\n\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter() {\n    _classCallCheck(this, DateAdapter);\n\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n\n\n  _createClass(DateAdapter, [{\n    key: \"getValidDateOrNull\",\n    value: function getValidDateOrNull(obj) {\n      return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n        return value;\n      }\n\n      return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n\n  }, {\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      this.locale = locale;\n\n      this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n\n  }, {\n    key: \"compareDate\",\n    value: function compareDate(first, second) {\n      return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n\n  }, {\n    key: \"sameDate\",\n    value: function sameDate(first, second) {\n      if (first && second) {\n        var firstValid = this.isValid(first);\n        var secondValid = this.isValid(second);\n\n        if (firstValid && secondValid) {\n          return !this.compareDate(first, second);\n        }\n\n        return firstValid == secondValid;\n      }\n\n      return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n\n  }, {\n    key: \"clampDate\",\n    value: function clampDate(date, min, max) {\n      if (min && this.compareDate(date, min) < 0) {\n        return min;\n      }\n\n      if (max && this.compareDate(date, max) > 0) {\n        return max;\n      }\n\n      return date;\n    }\n  }]);\n\n  return DateAdapter;\n}();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\n\nvar ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\n\nfunction range(length, valueFunction) {\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\n\n\nvar NativeDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(NativeDateAdapter, _DateAdapter);\n\n  var _super7 = _createSuper(NativeDateAdapter);\n\n  function NativeDateAdapter(matDateLocale,\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  _platform) {\n    var _thisSuper, _this7;\n\n    _classCallCheck(this, NativeDateAdapter);\n\n    _this7 = _super7.call(this);\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n\n    _this7.useUtcForDisplay = false;\n\n    _get((_thisSuper = _assertThisInitialized(_this7), _getPrototypeOf(NativeDateAdapter.prototype)), \"setLocale\", _thisSuper).call(_thisSuper, matDateLocale);\n\n    return _this7;\n  }\n\n  _createClass(NativeDateAdapter, [{\n    key: \"getYear\",\n    value: function getYear(date) {\n      return date.getFullYear();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return date.getMonth();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return date.getDate();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return date.getDay();\n    }\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      var _this8 = this;\n\n      var dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, function (i) {\n        return _this8._format(dtf, new Date(2017, i, 1));\n      });\n    }\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      var _this9 = this;\n\n      var dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, function (i) {\n        return _this9._format(dtf, new Date(2017, 0, i + 1));\n      });\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      var _this10 = this;\n\n      var dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, function (i) {\n        return _this10._format(dtf, new Date(2017, 0, i + 1));\n      });\n    }\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      var dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return new Date(date.getTime());\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n        }\n\n        if (date < 1) {\n          throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n        }\n      }\n\n      var result = this._createDateWithOverflow(year, month, date); // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n\n\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return new Date();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, parseFormat) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n\n      return value ? new Date(Date.parse(value)) : null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n\n      var dtf = new Intl.DateTimeFormat(this.locale, Object.assign(Object.assign({}, displayFormat), {\n        timeZone: 'utc'\n      }));\n      return this._format(dtf, date);\n    }\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      var newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date)); // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n\n\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n\n      return newDate;\n    }\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        } // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n\n\n        if (ISO_8601_REGEX.test(value)) {\n          var date = new Date(value);\n\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n\n      return _get(_getPrototypeOf(NativeDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return !isNaN(date.getTime());\n    }\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n\n  }, {\n    key: \"_createDateWithOverflow\",\n    value: function _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      var d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n\n  }, {\n    key: \"_2digit\",\n    value: function _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n\n  }, {\n    key: \"_format\",\n    value: function _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      var d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n  }]);\n\n  return NativeDateAdapter;\n}(DateAdapter);\n\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(i1$1.Platform));\n};\n\nNativeDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: i1$1.Platform\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar NativeDateModule = /*#__PURE__*/_createClass(function NativeDateModule() {\n  _classCallCheck(this, NativeDateModule);\n});\n\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\n\nNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\nvar MatNativeDateModule = /*#__PURE__*/_createClass(function MatNativeDateModule() {\n  _classCallCheck(this, MatNativeDateModule);\n});\n\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\n\nMatNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: MAT_NATIVE_DATE_FORMATS\n  }],\n  imports: [NativeDateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_NATIVE_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n\n\nvar ShowOnDirtyErrorStateMatcher = /*#__PURE__*/function () {\n  function ShowOnDirtyErrorStateMatcher() {\n    _classCallCheck(this, ShowOnDirtyErrorStateMatcher);\n  }\n\n  _createClass(ShowOnDirtyErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n  }]);\n\n  return ShowOnDirtyErrorStateMatcher;\n}();\n\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\n\nShowOnDirtyErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n\n\nvar ErrorStateMatcher = /*#__PURE__*/function () {\n  function ErrorStateMatcher() {\n    _classCallCheck(this, ErrorStateMatcher);\n  }\n\n  _createClass(ErrorStateMatcher, [{\n    key: \"isErrorState\",\n    value: function isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n  }]);\n\n  return ErrorStateMatcher;\n}();\n\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\n\nErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\n\n\nvar MatLine = /*#__PURE__*/_createClass(function MatLine() {\n  _classCallCheck(this, MatLine);\n});\n\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\n\nMatLine.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\n\n\nfunction setLines(lines, element) {\n  var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'mat';\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(function (_ref) {\n    var length = _ref.length;\n    setClass(element, \"\".concat(prefix, \"-2-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-3-line\"), false);\n    setClass(element, \"\".concat(prefix, \"-multi-line\"), false);\n\n    if (length === 2 || length === 3) {\n      setClass(element, \"\".concat(prefix, \"-\").concat(length, \"-line\"), true);\n    } else if (length > 3) {\n      setClass(element, \"\".concat(prefix, \"-multi-line\"), true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\n\n\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\n\nvar MatLineModule = /*#__PURE__*/_createClass(function MatLineModule() {\n  _classCallCheck(this, MatLineModule);\n});\n\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\n\nMatLineModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Reference to a previously launched ripple element.\n */\n\n\nvar RippleRef = /*#__PURE__*/function () {\n  function RippleRef(_renderer,\n  /** Reference to the ripple HTML element. */\n  element,\n  /** Ripple configuration used for the ripple. */\n  config) {\n    var _animationForciblyDisabledThroughCss = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n    _classCallCheck(this, RippleRef);\n\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n\n    this.state = 3\n    /* RippleState.HIDDEN */\n    ;\n  }\n  /** Fades out the ripple element. */\n\n\n  _createClass(RippleRef, [{\n    key: \"fadeOut\",\n    value: function fadeOut() {\n      this._renderer.fadeOutRipple(this);\n    }\n  }]);\n\n  return RippleRef;\n}(); // TODO: import these values from `@material/ripple` eventually.\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\n\n\nvar defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\n\nvar ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\n\nvar passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\n\nvar pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\n\nvar pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\n\nvar RippleRenderer = /*#__PURE__*/function () {\n  function RippleRenderer(_target, _ngZone, elementOrElementRef, platform) {\n    _classCallCheck(this, RippleRenderer);\n\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n\n    this._pointerUpEventsRegistered = false; // Only do anything if we're on the browser.\n\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n\n\n  _createClass(RippleRenderer, [{\n    key: \"fadeInRipple\",\n    value: function fadeInRipple(x, y) {\n      var _this11 = this;\n\n      var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n\n      if (config.centered) {\n        x = containerRect.left + containerRect.width / 2;\n        y = containerRect.top + containerRect.height / 2;\n      }\n\n      var radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n      var offsetX = x - containerRect.left;\n      var offsetY = y - containerRect.top;\n      var enterDuration = animationConfig.enterDuration;\n      var ripple = document.createElement('div');\n      ripple.classList.add('mat-ripple-element');\n      ripple.style.left = \"\".concat(offsetX - radius, \"px\");\n      ripple.style.top = \"\".concat(offsetY - radius, \"px\");\n      ripple.style.height = \"\".concat(radius * 2, \"px\");\n      ripple.style.width = \"\".concat(radius * 2, \"px\"); // If a custom color has been specified, set it as inline style. If no color is\n      // set, the default color will be applied through the ripple theme styles.\n\n      if (config.color != null) {\n        ripple.style.backgroundColor = config.color;\n      }\n\n      ripple.style.transitionDuration = \"\".concat(enterDuration, \"ms\");\n\n      this._containerElement.appendChild(ripple); // By default the browser does not recalculate the styles of dynamically created\n      // ripple elements. This is critical to ensure that the `scale` animates properly.\n      // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n      // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n\n\n      var computedStyles = window.getComputedStyle(ripple);\n      var userTransitionProperty = computedStyles.transitionProperty;\n      var userTransitionDuration = computedStyles.transitionDuration; // Note: We detect whether animation is forcibly disabled through CSS by the use of\n      // `transition: none`. This is technically unexpected since animations are controlled\n      // through the animation config, but this exists for backwards compatibility. This logic does\n      // not need to be super accurate since it covers some edge cases which can be easily avoided by users.\n\n      var animationForciblyDisabledThroughCss = userTransitionProperty === 'none' || // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n      // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n      userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s'; // Exposed reference to the ripple that will be returned.\n\n      var rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss); // Start the enter animation by setting the transform/scale to 100%. The animation will\n      // execute as part of this statement because we forced a style recalculation before.\n      // Note: We use a 3d transform here in order to avoid an issue in Safari where\n      // the ripples aren't clipped when inside the shadow DOM (see #24028).\n\n      ripple.style.transform = 'scale3d(1, 1, 1)';\n      rippleRef.state = 0\n      /* RippleState.FADING_IN */\n      ;\n\n      if (!config.persistent) {\n        this._mostRecentTransientRipple = rippleRef;\n      }\n\n      var eventListeners = null; // Do not register the `transition` event listener if fade-in and fade-out duration\n      // are set to zero. The events won't fire anyway and we can save resources here.\n\n      if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n        this._ngZone.runOutsideAngular(function () {\n          var onTransitionEnd = function onTransitionEnd() {\n            return _this11._finishRippleTransition(rippleRef);\n          };\n\n          var onTransitionCancel = function onTransitionCancel() {\n            return _this11._destroyRipple(rippleRef);\n          };\n\n          ripple.addEventListener('transitionend', onTransitionEnd); // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n          // directly as otherwise we would keep it part of the ripple container forever.\n          // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n\n          ripple.addEventListener('transitioncancel', onTransitionCancel);\n          eventListeners = {\n            onTransitionEnd: onTransitionEnd,\n            onTransitionCancel: onTransitionCancel\n          };\n        });\n      } // Add the ripple reference to the list of all active ripples.\n\n\n      this._activeRipples.set(rippleRef, eventListeners); // In case there is no fade-in transition duration, we need to manually call the transition\n      // end listener because `transitionend` doesn't fire if there is no transition.\n\n\n      if (animationForciblyDisabledThroughCss || !enterDuration) {\n        this._finishRippleTransition(rippleRef);\n      }\n\n      return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n\n  }, {\n    key: \"fadeOutRipple\",\n    value: function fadeOutRipple(rippleRef) {\n      // For ripples already fading out or hidden, this should be a noop.\n      if (rippleRef.state === 2\n      /* RippleState.FADING_OUT */\n      || rippleRef.state === 3\n      /* RippleState.HIDDEN */\n      ) {\n        return;\n      }\n\n      var rippleEl = rippleRef.element;\n      var animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation); // This starts the fade-out transition and will fire the transition end listener that\n      // removes the ripple element from the DOM.\n\n      rippleEl.style.transitionDuration = \"\".concat(animationConfig.exitDuration, \"ms\");\n      rippleEl.style.opacity = '0';\n      rippleRef.state = 2\n      /* RippleState.FADING_OUT */\n      ; // In case there is no fade-out transition duration, we need to manually call the\n      // transition end listener because `transitionend` doesn't fire if there is no transition.\n\n      if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n        this._finishRippleTransition(rippleRef);\n      }\n    }\n    /** Fades out all currently active ripples. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._getActiveRipples().forEach(function (ripple) {\n        return ripple.fadeOut();\n      });\n    }\n    /** Fades out all currently active non-persistent ripples. */\n\n  }, {\n    key: \"fadeOutAllNonPersistent\",\n    value: function fadeOutAllNonPersistent() {\n      this._getActiveRipples().forEach(function (ripple) {\n        if (!ripple.config.persistent) {\n          ripple.fadeOut();\n        }\n      });\n    }\n    /** Sets up the trigger event listeners */\n\n  }, {\n    key: \"setupTriggerEvents\",\n    value: function setupTriggerEvents(elementOrElementRef) {\n      var element = coerceElement(elementOrElementRef);\n\n      if (!element || element === this._triggerElement) {\n        return;\n      } // Remove all previously registered event listeners from the trigger element.\n\n\n      this._removeTriggerEvents();\n\n      this._triggerElement = element;\n\n      this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      if (event.type === 'mousedown') {\n        this._onMousedown(event);\n      } else if (event.type === 'touchstart') {\n        this._onTouchStart(event);\n      } else {\n        this._onPointerUp();\n      } // If pointer-up events haven't been registered yet, do so now.\n      // We do this on-demand in order to reduce the total number of event listeners\n      // registered by the ripples, which speeds up the rendering time for large UIs.\n\n\n      if (!this._pointerUpEventsRegistered) {\n        this._registerEvents(pointerUpEvents);\n\n        this._pointerUpEventsRegistered = true;\n      }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n\n  }, {\n    key: \"_finishRippleTransition\",\n    value: function _finishRippleTransition(rippleRef) {\n      if (rippleRef.state === 0\n      /* RippleState.FADING_IN */\n      ) {\n        this._startFadeOutTransition(rippleRef);\n      } else if (rippleRef.state === 2\n      /* RippleState.FADING_OUT */\n      ) {\n        this._destroyRipple(rippleRef);\n      }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n\n  }, {\n    key: \"_startFadeOutTransition\",\n    value: function _startFadeOutTransition(rippleRef) {\n      var isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      var persistent = rippleRef.config.persistent;\n      rippleRef.state = 1\n      /* RippleState.VISIBLE */\n      ; // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n\n      if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n\n  }, {\n    key: \"_destroyRipple\",\n    value: function _destroyRipple(rippleRef) {\n      var _a;\n\n      var eventListeners = (_a = this._activeRipples.get(rippleRef)) !== null && _a !== void 0 ? _a : null;\n\n      this._activeRipples.delete(rippleRef); // Clear out the cached bounding rect if we have no more ripples.\n\n\n      if (!this._activeRipples.size) {\n        this._containerRect = null;\n      } // If the current ref is the most recent transient ripple, unset it\n      // avoid memory leaks.\n\n\n      if (rippleRef === this._mostRecentTransientRipple) {\n        this._mostRecentTransientRipple = null;\n      }\n\n      rippleRef.state = 3\n      /* RippleState.HIDDEN */\n      ;\n\n      if (eventListeners !== null) {\n        rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n        rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n      }\n\n      rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n\n  }, {\n    key: \"_onMousedown\",\n    value: function _onMousedown(event) {\n      // Screen readers will fire fake mouse events for space/enter. Skip launching a\n      // ripple in this case for consistency with the non-screen-reader experience.\n      var isFakeMousedown = isFakeMousedownFromScreenReader(event);\n      var isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n\n      if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n        this._isPointerDown = true;\n        this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n      }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n        // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n        // events will launch a second ripple if we don't ignore mouse events for a specific\n        // time after a touchstart event.\n        this._lastTouchStartEvent = Date.now();\n        this._isPointerDown = true; // Use `changedTouches` so we skip any touches where the user put\n        // their finger down, but used another finger to tap the element again.\n\n        var touches = event.changedTouches;\n\n        for (var i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n    /** Function being called whenever the trigger is being released. */\n\n  }, {\n    key: \"_onPointerUp\",\n    value: function _onPointerUp() {\n      if (!this._isPointerDown) {\n        return;\n      }\n\n      this._isPointerDown = false; // Fade-out all ripples that are visible and not persistent.\n\n      this._getActiveRipples().forEach(function (ripple) {\n        // By default, only ripples that are completely visible will fade out on pointer release.\n        // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n        var isVisible = ripple.state === 1\n        /* RippleState.VISIBLE */\n        || ripple.config.terminateOnPointerUp && ripple.state === 0\n        /* RippleState.FADING_IN */\n        ;\n\n        if (!ripple.config.persistent && isVisible) {\n          ripple.fadeOut();\n        }\n      });\n    }\n    /** Registers event listeners for a given list of events. */\n\n  }, {\n    key: \"_registerEvents\",\n    value: function _registerEvents(eventTypes) {\n      var _this12 = this;\n\n      this._ngZone.runOutsideAngular(function () {\n        eventTypes.forEach(function (type) {\n          _this12._triggerElement.addEventListener(type, _this12, passiveEventOptions);\n        });\n      });\n    }\n  }, {\n    key: \"_getActiveRipples\",\n    value: function _getActiveRipples() {\n      return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n\n  }, {\n    key: \"_removeTriggerEvents\",\n    value: function _removeTriggerEvents() {\n      var _this13 = this;\n\n      if (this._triggerElement) {\n        pointerDownEvents.forEach(function (type) {\n          _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n        });\n\n        if (this._pointerUpEventsRegistered) {\n          pointerUpEvents.forEach(function (type) {\n            _this13._triggerElement.removeEventListener(type, _this13, passiveEventOptions);\n          });\n        }\n      }\n    }\n  }]);\n\n  return RippleRenderer;\n}();\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\n\n\nfunction distanceToFurthestCorner(x, y, rect) {\n  var distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  var distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n/** Injection token that can be used to specify the global ripple options. */\n\n\nvar MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\n\nvar MatRipple = /*#__PURE__*/function () {\n  function MatRipple(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    _classCallCheck(this, MatRipple);\n\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n\n\n  _createClass(MatRipple, [{\n    key: \"disabled\",\n    get: function get() {\n      return this._disabled;\n    },\n    set: function set(value) {\n      if (value) {\n        this.fadeOutAllNonPersistent();\n      }\n\n      this._disabled = value;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n\n  }, {\n    key: \"trigger\",\n    get: function get() {\n      return this._trigger || this._elementRef.nativeElement;\n    },\n    set: function set(trigger) {\n      this._trigger = trigger;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this._isInitialized = true;\n\n      this._setupTriggerEventsIfEnabled();\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n\n  }, {\n    key: \"fadeOutAll\",\n    value: function fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n\n  }, {\n    key: \"fadeOutAllNonPersistent\",\n    value: function fadeOutAllNonPersistent() {\n      this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"rippleConfig\",\n    get: function get() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}), this.animation),\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n\n  }, {\n    key: \"rippleDisabled\",\n    get: function get() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n\n  }, {\n    key: \"_setupTriggerEventsIfEnabled\",\n    value: function _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n\n  }, {\n    key: \"launch\",\n    value: function launch(configOrX) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var config = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n      }\n    }\n  }]);\n\n  return MatRipple;\n}();\n\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatRipple.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    radius: [\"matRippleRadius\", \"radius\"],\n    animation: [\"matRippleAnimation\", \"animation\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatRippleModule = /*#__PURE__*/_createClass(function MatRippleModule() {\n  _classCallCheck(this, MatRippleModule);\n});\n\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\n\nMatRippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule, MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n\n\nvar MatPseudoCheckbox = /*#__PURE__*/_createClass(function MatPseudoCheckbox(_animationMode) {\n  _classCallCheck(this, MatPseudoCheckbox);\n\n  this._animationMode = _animationMode;\n  /** Display state of the checkbox. */\n\n  this.state = 'unchecked';\n  /** Whether the checkbox is disabled. */\n\n  this.disabled = false;\n});\n\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n\nMatPseudoCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatPseudoCheckboxModule = /*#__PURE__*/_createClass(function MatPseudoCheckboxModule() {\n  _classCallCheck(this, MatPseudoCheckboxModule);\n});\n\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\n\nMatPseudoCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent component to options.\n */\n\n\nvar MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n\n/** @docs-private */\n\nvar _MatOptgroupMixinBase = mixinDisabled( /*#__PURE__*/function () {\n  function _class7() {\n    _classCallCheck(this, _class7);\n  }\n\n  return _createClass(_class7);\n}()); // Counter for unique group ids.\n\n\nvar _uniqueOptgroupIdCounter = 0;\n\nvar _MatOptgroupBase = /*#__PURE__*/function (_MatOptgroupMixinBase2) {\n  _inherits(_MatOptgroupBase, _MatOptgroupMixinBase2);\n\n  var _super8 = _createSuper(_MatOptgroupBase);\n\n  function _MatOptgroupBase(parent) {\n    var _this14;\n\n    _classCallCheck(this, _MatOptgroupBase);\n\n    var _a;\n\n    _this14 = _super8.call(this);\n    /** Unique id for the underlying label. */\n\n    _this14._labelId = \"mat-optgroup-label-\".concat(_uniqueOptgroupIdCounter++);\n    _this14._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    return _this14;\n  }\n\n  return _createClass(_MatOptgroupBase);\n}(_MatOptgroupMixinBase);\n\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n\n_MatOptgroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\n\n\nvar MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\n\nvar MatOptgroup = /*#__PURE__*/function (_MatOptgroupBase2) {\n  _inherits(MatOptgroup, _MatOptgroupBase2);\n\n  var _super9 = _createSuper(MatOptgroup);\n\n  function MatOptgroup() {\n    _classCallCheck(this, MatOptgroup);\n\n    return _super9.apply(this, arguments);\n  }\n\n  return _createClass(MatOptgroup);\n}(_MatOptgroupBase);\n\nMatOptgroup.ɵfac = /* @__PURE__ */function () {\n  var ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = i0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\n\nMatOptgroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-optgroup\"],\n  hostVars: 5,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      i0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(3, 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx._labelId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n        '[class.mat-optgroup-disabled]': 'disabled'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\n\n\nvar _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\n\nvar MatOptionSelectionChange = /*#__PURE__*/_createClass(function MatOptionSelectionChange(\n/** Reference to the option that emitted the event. */\nsource) {\n  var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  _classCallCheck(this, MatOptionSelectionChange);\n\n  this.source = source;\n  this.isUserInput = isUserInput;\n});\n\nvar _MatOptionBase = /*#__PURE__*/function () {\n  function _MatOptionBase(_element, _changeDetectorRef, _parent, group) {\n    _classCallCheck(this, _MatOptionBase);\n\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n\n    this.id = \"mat-option-\".concat(_uniqueIdCounter++);\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n\n\n  _createClass(_MatOptionBase, [{\n    key: \"multiple\",\n    get: function get() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this.group && this.group.disabled || this._disabled;\n    },\n    set: function set(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n\n  }, {\n    key: \"disableRipple\",\n    get: function get() {\n      return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n\n  }, {\n    key: \"active\",\n    get: function get() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n\n  }, {\n    key: \"viewValue\",\n    get: function get() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      if (!this._selected) {\n        this._selected = true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Deselects the option. */\n\n  }, {\n    key: \"deselect\",\n    value: function deselect() {\n      if (this._selected) {\n        this._selected = false;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent();\n      }\n    }\n    /** Sets focus onto this option. */\n\n  }, {\n    key: \"focus\",\n    value: function focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      var element = this._getHostElement();\n\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setActiveStyles\",\n    value: function setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n\n  }, {\n    key: \"setInactiveStyles\",\n    value: function setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n\n  }, {\n    key: \"_handleKeydown\",\n    value: function _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction(); // Prevent the page from scrolling down and form submits.\n\n\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n\n  }, {\n    key: \"_selectViaInteraction\",\n    value: function _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n\n        this._changeDetectorRef.markForCheck();\n\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n\n  }, {\n    key: \"_getAriaSelected\",\n    value: function _getAriaSelected() {\n      return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n\n  }, {\n    key: \"_getTabIndex\",\n    value: function _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n\n  }, {\n    key: \"_getHostElement\",\n    value: function _getHostElement() {\n      return this._element.nativeElement;\n    }\n  }, {\n    key: \"ngAfterViewChecked\",\n    value: function ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        var viewValue = this.viewValue;\n\n        if (viewValue !== this._mostRecentViewValue) {\n          this._mostRecentViewValue = viewValue;\n\n          this._stateChanges.next();\n        }\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n\n  }, {\n    key: \"_emitSelectionChangeEvent\",\n    value: function _emitSelectionChangeEvent() {\n      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n  }]);\n\n  return _MatOptionBase;\n}();\n\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\n\n_MatOptionBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    value: \"value\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\n\n\nvar MatOption = /*#__PURE__*/function (_MatOptionBase2) {\n  _inherits(MatOption, _MatOptionBase2);\n\n  var _super10 = _createSuper(MatOption);\n\n  function MatOption(element, changeDetectorRef, parent, group) {\n    _classCallCheck(this, MatOption);\n\n    return _super10.call(this, element, changeDetectorRef, parent, group);\n  }\n\n  return _createClass(MatOption);\n}(_MatOptionBase);\n\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\n\nMatOption.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      i0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 4,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n      i0.ɵɵelement(4, \"div\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  dependencies: [MatRipple, i3.NgIf, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\n\n\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    var optionsArray = options.toArray();\n    var groups = optionGroups.toArray();\n    var groupCounter = 0;\n\n    for (var i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n\n    return groupCounter;\n  }\n\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\n\n\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n\n  return currentScrollPosition;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MatOptionModule = /*#__PURE__*/_createClass(function MatOptionModule() {\n  _classCallCheck(this, MatOptionModule);\n});\n\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\n\nMatOptionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };","map":{"version":3,"names":["i0","Version","InjectionToken","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","Output","BidiModule","VERSION","VERSION$1","i3","DOCUMENT","CommonModule","i1$1","_isTestEnvironment","normalizePassiveListenerOptions","i1","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","coerceBooleanProperty","coerceNumberProperty","coerceElement","Observable","Subject","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","highContrastModeDetector","_sanityChecks","_document","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","ngDevMode","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","name","ɵfac","HighContrastModeDetector","ɵmod","ɵinj","type","args","imports","exports","undefined","decorators","Document","doc","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","remove","full","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","mixinDisableRipple","_disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","disabled","mixinErrorState","errorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","stateChanges","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","obj","isDateInstance","isValid","invalid","locale","first","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","_platform","useUtcForDisplay","getFullYear","getDay","style","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","result","parseFormat","parse","displayFormat","Object","assign","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","format","Platform","ɵprov","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","provide","useClass","providers","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MatLine","ɵdir","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","toggle","MatLineModule","declarations","RippleRef","_renderer","config","_animationForciblyDisabledThroughCss","state","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","platform","_isPointerDown","_activeRipples","Map","_pointerUpEventsRegistered","isBrowser","_containerElement","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","ripple","document","backgroundColor","transitionDuration","computedStyles","window","userTransitionProperty","transitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","transform","persistent","_mostRecentTransientRipple","eventListeners","runOutsideAngular","onTransitionEnd","_finishRippleTransition","onTransitionCancel","_destroyRipple","addEventListener","set","rippleEl","opacity","_getActiveRipples","fadeOut","_triggerElement","_removeTriggerEvents","_registerEvents","event","_onMousedown","_onTouchStart","_onPointerUp","_startFadeOutTransition","isMostRecentTransientRipple","_a","get","delete","size","removeEventListener","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","eventTypes","from","keys","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","fadeOutAllNonPersistent","_setupTriggerEventsIfEnabled","_trigger","trigger","fadeOutAll","setupTriggerEvents","configOrX","ElementRef","NgZone","exportAs","unbounded","MatRippleModule","MatPseudoCheckbox","ɵcmp","encapsulation","None","changeDetection","OnPush","template","styles","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","label","MAT_OPTGROUP","MatOptgroup","useExisting","inputs","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","group","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","disableRipple","_getHostElement","textContent","trim","markForCheck","_emitSelectionChangeEvent","_origin","options","focus","viewValue","keyCode","_selectViaInteraction","preventDefault","selected","emit","ChangeDetectorRef","MatOption","changeDetectorRef","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/@angular/material/fesm2015/core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('14.1.3');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCommonModule, imports: [BidiModule, BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MATERIAL_SANITY_CHECKS]\n                    }] }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value, parseFormat) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' }));\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_LOCALE]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [NativeDateModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLineModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config, \n    /* Whether animations are forcibly disabled for ripples through CSS. */\n    _animationForciblyDisabledThroughCss = false) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n        /** Current state of the ripple. */\n        this.state = 3 /* RippleState.HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /**\n         * Map of currently active ripple references.\n         * The ripple reference is mapped to its element event listeners.\n         * The reason why `| null` is used is that event listeners are added only\n         * when the condition is truthy (see the `_startFadeOutTransition` method).\n         */\n        this._activeRipples = new Map();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const enterDuration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${enterDuration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical to ensure that the `scale` animates properly.\n        // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n        // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n        const computedStyles = window.getComputedStyle(ripple);\n        const userTransitionProperty = computedStyles.transitionProperty;\n        const userTransitionDuration = computedStyles.transitionDuration;\n        // Note: We detect whether animation is forcibly disabled through CSS by the use of\n        // `transition: none`. This is technically unexpected since animations are controlled\n        // through the animation config, but this exists for backwards compatibility. This logic does\n        // not need to be super accurate since it covers some edge cases which can be easily avoided by users.\n        const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n            // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n            // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n            userTransitionDuration === '0s' ||\n            userTransitionDuration === '0s, 0s';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n        // Start the enter animation by setting the transform/scale to 100%. The animation will\n        // execute as part of this statement because we forced a style recalculation before.\n        // Note: We use a 3d transform here in order to avoid an issue in Safari where\n        // the ripples aren't clipped when inside the shadow DOM (see #24028).\n        ripple.style.transform = 'scale3d(1, 1, 1)';\n        rippleRef.state = 0 /* RippleState.FADING_IN */;\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        let eventListeners = null;\n        // Do not register the `transition` event listener if fade-in and fade-out duration\n        // are set to zero. The events won't fire anyway and we can save resources here.\n        if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n            this._ngZone.runOutsideAngular(() => {\n                const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n                const onTransitionCancel = () => this._destroyRipple(rippleRef);\n                ripple.addEventListener('transitionend', onTransitionEnd);\n                // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n                // directly as otherwise we would keep it part of the ripple container forever.\n                // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n                ripple.addEventListener('transitioncancel', onTransitionCancel);\n                eventListeners = { onTransitionEnd, onTransitionCancel };\n            });\n        }\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.set(rippleRef, eventListeners);\n        // In case there is no fade-in transition duration, we need to manually call the transition\n        // end listener because `transitionend` doesn't fire if there is no transition.\n        if (animationForciblyDisabledThroughCss || !enterDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        // For ripples already fading out or hidden, this should be a noop.\n        if (rippleRef.state === 2 /* RippleState.FADING_OUT */ || rippleRef.state === 3 /* RippleState.HIDDEN */) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        // This starts the fade-out transition and will fire the transition end listener that\n        // removes the ripple element from the DOM.\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* RippleState.FADING_OUT */;\n        // In case there is no fade-out transition duration, we need to manually call the\n        // transition end listener because `transitionend` doesn't fire if there is no transition.\n        if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n            this._finishRippleTransition(rippleRef);\n        }\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._getActiveRipples().forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Method that will be called if the fade-in or fade-in transition completed. */\n    _finishRippleTransition(rippleRef) {\n        if (rippleRef.state === 0 /* RippleState.FADING_IN */) {\n            this._startFadeOutTransition(rippleRef);\n        }\n        else if (rippleRef.state === 2 /* RippleState.FADING_OUT */) {\n            this._destroyRipple(rippleRef);\n        }\n    }\n    /**\n     * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n     * is not held down anymore.\n     */\n    _startFadeOutTransition(rippleRef) {\n        const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n        const { persistent } = rippleRef.config;\n        rippleRef.state = 1 /* RippleState.VISIBLE */;\n        // When the timer runs out while the user has kept their pointer down, we want to\n        // keep only the persistent ripples and the latest transient ripple. We do this,\n        // because we don't want stacked transient ripples to appear after their enter\n        // animation has finished.\n        if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n            rippleRef.fadeOut();\n        }\n    }\n    /** Destroys the given ripple by removing it from the DOM and updating its state. */\n    _destroyRipple(rippleRef) {\n        var _a;\n        const eventListeners = (_a = this._activeRipples.get(rippleRef)) !== null && _a !== void 0 ? _a : null;\n        this._activeRipples.delete(rippleRef);\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // If the current ref is the most recent transient ripple, unset it\n        // avoid memory leaks.\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        rippleRef.state = 3 /* RippleState.HIDDEN */;\n        if (eventListeners !== null) {\n            rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n            rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n        }\n        rippleRef.element.remove();\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._getActiveRipples().forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* RippleState.VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* RippleState.FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    _getActiveRipples() {\n        return Array.from(this._activeRipples.keys());\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRippleModule, imports: [MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_OPTION_PARENT_COMPONENT]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.0.1\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.0.1\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"], dependencies: [{ kind: \"directive\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.mat-option.mat-active::before{content:\\\"\\\"}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-option.mat-selected:not(.mat-option-multiple)::after{right:auto;left:16px}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_OPTION_PARENT_COMPONENT]\n                    }] }, { type: MatOptgroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_OPTGROUP]\n                    }] }];\n    } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptionModule, imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}