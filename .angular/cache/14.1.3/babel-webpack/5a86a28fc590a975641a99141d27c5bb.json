{"ast":null,"code":"import _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { NgModule, ɵɵdefineInjectable, Injectable, ɵɵinject, Injector } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take, map } from 'rxjs/operators';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\n\nvar AbpModule = /*#__PURE__*/_createClass(function AbpModule() {\n  _classCallCheck(this, AbpModule);\n});\n\nAbpModule.ɵfac = function AbpModule_Factory(t) {\n  return new (t || AbpModule)();\n};\n\nAbpModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: AbpModule\n});\nAbpModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [],\n      imports: [],\n      exports: []\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar TokenService = /*#__PURE__*/function () {\n  function TokenService() {\n    _classCallCheck(this, TokenService);\n  }\n\n  _createClass(TokenService, [{\n    key: \"getToken\",\n    value: function getToken() {\n      return abp.auth.getToken();\n    }\n  }, {\n    key: \"getTokenCookieName\",\n    value: function getTokenCookieName() {\n      return abp.auth.tokenCookieName;\n    }\n  }, {\n    key: \"clearToken\",\n    value: function clearToken() {\n      abp.auth.clearToken();\n    }\n  }, {\n    key: \"setToken\",\n    value: function setToken(authToken, expireDate) {\n      abp.auth.setToken(authToken, expireDate);\n    } //refresh token\n\n  }, {\n    key: \"getRefreshToken\",\n    value: function getRefreshToken() {\n      return abp.auth.getRefreshToken();\n    }\n  }, {\n    key: \"getRefreshTokenCookieName\",\n    value: function getRefreshTokenCookieName() {\n      return abp.auth.refreshTokenCookieName;\n    }\n  }, {\n    key: \"clearRefreshToken\",\n    value: function clearRefreshToken() {\n      abp.auth.clearRefreshToken();\n    }\n  }, {\n    key: \"setRefreshToken\",\n    value: function setRefreshToken(refreshToken, expireDate) {\n      abp.auth.setRefreshToken(refreshToken, expireDate);\n    }\n  }]);\n\n  return TokenService;\n}();\n\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)();\n};\n\nTokenService.ɵprov = ɵɵdefineInjectable({\n  factory: function TokenService_Factory() {\n    return new TokenService();\n  },\n  token: TokenService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TokenService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar PermissionCheckerService = /*#__PURE__*/function () {\n  function PermissionCheckerService() {\n    _classCallCheck(this, PermissionCheckerService);\n  }\n\n  _createClass(PermissionCheckerService, [{\n    key: \"isGranted\",\n    value: function isGranted(permissionName) {\n      return abp.auth.isGranted(permissionName);\n    }\n  }]);\n\n  return PermissionCheckerService;\n}();\n\nPermissionCheckerService.ɵfac = function PermissionCheckerService_Factory(t) {\n  return new (t || PermissionCheckerService)();\n};\n\nPermissionCheckerService.ɵprov = ɵɵdefineInjectable({\n  factory: function PermissionCheckerService_Factory() {\n    return new PermissionCheckerService();\n  },\n  token: PermissionCheckerService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PermissionCheckerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar FeatureCheckerService = /*#__PURE__*/function () {\n  function FeatureCheckerService() {\n    _classCallCheck(this, FeatureCheckerService);\n  }\n\n  _createClass(FeatureCheckerService, [{\n    key: \"get\",\n    value: function get(featureName) {\n      return abp.features.get(featureName);\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue(featureName) {\n      return abp.features.getValue(featureName);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(featureName) {\n      return abp.features.isEnabled(featureName);\n    }\n  }]);\n\n  return FeatureCheckerService;\n}();\n\nFeatureCheckerService.ɵfac = function FeatureCheckerService_Factory(t) {\n  return new (t || FeatureCheckerService)();\n};\n\nFeatureCheckerService.ɵprov = ɵɵdefineInjectable({\n  factory: function FeatureCheckerService_Factory() {\n    return new FeatureCheckerService();\n  },\n  token: FeatureCheckerService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FeatureCheckerService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar LocalizationService = /*#__PURE__*/function () {\n  function LocalizationService() {\n    _classCallCheck(this, LocalizationService);\n  }\n\n  _createClass(LocalizationService, [{\n    key: \"languages\",\n    get: function get() {\n      return abp.localization.languages;\n    }\n  }, {\n    key: \"currentLanguage\",\n    get: function get() {\n      return abp.localization.currentLanguage;\n    }\n  }, {\n    key: \"localize\",\n    value: function localize(key, sourceName) {\n      return abp.localization.localize(key, sourceName);\n    }\n  }, {\n    key: \"getSource\",\n    value: function getSource(sourceName) {\n      return abp.localization.getSource(sourceName);\n    }\n  }]);\n\n  return LocalizationService;\n}();\n\nLocalizationService.ɵfac = function LocalizationService_Factory(t) {\n  return new (t || LocalizationService)();\n};\n\nLocalizationService.ɵprov = ɵɵdefineInjectable({\n  factory: function LocalizationService_Factory() {\n    return new LocalizationService();\n  },\n  token: LocalizationService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalizationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar LogService = /*#__PURE__*/function () {\n  function LogService() {\n    _classCallCheck(this, LogService);\n  }\n\n  _createClass(LogService, [{\n    key: \"debug\",\n    value: function debug(logObject) {\n      abp.log.debug(logObject);\n    }\n  }, {\n    key: \"info\",\n    value: function info(logObject) {\n      abp.log.info(logObject);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(logObject) {\n      abp.log.warn(logObject);\n    }\n  }, {\n    key: \"error\",\n    value: function error(logObject) {\n      abp.log.error(logObject);\n    }\n  }, {\n    key: \"fatal\",\n    value: function fatal(logObject) {\n      abp.log.fatal(logObject);\n    }\n  }]);\n\n  return LogService;\n}();\n\nLogService.ɵfac = function LogService_Factory(t) {\n  return new (t || LogService)();\n};\n\nLogService.ɵprov = ɵɵdefineInjectable({\n  factory: function LogService_Factory() {\n    return new LogService();\n  },\n  token: LogService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LogService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar MessageService = /*#__PURE__*/function () {\n  function MessageService() {\n    _classCallCheck(this, MessageService);\n  }\n\n  _createClass(MessageService, [{\n    key: \"info\",\n    value: function info(message, title, options) {\n      return abp.message.info(message, title, options);\n    }\n  }, {\n    key: \"success\",\n    value: function success(message, title, options) {\n      return abp.message.success(message, title, options);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, title, options) {\n      return abp.message.warn(message, title, options);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, title, options) {\n      return abp.message.error(message, title, options);\n    }\n  }, {\n    key: \"confirm\",\n    value: function confirm(message, title, callback, options) {\n      return abp.message.confirm(message, title, callback, options);\n    }\n  }]);\n\n  return MessageService;\n}();\n\nMessageService.ɵfac = function MessageService_Factory(t) {\n  return new (t || MessageService)();\n};\n\nMessageService.ɵprov = ɵɵdefineInjectable({\n  factory: function MessageService_Factory() {\n    return new MessageService();\n  },\n  token: MessageService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpMultiTenancyService = /*#__PURE__*/function () {\n  function AbpMultiTenancyService() {\n    _classCallCheck(this, AbpMultiTenancyService);\n  }\n\n  _createClass(AbpMultiTenancyService, [{\n    key: \"isEnabled\",\n    get: function get() {\n      return abp.multiTenancy.isEnabled;\n    }\n  }]);\n\n  return AbpMultiTenancyService;\n}();\n\nAbpMultiTenancyService.ɵfac = function AbpMultiTenancyService_Factory(t) {\n  return new (t || AbpMultiTenancyService)();\n};\n\nAbpMultiTenancyService.ɵprov = ɵɵdefineInjectable({\n  factory: function AbpMultiTenancyService_Factory() {\n    return new AbpMultiTenancyService();\n  },\n  token: AbpMultiTenancyService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpMultiTenancyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar NotifyService = /*#__PURE__*/function () {\n  function NotifyService() {\n    _classCallCheck(this, NotifyService);\n  }\n\n  _createClass(NotifyService, [{\n    key: \"info\",\n    value: function info(message, title, options) {\n      abp.notify.info(message, title, options);\n    }\n  }, {\n    key: \"success\",\n    value: function success(message, title, options) {\n      abp.notify.success(message, title, options);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message, title, options) {\n      abp.notify.warn(message, title, options);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message, title, options) {\n      abp.notify.error(message, title, options);\n    }\n  }]);\n\n  return NotifyService;\n}();\n\nNotifyService.ɵfac = function NotifyService_Factory(t) {\n  return new (t || NotifyService)();\n};\n\nNotifyService.ɵprov = ɵɵdefineInjectable({\n  factory: function NotifyService_Factory() {\n    return new NotifyService();\n  },\n  token: NotifyService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotifyService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpSessionService = /*#__PURE__*/function () {\n  function AbpSessionService() {\n    _classCallCheck(this, AbpSessionService);\n  }\n\n  _createClass(AbpSessionService, [{\n    key: \"userId\",\n    get: function get() {\n      return abp.session.userId;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return abp.session.tenantId;\n    }\n  }, {\n    key: \"impersonatorUserId\",\n    get: function get() {\n      return abp.session.impersonatorUserId;\n    }\n  }, {\n    key: \"impersonatorTenantId\",\n    get: function get() {\n      return abp.session.impersonatorTenantId;\n    }\n  }, {\n    key: \"multiTenancySide\",\n    get: function get() {\n      return abp.session.multiTenancySide;\n    }\n  }]);\n\n  return AbpSessionService;\n}();\n\nAbpSessionService.ɵfac = function AbpSessionService_Factory(t) {\n  return new (t || AbpSessionService)();\n};\n\nAbpSessionService.ɵprov = ɵɵdefineInjectable({\n  factory: function AbpSessionService_Factory() {\n    return new AbpSessionService();\n  },\n  token: AbpSessionService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpSessionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar SettingService = /*#__PURE__*/function () {\n  function SettingService() {\n    _classCallCheck(this, SettingService);\n  }\n\n  _createClass(SettingService, [{\n    key: \"get\",\n    value: function get(name) {\n      return abp.setting.get(name);\n    }\n  }, {\n    key: \"getBoolean\",\n    value: function getBoolean(name) {\n      return abp.setting.getBoolean(name);\n    }\n  }, {\n    key: \"getInt\",\n    value: function getInt(name) {\n      return abp.setting.getInt(name);\n    }\n  }]);\n\n  return SettingService;\n}();\n\nSettingService.ɵfac = function SettingService_Factory(t) {\n  return new (t || SettingService)();\n};\n\nSettingService.ɵprov = ɵɵdefineInjectable({\n  factory: function SettingService_Factory() {\n    return new SettingService();\n  },\n  token: SettingService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar UtilsService = /*#__PURE__*/function () {\n  function UtilsService() {\n    _classCallCheck(this, UtilsService);\n  }\n\n  _createClass(UtilsService, [{\n    key: \"getCookieValue\",\n    value: function getCookieValue(key) {\n      return abp.utils.getCookieValue(key);\n    }\n  }, {\n    key: \"setCookieValue\",\n    value: function setCookieValue(key, value, expireDate, path, domain, attributes) {\n      abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\n    }\n  }, {\n    key: \"deleteCookie\",\n    value: function deleteCookie(key, path) {\n      abp.utils.deleteCookie(key, path);\n    }\n  }]);\n\n  return UtilsService;\n}();\n\nUtilsService.ɵfac = function UtilsService_Factory(t) {\n  return new (t || UtilsService)();\n};\n\nUtilsService.ɵprov = ɵɵdefineInjectable({\n  factory: function UtilsService_Factory() {\n    return new UtilsService();\n  },\n  token: UtilsService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UtilsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})(); ///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\n\n\nvar AbpUserConfigurationService = /*#__PURE__*/function () {\n  function AbpUserConfigurationService(_http) {\n    _classCallCheck(this, AbpUserConfigurationService);\n\n    this._http = _http;\n  }\n\n  _createClass(AbpUserConfigurationService, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this._http.get('/AbpUserConfiguration/GetAll').subscribe(function (result) {\n        jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\n      });\n    }\n  }]);\n\n  return AbpUserConfigurationService;\n}();\n\nAbpUserConfigurationService.ɵfac = function AbpUserConfigurationService_Factory(t) {\n  return new (t || AbpUserConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient));\n};\n\nAbpUserConfigurationService.ɵprov = ɵɵdefineInjectable({\n  factory: function AbpUserConfigurationService_Factory() {\n    return new AbpUserConfigurationService(ɵɵinject(HttpClient));\n  },\n  token: AbpUserConfigurationService,\n  providedIn: \"root\"\n});\n\nAbpUserConfigurationService.ctorParameters = function () {\n  return [{\n    type: HttpClient\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpUserConfigurationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.HttpClient\n    }];\n  }, null);\n})();\n\nvar AbpHttpConfigurationService = /*#__PURE__*/function () {\n  function AbpHttpConfigurationService(_messageService, _logService) {\n    _classCallCheck(this, AbpHttpConfigurationService);\n\n    this._messageService = _messageService;\n    this._logService = _logService;\n    this.defaultError = {\n      message: 'An error has occurred!',\n      details: 'Error details were not sent by server.'\n    };\n    this.defaultError401 = {\n      message: 'You are not authenticated!',\n      details: 'You should be authenticated (sign in) in order to perform this operation.'\n    };\n    this.defaultError403 = {\n      message: 'You are not authorized!',\n      details: 'You are not allowed to perform this operation.'\n    };\n    this.defaultError404 = {\n      message: 'Resource not found!',\n      details: 'The resource requested could not be found on the server.'\n    };\n  }\n\n  _createClass(AbpHttpConfigurationService, [{\n    key: \"logError\",\n    value: function logError(error) {\n      this._logService.error(error);\n    }\n  }, {\n    key: \"showError\",\n    value: function showError(error) {\n      if (error.details) {\n        return this._messageService.error(error.details, error.message || this.defaultError.message);\n      } else {\n        return this._messageService.error(error.message || this.defaultError.message);\n      }\n    }\n  }, {\n    key: \"handleTargetUrl\",\n    value: function handleTargetUrl(targetUrl) {\n      if (!targetUrl) {\n        location.href = '/';\n      } else {\n        location.href = targetUrl;\n      }\n    }\n  }, {\n    key: \"handleUnAuthorizedRequest\",\n    value: function handleUnAuthorizedRequest(messagePromise, targetUrl) {\n      var _this = this;\n\n      var self = this;\n\n      if (messagePromise) {\n        messagePromise.done(function () {\n          _this.handleTargetUrl(targetUrl || '/');\n        });\n      } else {\n        self.handleTargetUrl(targetUrl || '/');\n      }\n    }\n  }, {\n    key: \"handleNonAbpErrorResponse\",\n    value: function handleNonAbpErrorResponse(response) {\n      var self = this;\n\n      switch (response.status) {\n        case 401:\n          self.handleUnAuthorizedRequest(self.showError(self.defaultError401), '/');\n          break;\n\n        case 403:\n          self.showError(self.defaultError403);\n          break;\n\n        case 404:\n          self.showError(self.defaultError404);\n          break;\n\n        default:\n          self.showError(self.defaultError);\n          break;\n      }\n    }\n  }, {\n    key: \"handleAbpResponse\",\n    value: function handleAbpResponse(response, ajaxResponse) {\n      var newResponse;\n\n      if (ajaxResponse.success) {\n        newResponse = response.clone({\n          body: ajaxResponse.result\n        });\n\n        if (ajaxResponse.targetUrl) {\n          this.handleTargetUrl(ajaxResponse.targetUrl);\n          ;\n        }\n      } else {\n        newResponse = response.clone({\n          body: ajaxResponse.result\n        });\n\n        if (!ajaxResponse.error) {\n          ajaxResponse.error = this.defaultError;\n        }\n\n        this.logError(ajaxResponse.error);\n        this.showError(ajaxResponse.error);\n\n        if (response.status === 401) {\n          this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\n        }\n      }\n\n      return newResponse;\n    }\n  }, {\n    key: \"getAbpAjaxResponseOrNull\",\n    value: function getAbpAjaxResponseOrNull(response) {\n      if (!response || !response.headers) {\n        return null;\n      }\n\n      var contentType = response.headers.get('Content-Type');\n\n      if (!contentType) {\n        this._logService.warn('Content-Type is not sent!');\n\n        return null;\n      }\n\n      if (contentType.indexOf(\"application/json\") < 0) {\n        this._logService.warn('Content-Type is not application/json: ' + contentType);\n\n        return null;\n      }\n\n      var responseObj = JSON.parse(JSON.stringify(response.body));\n\n      if (!responseObj.__abp) {\n        return null;\n      }\n\n      return responseObj;\n    }\n  }, {\n    key: \"handleResponse\",\n    value: function handleResponse(response) {\n      var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\n\n      if (ajaxResponse == null) {\n        return response;\n      }\n\n      return this.handleAbpResponse(response, ajaxResponse);\n    }\n  }, {\n    key: \"blobToText\",\n    value: function blobToText(blob) {\n      return new Observable(function (observer) {\n        if (!blob) {\n          observer.next(\"\");\n          observer.complete();\n        } else {\n          var reader = new FileReader();\n\n          reader.onload = function () {\n            observer.next(this.result);\n            observer.complete();\n          };\n\n          reader.readAsText(blob);\n        }\n      });\n    }\n  }]);\n\n  return AbpHttpConfigurationService;\n}();\n\nAbpHttpConfigurationService.ɵfac = function AbpHttpConfigurationService_Factory(t) {\n  return new (t || AbpHttpConfigurationService)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(LogService));\n};\n\nAbpHttpConfigurationService.ɵprov = ɵɵdefineInjectable({\n  factory: function AbpHttpConfigurationService_Factory() {\n    return new AbpHttpConfigurationService(ɵɵinject(MessageService), ɵɵinject(LogService));\n  },\n  token: AbpHttpConfigurationService,\n  providedIn: \"root\"\n});\n\nAbpHttpConfigurationService.ctorParameters = function () {\n  return [{\n    type: MessageService\n  }, {\n    type: LogService\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpConfigurationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: MessageService\n    }, {\n      type: LogService\n    }];\n  }, null);\n})();\n\nvar RefreshTokenService = /*#__PURE__*/_createClass(function RefreshTokenService() {\n  _classCallCheck(this, RefreshTokenService);\n});\n\nRefreshTokenService.ɵfac = function RefreshTokenService_Factory(t) {\n  return new (t || RefreshTokenService)();\n};\n\nRefreshTokenService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: RefreshTokenService,\n  factory: RefreshTokenService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefreshTokenService, [{\n    type: Injectable\n  }], null, null);\n})();\n\nvar AbpHttpInterceptor = /*#__PURE__*/function () {\n  function AbpHttpInterceptor(configuration, _injector) {\n    _classCallCheck(this, AbpHttpInterceptor);\n\n    this._injector = _injector;\n    this._tokenService = new TokenService();\n    this._utilsService = new UtilsService();\n    this._logService = new LogService();\n    this.isRefreshing = false;\n    this.refreshTokenSubject = new BehaviorSubject(null);\n    this.configuration = configuration;\n  }\n\n  _createClass(AbpHttpInterceptor, [{\n    key: \"intercept\",\n    value: function intercept(request, next) {\n      var _this2 = this;\n\n      var modifiedRequest = this.normalizeRequestHeaders(request);\n      return next.handle(modifiedRequest).pipe(catchError(function (error) {\n        if (error instanceof HttpErrorResponse && error.status === 401) {\n          return _this2.tryAuthWithRefreshToken(request, next, error);\n        } else {\n          return _this2.handleErrorResponse(error);\n        }\n      }), switchMap(function (event) {\n        return _this2.handleSuccessResponse(event);\n      }));\n    }\n  }, {\n    key: \"tryGetRefreshTokenService\",\n    value: function tryGetRefreshTokenService() {\n      var _refreshTokenService = this._injector.get(RefreshTokenService, null);\n\n      if (_refreshTokenService) {\n        return _refreshTokenService.tryAuthWithRefreshToken();\n      }\n\n      return of(false);\n    }\n  }, {\n    key: \"tryAuthWithRefreshToken\",\n    value: function tryAuthWithRefreshToken(request, next, error) {\n      var _this3 = this;\n\n      if (!this.isRefreshing) {\n        this.isRefreshing = true;\n        this.refreshTokenSubject.next(null);\n        return this.tryGetRefreshTokenService().pipe(switchMap(function (authResult) {\n          _this3.isRefreshing = false;\n\n          if (authResult) {\n            _this3.refreshTokenSubject.next(authResult);\n\n            var modifiedRequest = _this3.normalizeRequestHeaders(request);\n\n            return next.handle(modifiedRequest);\n          } else {\n            return _this3.handleErrorResponse(error);\n          }\n        }));\n      } else {\n        return this.refreshTokenSubject.pipe(filter(function (authResult) {\n          return authResult != null;\n        }), take(1), switchMap(function (authResult) {\n          var modifiedRequest = _this3.normalizeRequestHeaders(request);\n\n          return next.handle(modifiedRequest);\n        }));\n      }\n    }\n  }, {\n    key: \"normalizeRequestHeaders\",\n    value: function normalizeRequestHeaders(request) {\n      var modifiedHeaders = new HttpHeaders();\n      modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\").set(\"Cache-Control\", \"no-cache\").set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\n      modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\n      modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\n      modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\n      modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\n      modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\n      return request.clone({\n        headers: modifiedHeaders\n      });\n    }\n  }, {\n    key: \"addXRequestedWithHeader\",\n    value: function addXRequestedWithHeader(headers) {\n      if (headers) {\n        headers = headers.set('X-Requested-With', 'XMLHttpRequest');\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAspNetCoreCultureHeader\",\n    value: function addAspNetCoreCultureHeader(headers) {\n      var cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\n\n      if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\n        headers = headers.set('.AspNetCore.Culture', cookieLangValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAcceptLanguageHeader\",\n    value: function addAcceptLanguageHeader(headers) {\n      var cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\n\n      if (cookieLangValue && headers && !headers.has('Accept-Language')) {\n        headers = headers.set('Accept-Language', cookieLangValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addTenantIdHeader\",\n    value: function addTenantIdHeader(headers) {\n      var cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\n\n      if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\n        headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"addAuthorizationHeaders\",\n    value: function addAuthorizationHeaders(headers) {\n      var authorizationHeaders = headers ? headers.getAll('Authorization') : null;\n\n      if (!authorizationHeaders) {\n        authorizationHeaders = [];\n      }\n\n      if (!this.itemExists(authorizationHeaders, function (item) {\n        return item.indexOf('Bearer ') == 0;\n      })) {\n        var token = this._tokenService.getToken();\n\n        if (headers && token) {\n          headers = headers.set('Authorization', 'Bearer ' + token);\n        }\n      }\n\n      return headers;\n    }\n  }, {\n    key: \"handleSuccessResponse\",\n    value: function handleSuccessResponse(event) {\n      var self = this;\n\n      if (event instanceof HttpResponse) {\n        if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\n          return self.configuration.blobToText(event.body).pipe(map(function (json) {\n            var responseBody = json == \"null\" ? {} : JSON.parse(json);\n            var modifiedResponse = self.configuration.handleResponse(event.clone({\n              body: responseBody\n            }));\n            return modifiedResponse.clone({\n              body: new Blob([JSON.stringify(modifiedResponse.body)], {\n                type: 'application/json'\n              })\n            });\n          }));\n        }\n      }\n\n      return of(event);\n    }\n  }, {\n    key: \"handleErrorResponse\",\n    value: function handleErrorResponse(error) {\n      var _this4 = this;\n\n      if (!(error.error instanceof Blob)) {\n        return throwError(error);\n      }\n\n      return this.configuration.blobToText(error.error).pipe(switchMap(function (json) {\n        var errorBody = json == \"\" || json == \"null\" ? {} : JSON.parse(json);\n        var errorResponse = new HttpResponse({\n          headers: error.headers,\n          status: error.status,\n          body: errorBody\n        });\n\n        var ajaxResponse = _this4.configuration.getAbpAjaxResponseOrNull(errorResponse);\n\n        if (ajaxResponse != null) {\n          _this4.configuration.handleAbpResponse(errorResponse, ajaxResponse);\n        } else {\n          _this4.configuration.handleNonAbpErrorResponse(errorResponse);\n        }\n\n        return throwError(error);\n      }));\n    }\n  }, {\n    key: \"itemExists\",\n    value: function itemExists(items, predicate) {\n      for (var i = 0; i < items.length; i++) {\n        if (predicate(items[i])) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }]);\n\n  return AbpHttpInterceptor;\n}();\n\nAbpHttpInterceptor.ɵfac = function AbpHttpInterceptor_Factory(t) {\n  return new (t || AbpHttpInterceptor)(ɵngcc0.ɵɵinject(AbpHttpConfigurationService), ɵngcc0.ɵɵinject(ɵngcc0.Injector));\n};\n\nAbpHttpInterceptor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: AbpHttpInterceptor,\n  factory: AbpHttpInterceptor.ɵfac\n});\n\nAbpHttpInterceptor.ctorParameters = function () {\n  return [{\n    type: AbpHttpConfigurationService\n  }, {\n    type: Injector\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpInterceptor, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: AbpHttpConfigurationService\n    }, {\n      type: ɵngcc0.Injector\n    }];\n  }, null);\n})();\n/*\r\n * Public API Surface of abp-ng2-module\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { AbpHttpConfigurationService, AbpHttpInterceptor, AbpModule, AbpMultiTenancyService, AbpSessionService, AbpUserConfigurationService, FeatureCheckerService, LocalizationService, LogService, MessageService, NotifyService, PermissionCheckerService, RefreshTokenService, SettingService, TokenService, UtilsService };","map":{"version":3,"names":["NgModule","ɵɵdefineInjectable","Injectable","ɵɵinject","Injector","HttpClient","HttpErrorResponse","HttpHeaders","HttpResponse","Observable","BehaviorSubject","of","throwError","catchError","switchMap","filter","take","map","ɵngcc0","ɵngcc1","AbpModule","ɵfac","AbpModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","declarations","imports","exports","TokenService","abp","auth","getToken","tokenCookieName","clearToken","authToken","expireDate","setToken","getRefreshToken","refreshTokenCookieName","clearRefreshToken","refreshToken","setRefreshToken","TokenService_Factory","ɵprov","factory","token","providedIn","PermissionCheckerService","permissionName","isGranted","PermissionCheckerService_Factory","FeatureCheckerService","featureName","features","get","getValue","isEnabled","FeatureCheckerService_Factory","LocalizationService","localization","languages","currentLanguage","key","sourceName","localize","getSource","LocalizationService_Factory","LogService","logObject","log","debug","info","warn","error","fatal","LogService_Factory","MessageService","message","title","options","success","callback","confirm","MessageService_Factory","AbpMultiTenancyService","multiTenancy","AbpMultiTenancyService_Factory","NotifyService","notify","NotifyService_Factory","AbpSessionService","session","userId","tenantId","impersonatorUserId","impersonatorTenantId","multiTenancySide","AbpSessionService_Factory","SettingService","name","setting","getBoolean","getInt","SettingService_Factory","UtilsService","utils","getCookieValue","value","path","domain","attributes","setCookieValue","deleteCookie","UtilsService_Factory","AbpUserConfigurationService","_http","subscribe","result","jQuery","extend","JSON","parse","stringify","AbpUserConfigurationService_Factory","ctorParameters","AbpHttpConfigurationService","_messageService","_logService","defaultError","details","defaultError401","defaultError403","defaultError404","targetUrl","location","href","messagePromise","self","done","handleTargetUrl","response","status","handleUnAuthorizedRequest","showError","ajaxResponse","newResponse","clone","body","logError","headers","contentType","indexOf","responseObj","__abp","getAbpAjaxResponseOrNull","handleAbpResponse","blob","observer","next","complete","reader","FileReader","onload","readAsText","AbpHttpConfigurationService_Factory","RefreshTokenService","RefreshTokenService_Factory","AbpHttpInterceptor","configuration","_injector","_tokenService","_utilsService","isRefreshing","refreshTokenSubject","request","modifiedRequest","normalizeRequestHeaders","handle","pipe","tryAuthWithRefreshToken","handleErrorResponse","event","handleSuccessResponse","_refreshTokenService","tryGetRefreshTokenService","authResult","modifiedHeaders","set","addXRequestedWithHeader","addAuthorizationHeaders","addAspNetCoreCultureHeader","addAcceptLanguageHeader","addTenantIdHeader","cookieLangValue","has","cookieTenantIdValue","tenantIdCookieName","authorizationHeaders","getAll","itemExists","item","Blob","blobToText","json","responseBody","modifiedResponse","handleResponse","errorBody","errorResponse","handleNonAbpErrorResponse","items","predicate","i","length","AbpHttpInterceptor_Factory"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/abp-ng2-module/__ivy_ngcc__/fesm2015/abp-ng2-module.js"],"sourcesContent":["import { NgModule, ɵɵdefineInjectable, Injectable, ɵɵinject, Injector } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable, BehaviorSubject, of, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take, map } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nclass AbpModule {\r\n}\nAbpModule.ɵfac = function AbpModule_Factory(t) { return new (t || AbpModule)(); };\nAbpModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AbpModule });\nAbpModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [],\n                imports: [],\n                exports: []\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass TokenService {\r\n    getToken() {\r\n        return abp.auth.getToken();\r\n    }\r\n    getTokenCookieName() {\r\n        return abp.auth.tokenCookieName;\r\n    }\r\n    clearToken() {\r\n        abp.auth.clearToken();\r\n    }\r\n    setToken(authToken, expireDate) {\r\n        abp.auth.setToken(authToken, expireDate);\r\n    }\r\n    //refresh token\r\n    getRefreshToken() {\r\n        return abp.auth.getRefreshToken();\r\n    }\r\n    getRefreshTokenCookieName() {\r\n        return abp.auth.refreshTokenCookieName;\r\n    }\r\n    clearRefreshToken() {\r\n        abp.auth.clearRefreshToken();\r\n    }\r\n    setRefreshToken(refreshToken, expireDate) {\r\n        abp.auth.setRefreshToken(refreshToken, expireDate);\r\n    }\r\n}\nTokenService.ɵfac = function TokenService_Factory(t) { return new (t || TokenService)(); };\r\nTokenService.ɵprov = ɵɵdefineInjectable({ factory: function TokenService_Factory() { return new TokenService(); }, token: TokenService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TokenService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass PermissionCheckerService {\r\n    isGranted(permissionName) {\r\n        return abp.auth.isGranted(permissionName);\r\n    }\r\n}\nPermissionCheckerService.ɵfac = function PermissionCheckerService_Factory(t) { return new (t || PermissionCheckerService)(); };\r\nPermissionCheckerService.ɵprov = ɵɵdefineInjectable({ factory: function PermissionCheckerService_Factory() { return new PermissionCheckerService(); }, token: PermissionCheckerService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PermissionCheckerService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass FeatureCheckerService {\r\n    get(featureName) {\r\n        return abp.features.get(featureName);\r\n    }\r\n    getValue(featureName) {\r\n        return abp.features.getValue(featureName);\r\n    }\r\n    isEnabled(featureName) {\r\n        return abp.features.isEnabled(featureName);\r\n    }\r\n}\nFeatureCheckerService.ɵfac = function FeatureCheckerService_Factory(t) { return new (t || FeatureCheckerService)(); };\r\nFeatureCheckerService.ɵprov = ɵɵdefineInjectable({ factory: function FeatureCheckerService_Factory() { return new FeatureCheckerService(); }, token: FeatureCheckerService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FeatureCheckerService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass LocalizationService {\r\n    get languages() {\r\n        return abp.localization.languages;\r\n    }\r\n    get currentLanguage() {\r\n        return abp.localization.currentLanguage;\r\n    }\r\n    localize(key, sourceName) {\r\n        return abp.localization.localize(key, sourceName);\r\n    }\r\n    getSource(sourceName) {\r\n        return abp.localization.getSource(sourceName);\r\n    }\r\n}\nLocalizationService.ɵfac = function LocalizationService_Factory(t) { return new (t || LocalizationService)(); };\r\nLocalizationService.ɵprov = ɵɵdefineInjectable({ factory: function LocalizationService_Factory() { return new LocalizationService(); }, token: LocalizationService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocalizationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass LogService {\r\n    debug(logObject) {\r\n        abp.log.debug(logObject);\r\n    }\r\n    info(logObject) {\r\n        abp.log.info(logObject);\r\n    }\r\n    warn(logObject) {\r\n        abp.log.warn(logObject);\r\n    }\r\n    error(logObject) {\r\n        abp.log.error(logObject);\r\n    }\r\n    fatal(logObject) {\r\n        abp.log.fatal(logObject);\r\n    }\r\n}\nLogService.ɵfac = function LogService_Factory(t) { return new (t || LogService)(); };\r\nLogService.ɵprov = ɵɵdefineInjectable({ factory: function LogService_Factory() { return new LogService(); }, token: LogService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LogService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass MessageService {\r\n    info(message, title, options) {\r\n        return abp.message.info(message, title, options);\r\n    }\r\n    success(message, title, options) {\r\n        return abp.message.success(message, title, options);\r\n    }\r\n    warn(message, title, options) {\r\n        return abp.message.warn(message, title, options);\r\n    }\r\n    error(message, title, options) {\r\n        return abp.message.error(message, title, options);\r\n    }\r\n    confirm(message, title, callback, options) {\r\n        return abp.message.confirm(message, title, callback, options);\r\n    }\r\n}\nMessageService.ɵfac = function MessageService_Factory(t) { return new (t || MessageService)(); };\r\nMessageService.ɵprov = ɵɵdefineInjectable({ factory: function MessageService_Factory() { return new MessageService(); }, token: MessageService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessageService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpMultiTenancyService {\r\n    get isEnabled() {\r\n        return abp.multiTenancy.isEnabled;\r\n    }\r\n}\nAbpMultiTenancyService.ɵfac = function AbpMultiTenancyService_Factory(t) { return new (t || AbpMultiTenancyService)(); };\r\nAbpMultiTenancyService.ɵprov = ɵɵdefineInjectable({ factory: function AbpMultiTenancyService_Factory() { return new AbpMultiTenancyService(); }, token: AbpMultiTenancyService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpMultiTenancyService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass NotifyService {\r\n    info(message, title, options) {\r\n        abp.notify.info(message, title, options);\r\n    }\r\n    success(message, title, options) {\r\n        abp.notify.success(message, title, options);\r\n    }\r\n    warn(message, title, options) {\r\n        abp.notify.warn(message, title, options);\r\n    }\r\n    error(message, title, options) {\r\n        abp.notify.error(message, title, options);\r\n    }\r\n}\nNotifyService.ɵfac = function NotifyService_Factory(t) { return new (t || NotifyService)(); };\r\nNotifyService.ɵprov = ɵɵdefineInjectable({ factory: function NotifyService_Factory() { return new NotifyService(); }, token: NotifyService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NotifyService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpSessionService {\r\n    get userId() {\r\n        return abp.session.userId;\r\n    }\r\n    get tenantId() {\r\n        return abp.session.tenantId;\r\n    }\r\n    get impersonatorUserId() {\r\n        return abp.session.impersonatorUserId;\r\n    }\r\n    get impersonatorTenantId() {\r\n        return abp.session.impersonatorTenantId;\r\n    }\r\n    get multiTenancySide() {\r\n        return abp.session.multiTenancySide;\r\n    }\r\n}\nAbpSessionService.ɵfac = function AbpSessionService_Factory(t) { return new (t || AbpSessionService)(); };\r\nAbpSessionService.ɵprov = ɵɵdefineInjectable({ factory: function AbpSessionService_Factory() { return new AbpSessionService(); }, token: AbpSessionService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpSessionService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass SettingService {\r\n    get(name) {\r\n        return abp.setting.get(name);\r\n    }\r\n    getBoolean(name) {\r\n        return abp.setting.getBoolean(name);\r\n    }\r\n    getInt(name) {\r\n        return abp.setting.getInt(name);\r\n    }\r\n}\nSettingService.ɵfac = function SettingService_Factory(t) { return new (t || SettingService)(); };\r\nSettingService.ɵprov = ɵɵdefineInjectable({ factory: function SettingService_Factory() { return new SettingService(); }, token: SettingService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SettingService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass UtilsService {\r\n    getCookieValue(key) {\r\n        return abp.utils.getCookieValue(key);\r\n    }\r\n    setCookieValue(key, value, expireDate, path, domain, attributes) {\r\n        abp.utils.setCookieValue(key, value, expireDate, path, domain, attributes);\r\n    }\r\n    deleteCookie(key, path) {\r\n        abp.utils.deleteCookie(key, path);\r\n    }\r\n}\nUtilsService.ɵfac = function UtilsService_Factory(t) { return new (t || UtilsService)(); };\r\nUtilsService.ɵprov = ɵɵdefineInjectable({ factory: function UtilsService_Factory() { return new UtilsService(); }, token: UtilsService, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UtilsService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], null, null); })();\n\n///<reference path=\"../../../../../node_modules/abp-web-resources/Abp/Framework/scripts/abp.d.ts\"/>\r\nclass AbpUserConfigurationService {\r\n    constructor(_http) {\r\n        this._http = _http;\r\n    }\r\n    initialize() {\r\n        this._http.get('/AbpUserConfiguration/GetAll')\r\n            .subscribe(result => {\r\n            jQuery.extend(true, abp, JSON.parse(JSON.stringify(result)));\r\n        });\r\n    }\r\n}\nAbpUserConfigurationService.ɵfac = function AbpUserConfigurationService_Factory(t) { return new (t || AbpUserConfigurationService)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient)); };\r\nAbpUserConfigurationService.ɵprov = ɵɵdefineInjectable({ factory: function AbpUserConfigurationService_Factory() { return new AbpUserConfigurationService(ɵɵinject(HttpClient)); }, token: AbpUserConfigurationService, providedIn: \"root\" });\r\nAbpUserConfigurationService.ctorParameters = () => [\r\n    { type: HttpClient }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpUserConfigurationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc1.HttpClient }]; }, null); })();\n\nclass AbpHttpConfigurationService {\r\n    constructor(_messageService, _logService) {\r\n        this._messageService = _messageService;\r\n        this._logService = _logService;\r\n        this.defaultError = {\r\n            message: 'An error has occurred!',\r\n            details: 'Error details were not sent by server.'\r\n        };\r\n        this.defaultError401 = {\r\n            message: 'You are not authenticated!',\r\n            details: 'You should be authenticated (sign in) in order to perform this operation.'\r\n        };\r\n        this.defaultError403 = {\r\n            message: 'You are not authorized!',\r\n            details: 'You are not allowed to perform this operation.'\r\n        };\r\n        this.defaultError404 = {\r\n            message: 'Resource not found!',\r\n            details: 'The resource requested could not be found on the server.'\r\n        };\r\n    }\r\n    logError(error) {\r\n        this._logService.error(error);\r\n    }\r\n    showError(error) {\r\n        if (error.details) {\r\n            return this._messageService.error(error.details, error.message || this.defaultError.message);\r\n        }\r\n        else {\r\n            return this._messageService.error(error.message || this.defaultError.message);\r\n        }\r\n    }\r\n    handleTargetUrl(targetUrl) {\r\n        if (!targetUrl) {\r\n            location.href = '/';\r\n        }\r\n        else {\r\n            location.href = targetUrl;\r\n        }\r\n    }\r\n    handleUnAuthorizedRequest(messagePromise, targetUrl) {\r\n        const self = this;\r\n        if (messagePromise) {\r\n            messagePromise.done(() => {\r\n                this.handleTargetUrl(targetUrl || '/');\r\n            });\r\n        }\r\n        else {\r\n            self.handleTargetUrl(targetUrl || '/');\r\n        }\r\n    }\r\n    handleNonAbpErrorResponse(response) {\r\n        const self = this;\r\n        switch (response.status) {\r\n            case 401:\r\n                self.handleUnAuthorizedRequest(self.showError(self.defaultError401), '/');\r\n                break;\r\n            case 403:\r\n                self.showError(self.defaultError403);\r\n                break;\r\n            case 404:\r\n                self.showError(self.defaultError404);\r\n                break;\r\n            default:\r\n                self.showError(self.defaultError);\r\n                break;\r\n        }\r\n    }\r\n    handleAbpResponse(response, ajaxResponse) {\r\n        var newResponse;\r\n        if (ajaxResponse.success) {\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n            if (ajaxResponse.targetUrl) {\r\n                this.handleTargetUrl(ajaxResponse.targetUrl);\r\n                ;\r\n            }\r\n        }\r\n        else {\r\n            newResponse = response.clone({\r\n                body: ajaxResponse.result\r\n            });\r\n            if (!ajaxResponse.error) {\r\n                ajaxResponse.error = this.defaultError;\r\n            }\r\n            this.logError(ajaxResponse.error);\r\n            this.showError(ajaxResponse.error);\r\n            if (response.status === 401) {\r\n                this.handleUnAuthorizedRequest(null, ajaxResponse.targetUrl);\r\n            }\r\n        }\r\n        return newResponse;\r\n    }\r\n    getAbpAjaxResponseOrNull(response) {\r\n        if (!response || !response.headers) {\r\n            return null;\r\n        }\r\n        var contentType = response.headers.get('Content-Type');\r\n        if (!contentType) {\r\n            this._logService.warn('Content-Type is not sent!');\r\n            return null;\r\n        }\r\n        if (contentType.indexOf(\"application/json\") < 0) {\r\n            this._logService.warn('Content-Type is not application/json: ' + contentType);\r\n            return null;\r\n        }\r\n        var responseObj = JSON.parse(JSON.stringify(response.body));\r\n        if (!responseObj.__abp) {\r\n            return null;\r\n        }\r\n        return responseObj;\r\n    }\r\n    handleResponse(response) {\r\n        var ajaxResponse = this.getAbpAjaxResponseOrNull(response);\r\n        if (ajaxResponse == null) {\r\n            return response;\r\n        }\r\n        return this.handleAbpResponse(response, ajaxResponse);\r\n    }\r\n    blobToText(blob) {\r\n        return new Observable((observer) => {\r\n            if (!blob) {\r\n                observer.next(\"\");\r\n                observer.complete();\r\n            }\r\n            else {\r\n                let reader = new FileReader();\r\n                reader.onload = function () {\r\n                    observer.next(this.result);\r\n                    observer.complete();\r\n                };\r\n                reader.readAsText(blob);\r\n            }\r\n        });\r\n    }\r\n}\nAbpHttpConfigurationService.ɵfac = function AbpHttpConfigurationService_Factory(t) { return new (t || AbpHttpConfigurationService)(ɵngcc0.ɵɵinject(MessageService), ɵngcc0.ɵɵinject(LogService)); };\r\nAbpHttpConfigurationService.ɵprov = ɵɵdefineInjectable({ factory: function AbpHttpConfigurationService_Factory() { return new AbpHttpConfigurationService(ɵɵinject(MessageService), ɵɵinject(LogService)); }, token: AbpHttpConfigurationService, providedIn: \"root\" });\r\nAbpHttpConfigurationService.ctorParameters = () => [\r\n    { type: MessageService },\r\n    { type: LogService }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpConfigurationService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: MessageService }, { type: LogService }]; }, null); })();\n\nclass RefreshTokenService {\r\n}\nRefreshTokenService.ɵfac = function RefreshTokenService_Factory(t) { return new (t || RefreshTokenService)(); };\nRefreshTokenService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: RefreshTokenService, factory: RefreshTokenService.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RefreshTokenService, [{\n        type: Injectable\n    }], null, null); })();\n\nclass AbpHttpInterceptor {\r\n    constructor(configuration, _injector) {\r\n        this._injector = _injector;\r\n        this._tokenService = new TokenService();\r\n        this._utilsService = new UtilsService();\r\n        this._logService = new LogService();\r\n        this.isRefreshing = false;\r\n        this.refreshTokenSubject = new BehaviorSubject(null);\r\n        this.configuration = configuration;\r\n    }\r\n    intercept(request, next) {\r\n        var modifiedRequest = this.normalizeRequestHeaders(request);\r\n        return next.handle(modifiedRequest)\r\n            .pipe(catchError(error => {\r\n            if (error instanceof HttpErrorResponse && error.status === 401) {\r\n                return this.tryAuthWithRefreshToken(request, next, error);\r\n            }\r\n            else {\r\n                return this.handleErrorResponse(error);\r\n            }\r\n        }), switchMap((event) => {\r\n            return this.handleSuccessResponse(event);\r\n        }));\r\n    }\r\n    tryGetRefreshTokenService() {\r\n        var _refreshTokenService = this._injector.get(RefreshTokenService, null);\r\n        if (_refreshTokenService) {\r\n            return _refreshTokenService.tryAuthWithRefreshToken();\r\n        }\r\n        return of(false);\r\n    }\r\n    tryAuthWithRefreshToken(request, next, error) {\r\n        if (!this.isRefreshing) {\r\n            this.isRefreshing = true;\r\n            this.refreshTokenSubject.next(null);\r\n            return this.tryGetRefreshTokenService().pipe(switchMap((authResult) => {\r\n                this.isRefreshing = false;\r\n                if (authResult) {\r\n                    this.refreshTokenSubject.next(authResult);\r\n                    let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                    return next.handle(modifiedRequest);\r\n                }\r\n                else {\r\n                    return this.handleErrorResponse(error);\r\n                }\r\n            }));\r\n        }\r\n        else {\r\n            return this.refreshTokenSubject.pipe(filter(authResult => authResult != null), take(1), switchMap(authResult => {\r\n                let modifiedRequest = this.normalizeRequestHeaders(request);\r\n                return next.handle(modifiedRequest);\r\n            }));\r\n        }\r\n    }\r\n    normalizeRequestHeaders(request) {\r\n        var modifiedHeaders = new HttpHeaders();\r\n        modifiedHeaders = request.headers.set(\"Pragma\", \"no-cache\")\r\n            .set(\"Cache-Control\", \"no-cache\")\r\n            .set(\"Expires\", \"Sat, 01 Jan 2000 00:00:00 GMT\");\r\n        modifiedHeaders = this.addXRequestedWithHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAuthorizationHeaders(modifiedHeaders);\r\n        modifiedHeaders = this.addAspNetCoreCultureHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addAcceptLanguageHeader(modifiedHeaders);\r\n        modifiedHeaders = this.addTenantIdHeader(modifiedHeaders);\r\n        return request.clone({\r\n            headers: modifiedHeaders\r\n        });\r\n    }\r\n    addXRequestedWithHeader(headers) {\r\n        if (headers) {\r\n            headers = headers.set('X-Requested-With', 'XMLHttpRequest');\r\n        }\r\n        return headers;\r\n    }\r\n    addAspNetCoreCultureHeader(headers) {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('.AspNetCore.Culture')) {\r\n            headers = headers.set('.AspNetCore.Culture', cookieLangValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addAcceptLanguageHeader(headers) {\r\n        let cookieLangValue = this._utilsService.getCookieValue(\"Abp.Localization.CultureName\");\r\n        if (cookieLangValue && headers && !headers.has('Accept-Language')) {\r\n            headers = headers.set('Accept-Language', cookieLangValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addTenantIdHeader(headers) {\r\n        let cookieTenantIdValue = this._utilsService.getCookieValue(abp.multiTenancy.tenantIdCookieName);\r\n        if (cookieTenantIdValue && headers && !headers.has(abp.multiTenancy.tenantIdCookieName)) {\r\n            headers = headers.set(abp.multiTenancy.tenantIdCookieName, cookieTenantIdValue);\r\n        }\r\n        return headers;\r\n    }\r\n    addAuthorizationHeaders(headers) {\r\n        let authorizationHeaders = headers ? headers.getAll('Authorization') : null;\r\n        if (!authorizationHeaders) {\r\n            authorizationHeaders = [];\r\n        }\r\n        if (!this.itemExists(authorizationHeaders, (item) => item.indexOf('Bearer ') == 0)) {\r\n            let token = this._tokenService.getToken();\r\n            if (headers && token) {\r\n                headers = headers.set('Authorization', 'Bearer ' + token);\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    handleSuccessResponse(event) {\r\n        var self = this;\r\n        if (event instanceof HttpResponse) {\r\n            if (event.body instanceof Blob && event.body.type && event.body.type.indexOf(\"application/json\") >= 0) {\r\n                return self.configuration.blobToText(event.body).pipe(map(json => {\r\n                    const responseBody = json == \"null\" ? {} : JSON.parse(json);\r\n                    var modifiedResponse = self.configuration.handleResponse(event.clone({\r\n                        body: responseBody\r\n                    }));\r\n                    return modifiedResponse.clone({\r\n                        body: new Blob([JSON.stringify(modifiedResponse.body)], { type: 'application/json' })\r\n                    });\r\n                }));\r\n            }\r\n        }\r\n        return of(event);\r\n    }\r\n    handleErrorResponse(error) {\r\n        if (!(error.error instanceof Blob)) {\r\n            return throwError(error);\r\n        }\r\n        return this.configuration.blobToText(error.error).pipe(switchMap((json) => {\r\n            const errorBody = (json == \"\" || json == \"null\") ? {} : JSON.parse(json);\r\n            const errorResponse = new HttpResponse({\r\n                headers: error.headers,\r\n                status: error.status,\r\n                body: errorBody\r\n            });\r\n            var ajaxResponse = this.configuration.getAbpAjaxResponseOrNull(errorResponse);\r\n            if (ajaxResponse != null) {\r\n                this.configuration.handleAbpResponse(errorResponse, ajaxResponse);\r\n            }\r\n            else {\r\n                this.configuration.handleNonAbpErrorResponse(errorResponse);\r\n            }\r\n            return throwError(error);\r\n        }));\r\n    }\r\n    itemExists(items, predicate) {\r\n        for (let i = 0; i < items.length; i++) {\r\n            if (predicate(items[i])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\nAbpHttpInterceptor.ɵfac = function AbpHttpInterceptor_Factory(t) { return new (t || AbpHttpInterceptor)(ɵngcc0.ɵɵinject(AbpHttpConfigurationService), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nAbpHttpInterceptor.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AbpHttpInterceptor, factory: AbpHttpInterceptor.ɵfac });\r\nAbpHttpInterceptor.ctorParameters = () => [\r\n    { type: AbpHttpConfigurationService },\r\n    { type: Injector }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AbpHttpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: AbpHttpConfigurationService }, { type: ɵngcc0.Injector }]; }, null); })();\n\n/*\r\n * Public API Surface of abp-ng2-module\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { AbpHttpConfigurationService, AbpHttpInterceptor, AbpModule, AbpMultiTenancyService, AbpSessionService, AbpUserConfigurationService, FeatureCheckerService, LocalizationService, LogService, MessageService, NotifyService, PermissionCheckerService, RefreshTokenService, SettingService, TokenService, UtilsService };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}