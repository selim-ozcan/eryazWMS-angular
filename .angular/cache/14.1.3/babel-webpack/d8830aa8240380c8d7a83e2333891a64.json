{"ast":null,"code":"import _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { AppConsts } from '@shared/AppConsts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../session/app-session.service\";\nexport var AppUrlService = /*#__PURE__*/function () {\n  function AppUrlService(_appSessionService) {\n    _classCallCheck(this, AppUrlService);\n\n    this._appSessionService = _appSessionService;\n  }\n\n  _createClass(AppUrlService, [{\n    key: \"appRootUrl\",\n    get: function get() {\n      if (this._appSessionService.tenant) {\n        return this.getAppRootUrlOfTenant(this._appSessionService.tenant.tenancyName);\n      } else {\n        return this.getAppRootUrlOfTenant(null);\n      }\n    }\n    /**\n     * Returning url ends with '/'.\n     */\n\n  }, {\n    key: \"getAppRootUrlOfTenant\",\n    value: function getAppRootUrlOfTenant(tenancyName) {\n      var baseUrl = this.ensureEndsWith(AppConsts.appBaseUrl, '/');\n\n      if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder) < 0) {\n        return baseUrl;\n      }\n\n      if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder + '.') >= 0) {\n        baseUrl = baseUrl.replace(AppUrlService.tenancyNamePlaceHolder + '.', AppUrlService.tenancyNamePlaceHolder);\n\n        if (tenancyName) {\n          tenancyName = tenancyName + '.';\n        }\n      }\n\n      if (!tenancyName) {\n        return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, '');\n      }\n\n      return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, tenancyName);\n    }\n  }, {\n    key: \"ensureEndsWith\",\n    value: function ensureEndsWith(str, c) {\n      if (str.charAt(str.length - 1) !== c) {\n        str = str + c;\n      }\n\n      return str;\n    }\n  }, {\n    key: \"removeFromEnd\",\n    value: function removeFromEnd(str, c) {\n      if (str.charAt(str.length - 1) === c) {\n        str = str.substr(0, str.length - 1);\n      }\n\n      return str;\n    }\n  }]);\n\n  return AppUrlService;\n}();\nAppUrlService.tenancyNamePlaceHolder = '{TENANCY_NAME}';\n\nAppUrlService.ɵfac = function AppUrlService_Factory(t) {\n  return new (t || AppUrlService)(i0.ɵɵinject(i1.AppSessionService));\n};\n\nAppUrlService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppUrlService,\n  factory: AppUrlService.ɵfac\n});","map":{"version":3,"mappings":";;AACA,SAASA,SAAT,QAA0B,mBAA1B;;;AAIA,WAAaC,aAAb;EAII,uBACqBC,kBADrB,EAC0D;IAAA;;IAArC;EAGpB;;EARL;IAAA;IAAA,KAUI,eAAc;MACV,IAAI,KAAKA,kBAAL,CAAwBC,MAA5B,EAAoC;QAChC,OAAO,KAAKC,qBAAL,CAA2B,KAAKF,kBAAL,CAAwBC,MAAxB,CAA+BE,WAA1D,CAAP;MACH,CAFD,MAEO;QACH,OAAO,KAAKD,qBAAL,CAA2B,IAA3B,CAAP;MACH;IACJ;IAED;;;;EAlBJ;IAAA;IAAA,OAqBI,+BAAsBC,WAAtB,EAA0C;MACtC,IAAIC,OAAO,GAAG,KAAKC,cAAL,CAAoBP,SAAS,CAACQ,UAA9B,EAA0C,GAA1C,CAAd;;MAEA,IAAIF,OAAO,CAACG,OAAR,CAAgBR,aAAa,CAACS,sBAA9B,IAAwD,CAA5D,EAA+D;QAC3D,OAAOJ,OAAP;MACH;;MAED,IAAIA,OAAO,CAACG,OAAR,CAAgBR,aAAa,CAACS,sBAAd,GAAuC,GAAvD,KAA+D,CAAnE,EAAsE;QAClEJ,OAAO,GAAGA,OAAO,CAACK,OAAR,CAAgBV,aAAa,CAACS,sBAAd,GAAuC,GAAvD,EAA4DT,aAAa,CAACS,sBAA1E,CAAV;;QACA,IAAIL,WAAJ,EAAiB;UACbA,WAAW,GAAGA,WAAW,GAAG,GAA5B;QACH;MACJ;;MAED,IAAI,CAACA,WAAL,EAAkB;QACd,OAAOC,OAAO,CAACK,OAAR,CAAgBV,aAAa,CAACS,sBAA9B,EAAsD,EAAtD,CAAP;MACH;;MAED,OAAOJ,OAAO,CAACK,OAAR,CAAgBV,aAAa,CAACS,sBAA9B,EAAsDL,WAAtD,CAAP;IACH;EAxCL;IAAA;IAAA,OA0CY,wBAAeO,GAAf,EAA4BC,CAA5B,EAAqC;MACzC,IAAID,GAAG,CAACE,MAAJ,CAAWF,GAAG,CAACG,MAAJ,GAAa,CAAxB,MAA+BF,CAAnC,EAAsC;QAClCD,GAAG,GAAGA,GAAG,GAAGC,CAAZ;MACH;;MAED,OAAOD,GAAP;IACH;EAhDL;IAAA;IAAA,OAkDY,uBAAcA,GAAd,EAA2BC,CAA3B,EAAoC;MACxC,IAAID,GAAG,CAACE,MAAJ,CAAWF,GAAG,CAACG,MAAJ,GAAa,CAAxB,MAA+BF,CAAnC,EAAsC;QAClCD,GAAG,GAAGA,GAAG,CAACI,MAAJ,CAAW,CAAX,EAAcJ,GAAG,CAACG,MAAJ,GAAa,CAA3B,CAAN;MACH;;MAED,OAAOH,GAAP;IACH;EAxDL;;EAAA;AAAA;AAEWX,uCAAyB,gBAAzB;;;mBAFEA,eAAagB;AAAA;;;SAAbhB;EAAaiB,SAAbjB,aAAa","names":["AppConsts","AppUrlService","_appSessionService","tenant","getAppRootUrlOfTenant","tenancyName","baseUrl","ensureEndsWith","appBaseUrl","indexOf","tenancyNamePlaceHolder","replace","str","c","charAt","length","substr","i0","factory"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/nav/app-url.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AppConsts } from '@shared/AppConsts';\nimport { AppSessionService } from '../session/app-session.service';\n\n@Injectable()\nexport class AppUrlService {\n\n    static tenancyNamePlaceHolder = '{TENANCY_NAME}';\n\n    constructor(\n        private readonly _appSessionService: AppSessionService\n    ) {\n\n    }\n\n    get appRootUrl(): string {\n        if (this._appSessionService.tenant) {\n            return this.getAppRootUrlOfTenant(this._appSessionService.tenant.tenancyName);\n        } else {\n            return this.getAppRootUrlOfTenant(null);\n        }\n    }\n\n    /**\n     * Returning url ends with '/'.\n     */\n    getAppRootUrlOfTenant(tenancyName?: string): string {\n        let baseUrl = this.ensureEndsWith(AppConsts.appBaseUrl, '/');\n\n        if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder) < 0) {\n            return baseUrl;\n        }\n\n        if (baseUrl.indexOf(AppUrlService.tenancyNamePlaceHolder + '.') >= 0) {\n            baseUrl = baseUrl.replace(AppUrlService.tenancyNamePlaceHolder + '.', AppUrlService.tenancyNamePlaceHolder);\n            if (tenancyName) {\n                tenancyName = tenancyName + '.';\n            }\n        }\n\n        if (!tenancyName) {\n            return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, '');\n        }\n\n        return baseUrl.replace(AppUrlService.tenancyNamePlaceHolder, tenancyName);\n    }\n\n    private ensureEndsWith(str: string, c: string) {\n        if (str.charAt(str.length - 1) !== c) {\n            str = str + c;\n        }\n\n        return str;\n    }\n\n    private removeFromEnd(str: string, c: string) {\n        if (str.charAt(str.length - 1) === c) {\n            str = str.substr(0, str.length - 1);\n        }\n\n        return str;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}