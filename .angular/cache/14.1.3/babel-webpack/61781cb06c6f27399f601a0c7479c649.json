{"ast":null,"code":"import { Observable } from '../Observable';\nexport function range() {\n  var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var count = arguments.length > 1 ? arguments[1] : undefined;\n  var scheduler = arguments.length > 2 ? arguments[2] : undefined;\n  return new Observable(function (subscriber) {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    var index = 0;\n    var current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index: index,\n        count: count,\n        start: start,\n        subscriber: subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n\n        subscriber.next(current++);\n\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\nexport function dispatch(state) {\n  var start = state.start,\n      index = state.index,\n      count = state.count,\n      subscriber = state.subscriber;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n  this.schedule(state);\n}","map":{"version":3,"names":["Observable","range","start","count","scheduler","subscriber","undefined","index","current","schedule","dispatch","complete","next","closed","state"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/observable/range.js"],"sourcesContent":["import { Observable } from '../Observable';\nexport function range(start = 0, count, scheduler) {\n    return new Observable(subscriber => {\n        if (count === undefined) {\n            count = start;\n            start = 0;\n        }\n        let index = 0;\n        let current = start;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(current++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,GAA4C;EAAA,IAA7BC,KAA6B,uEAArB,CAAqB;EAAA,IAAlBC,KAAkB;EAAA,IAAXC,SAAW;EAC/C,OAAO,IAAIJ,UAAJ,CAAe,UAAAK,UAAU,EAAI;IAChC,IAAIF,KAAK,KAAKG,SAAd,EAAyB;MACrBH,KAAK,GAAGD,KAAR;MACAA,KAAK,GAAG,CAAR;IACH;;IACD,IAAIK,KAAK,GAAG,CAAZ;IACA,IAAIC,OAAO,GAAGN,KAAd;;IACA,IAAIE,SAAJ,EAAe;MACX,OAAOA,SAAS,CAACK,QAAV,CAAmBC,QAAnB,EAA6B,CAA7B,EAAgC;QACnCH,KAAK,EAALA,KADmC;QAC5BJ,KAAK,EAALA,KAD4B;QACrBD,KAAK,EAALA,KADqB;QACdG,UAAU,EAAVA;MADc,CAAhC,CAAP;IAGH,CAJD,MAKK;MACD,GAAG;QACC,IAAIE,KAAK,MAAMJ,KAAf,EAAsB;UAClBE,UAAU,CAACM,QAAX;UACA;QACH;;QACDN,UAAU,CAACO,IAAX,CAAgBJ,OAAO,EAAvB;;QACA,IAAIH,UAAU,CAACQ,MAAf,EAAuB;UACnB;QACH;MACJ,CATD,QASS,IATT;IAUH;;IACD,OAAOP,SAAP;EACH,CAzBM,CAAP;AA0BH;AACD,OAAO,SAASI,QAAT,CAAkBI,KAAlB,EAAyB;EAC5B,IAAQZ,KAAR,GAA4CY,KAA5C,CAAQZ,KAAR;EAAA,IAAeK,KAAf,GAA4CO,KAA5C,CAAeP,KAAf;EAAA,IAAsBJ,KAAtB,GAA4CW,KAA5C,CAAsBX,KAAtB;EAAA,IAA6BE,UAA7B,GAA4CS,KAA5C,CAA6BT,UAA7B;;EACA,IAAIE,KAAK,IAAIJ,KAAb,EAAoB;IAChBE,UAAU,CAACM,QAAX;IACA;EACH;;EACDN,UAAU,CAACO,IAAX,CAAgBV,KAAhB;;EACA,IAAIG,UAAU,CAACQ,MAAf,EAAuB;IACnB;EACH;;EACDC,KAAK,CAACP,KAAN,GAAcA,KAAK,GAAG,CAAtB;EACAO,KAAK,CAACZ,KAAN,GAAcA,KAAK,GAAG,CAAtB;EACA,KAAKO,QAAL,CAAcK,KAAd;AACH"},"metadata":{},"sourceType":"module"}