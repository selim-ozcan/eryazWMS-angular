{"ast":null,"code":"import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector) {\n  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;\n\n  if (typeof resultSelector === 'function') {\n    return mergeMap(function () {\n      return innerObservable;\n    }, resultSelector, concurrent);\n  }\n\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n\n  return mergeMap(function () {\n    return innerObservable;\n  }, concurrent);\n}","map":{"version":3,"names":["mergeMap","mergeMapTo","innerObservable","resultSelector","concurrent","Number","POSITIVE_INFINITY"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js"],"sourcesContent":["import { mergeMap } from './mergeMap';\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AACA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAAqCC,cAArC,EAA4F;EAAA,IAAvCC,UAAuC,uEAA1BC,MAAM,CAACC,iBAAmB;;EAC/F,IAAI,OAAOH,cAAP,KAA0B,UAA9B,EAA0C;IACtC,OAAOH,QAAQ,CAAC;MAAA,OAAME,eAAN;IAAA,CAAD,EAAwBC,cAAxB,EAAwCC,UAAxC,CAAf;EACH;;EACD,IAAI,OAAOD,cAAP,KAA0B,QAA9B,EAAwC;IACpCC,UAAU,GAAGD,cAAb;EACH;;EACD,OAAOH,QAAQ,CAAC;IAAA,OAAME,eAAN;EAAA,CAAD,EAAwBE,UAAxB,CAAf;AACH"},"metadata":{},"sourceType":"module"}