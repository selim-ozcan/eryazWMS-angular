{"ast":null,"code":"import _toConsumableArray from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        return bindNodeCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var params = {\n      subject: undefined,\n      args: args,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler,\n      context: this\n    };\n    return new Observable(function (subscriber) {\n      var context = params.context;\n      var subject = params.subject;\n\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject();\n\n          var handler = function handler() {\n            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              innerArgs[_key2] = arguments[_key2];\n            }\n\n            var err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [].concat(args, [handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule(dispatch, 0, {\n          params: params,\n          subscriber: subscriber,\n          context: context\n        });\n      }\n    });\n  };\n}\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var params = state.params,\n      subscriber = state.subscriber,\n      context = state.context;\n  var callbackFunc = params.callbackFunc,\n      args = params.args,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n\n    var handler = function handler() {\n      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        innerArgs[_key3] = arguments[_key3];\n      }\n\n      var err = innerArgs.shift();\n\n      if (err) {\n        _this.add(scheduler.schedule(dispatchError, 0, {\n          err: err,\n          subject: subject\n        }));\n      } else {\n        var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n        _this.add(scheduler.schedule(dispatchNext, 0, {\n          value: value,\n          subject: subject\n        }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [].concat(_toConsumableArray(args), [handler]));\n    } catch (err) {\n      this.add(scheduler.schedule(dispatchError, 0, {\n        err: err,\n        subject: subject\n      }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(arg) {\n  var value = arg.value,\n      subject = arg.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(arg) {\n  var err = arg.err,\n      subject = arg.subject;\n  subject.error(err);\n}","map":{"version":3,"names":["Observable","AsyncSubject","map","canReportError","isScheduler","isArray","bindNodeCallback","callbackFunc","resultSelector","scheduler","pipe","args","params","subject","undefined","context","subscriber","handler","innerArgs","err","shift","error","next","length","complete","apply","console","warn","subscribe","schedule","dispatch","state","add","dispatchError","value","dispatchNext","arg"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}