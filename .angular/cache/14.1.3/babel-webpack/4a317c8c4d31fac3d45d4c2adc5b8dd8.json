{"ast":null,"code":"import _toConsumableArray from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      return function () {\n        return bindCallback(callbackFunc, scheduler).apply(void 0, arguments).pipe(map(function (args) {\n          return isArray(args) ? resultSelector.apply(void 0, _toConsumableArray(args)) : resultSelector(args);\n        }));\n      };\n    }\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var context = this;\n    var subject;\n    var params = {\n      context: context,\n      subject: subject,\n      callbackFunc: callbackFunc,\n      scheduler: scheduler\n    };\n    return new Observable(function (subscriber) {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject();\n\n          var handler = function handler() {\n            for (var _len2 = arguments.length, innerArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              innerArgs[_key2] = arguments[_key2];\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [].concat(args, [handler]));\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n\n        return subject.subscribe(subscriber);\n      } else {\n        var state = {\n          args: args,\n          subscriber: subscriber,\n          params: params\n        };\n        return scheduler.schedule(dispatch, 0, state);\n      }\n    });\n  };\n}\n\nfunction dispatch(state) {\n  var _this = this;\n\n  var self = this;\n  var args = state.args,\n      subscriber = state.subscriber,\n      params = state.params;\n  var callbackFunc = params.callbackFunc,\n      context = params.context,\n      scheduler = params.scheduler;\n  var subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject();\n\n    var handler = function handler() {\n      for (var _len3 = arguments.length, innerArgs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        innerArgs[_key3] = arguments[_key3];\n      }\n\n      var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n\n      _this.add(scheduler.schedule(dispatchNext, 0, {\n        value: value,\n        subject: subject\n      }));\n    };\n\n    try {\n      callbackFunc.apply(context, [].concat(_toConsumableArray(args), [handler]));\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\nfunction dispatchNext(state) {\n  var value = state.value,\n      subject = state.subject;\n  subject.next(value);\n  subject.complete();\n}\n\nfunction dispatchError(state) {\n  var err = state.err,\n      subject = state.subject;\n  subject.error(err);\n}","map":{"version":3,"names":["Observable","AsyncSubject","map","canReportError","isArray","isScheduler","bindCallback","callbackFunc","resultSelector","scheduler","pipe","args","context","subject","params","subscriber","handler","innerArgs","next","length","complete","apply","err","error","console","warn","subscribe","state","schedule","dispatch","self","value","add","dispatchNext","dispatchError"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/observable/bindCallback.js"],"sourcesContent":["import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        if (canReportError(subject)) {\n                            subject.error(err);\n                        }\n                        else {\n                            console.warn(err);\n                        }\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}