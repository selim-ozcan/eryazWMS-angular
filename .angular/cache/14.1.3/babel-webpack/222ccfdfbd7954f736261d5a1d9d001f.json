{"ast":null,"code":"import _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport _createForOfIteratorHelper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var API_BASE_URL = new InjectionToken('API_BASE_URL');\nexport var AccountServiceProxy = /*#__PURE__*/function () {\n  function AccountServiceProxy(http, baseUrl) {\n    _classCallCheck(this, AccountServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(AccountServiceProxy, [{\n    key: \"isTenantAvailable\",\n    value: function isTenantAvailable(body) {\n      var _this = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Account/IsTenantAvailable\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this.processIsTenantAvailable(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this.processIsTenantAvailable(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processIsTenantAvailable\",\n    value: function processIsTenantAvailable(response) {\n      var _this2 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator = _createForOfIteratorHelper(response.headers.keys()),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this2.jsonParseReviver);\n          result200 = IsTenantAvailableOutput.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(body) {\n      var _this3 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Account/Register\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this3.processRegister(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this3.processRegister(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processRegister\",\n    value: function processRegister(response) {\n      var _this4 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator2 = _createForOfIteratorHelper(response.headers.keys()),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var key = _step2.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this4.jsonParseReviver);\n          result200 = RegisterOutput.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return AccountServiceProxy;\n}();\n\nAccountServiceProxy.ɵfac = function AccountServiceProxy_Factory(t) {\n  return new (t || AccountServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nAccountServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountServiceProxy,\n  factory: AccountServiceProxy.ɵfac\n});\nexport var ConfigurationServiceProxy = /*#__PURE__*/function () {\n  function ConfigurationServiceProxy(http, baseUrl) {\n    _classCallCheck(this, ConfigurationServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(ConfigurationServiceProxy, [{\n    key: \"changeUiTheme\",\n    value: function changeUiTheme(body) {\n      var _this5 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Configuration/ChangeUiTheme\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this5.processChangeUiTheme(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this5.processChangeUiTheme(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processChangeUiTheme\",\n    value: function processChangeUiTheme(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator3 = _createForOfIteratorHelper(response.headers.keys()),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var key = _step3.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return ConfigurationServiceProxy;\n}();\n\nConfigurationServiceProxy.ɵfac = function ConfigurationServiceProxy_Factory(t) {\n  return new (t || ConfigurationServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nConfigurationServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigurationServiceProxy,\n  factory: ConfigurationServiceProxy.ɵfac\n});\nexport var CustomerServiceProxy = /*#__PURE__*/function () {\n  function CustomerServiceProxy(http, baseUrl) {\n    _classCallCheck(this, CustomerServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(CustomerServiceProxy, [{\n    key: \"createCustomer\",\n    value: function createCustomer(body) {\n      var _this6 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/CreateCustomer\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this6.processCreateCustomer(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this6.processCreateCustomer(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreateCustomer\",\n    value: function processCreateCustomer(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator4 = _createForOfIteratorHelper(response.headers.keys()),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var key = _step4.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getCustomer\",\n    value: function getCustomer(id) {\n      var _this7 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/GetCustomer?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this7.processGetCustomer(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this7.processGetCustomer(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetCustomer\",\n    value: function processGetCustomer(response) {\n      var _this8 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator5 = _createForOfIteratorHelper(response.headers.keys()),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var key = _step5.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this8.jsonParseReviver);\n          result200 = CustomerDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param customerCode (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getCustomerWithCode\",\n    value: function getCustomerWithCode(customerCode) {\n      var _this9 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/GetCustomerWithCode?\";\n      if (customerCode === null) throw new Error(\"The parameter 'customerCode' cannot be null.\");else if (customerCode !== undefined) url_ += \"CustomerCode=\" + encodeURIComponent(\"\" + customerCode) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this9.processGetCustomerWithCode(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this9.processGetCustomerWithCode(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetCustomerWithCode\",\n    value: function processGetCustomerWithCode(response) {\n      var _this10 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator6 = _createForOfIteratorHelper(response.headers.keys()),\n            _step6;\n\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var key = _step6.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this10.jsonParseReviver);\n          result200 = CustomerDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllCustomers\",\n    value: function getAllCustomers() {\n      var _this11 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/GetAllCustomers\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this11.processGetAllCustomers(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this11.processGetAllCustomers(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllCustomers\",\n    value: function processGetAllCustomers(response) {\n      var _this12 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator7 = _createForOfIteratorHelper(response.headers.keys()),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var key = _step7.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this12.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator8 = _createForOfIteratorHelper(resultData200),\n                _step8;\n\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var item = _step8.value;\n                result200.push(CustomerDto.fromJS(item));\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllCustomersPaged\",\n    value: function getAllCustomersPaged(keyword, skipCount, maxResultCount) {\n      var _this13 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/GetAllCustomersPaged?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this13.processGetAllCustomersPaged(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this13.processGetAllCustomersPaged(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllCustomersPaged\",\n    value: function processGetAllCustomersPaged(response) {\n      var _this14 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator9 = _createForOfIteratorHelper(response.headers.keys()),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var key = _step9.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this14.jsonParseReviver);\n          result200 = CustomerDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"updateCustomer\",\n    value: function updateCustomer(body) {\n      var _this15 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/UpdateCustomer\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this15.processUpdateCustomer(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this15.processUpdateCustomer(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdateCustomer\",\n    value: function processUpdateCustomer(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator10 = _createForOfIteratorHelper(response.headers.keys()),\n            _step10;\n\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var key = _step10.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"deleteCustomer\",\n    value: function deleteCustomer(id) {\n      var _this16 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Customer/DeleteCustomer?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this16.processDeleteCustomer(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this16.processDeleteCustomer(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDeleteCustomer\",\n    value: function processDeleteCustomer(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator11 = _createForOfIteratorHelper(response.headers.keys()),\n            _step11;\n\n        try {\n          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n            var key = _step11.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator11.e(err);\n        } finally {\n          _iterator11.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return CustomerServiceProxy;\n}();\n\nCustomerServiceProxy.ɵfac = function CustomerServiceProxy_Factory(t) {\n  return new (t || CustomerServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nCustomerServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CustomerServiceProxy,\n  factory: CustomerServiceProxy.ɵfac\n});\nexport var DocumentServiceProxy = /*#__PURE__*/function () {\n  function DocumentServiceProxy(http, baseUrl) {\n    _classCallCheck(this, DocumentServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(DocumentServiceProxy, [{\n    key: \"createDocument\",\n    value: function createDocument(body) {\n      var _this17 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/CreateDocument\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this17.processCreateDocument(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this17.processCreateDocument(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreateDocument\",\n    value: function processCreateDocument(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator12 = _createForOfIteratorHelper(response.headers.keys()),\n            _step12;\n\n        try {\n          for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n            var key = _step12.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator12.e(err);\n        } finally {\n          _iterator12.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getDocument\",\n    value: function getDocument(id) {\n      var _this18 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/GetDocument?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this18.processGetDocument(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this18.processGetDocument(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetDocument\",\n    value: function processGetDocument(response) {\n      var _this19 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator13 = _createForOfIteratorHelper(response.headers.keys()),\n            _step13;\n\n        try {\n          for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n            var key = _step13.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator13.e(err);\n        } finally {\n          _iterator13.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this19.jsonParseReviver);\n          result200 = DocumentDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllDocuments\",\n    value: function getAllDocuments() {\n      var _this20 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/GetAllDocuments\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this20.processGetAllDocuments(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this20.processGetAllDocuments(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllDocuments\",\n    value: function processGetAllDocuments(response) {\n      var _this21 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator14 = _createForOfIteratorHelper(response.headers.keys()),\n            _step14;\n\n        try {\n          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n            var key = _step14.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator14.e(err);\n        } finally {\n          _iterator14.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this21.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator15 = _createForOfIteratorHelper(resultData200),\n                _step15;\n\n            try {\n              for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n                var item = _step15.value;\n                result200.push(DocumentDto.fromJS(item));\n              }\n            } catch (err) {\n              _iterator15.e(err);\n            } finally {\n              _iterator15.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"deleteDocument\",\n    value: function deleteDocument(id) {\n      var _this22 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/DeleteDocument?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this22.processDeleteDocument(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this22.processDeleteDocument(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDeleteDocument\",\n    value: function processDeleteDocument(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator16 = _createForOfIteratorHelper(response.headers.keys()),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var key = _step16.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllDocumentsPaged\",\n    value: function getAllDocumentsPaged(keyword, skipCount, maxResultCount) {\n      var _this23 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/GetAllDocumentsPaged?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this23.processGetAllDocumentsPaged(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this23.processGetAllDocumentsPaged(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllDocumentsPaged\",\n    value: function processGetAllDocumentsPaged(response) {\n      var _this24 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator17 = _createForOfIteratorHelper(response.headers.keys()),\n            _step17;\n\n        try {\n          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n            var key = _step17.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator17.e(err);\n        } finally {\n          _iterator17.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this24.jsonParseReviver);\n          result200 = DocumentDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"updateDocument\",\n    value: function updateDocument(body) {\n      var _this25 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/UpdateDocument\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this25.processUpdateDocument(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this25.processUpdateDocument(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdateDocument\",\n    value: function processUpdateDocument(response) {\n      var _this26 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator18 = _createForOfIteratorHelper(response.headers.keys()),\n            _step18;\n\n        try {\n          for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n            var key = _step18.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator18.e(err);\n        } finally {\n          _iterator18.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this26.jsonParseReviver);\n          result200 = DocumentDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param customerId (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getDocumentListByCustomer\",\n    value: function getDocumentListByCustomer(customerId) {\n      var _this27 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Document/GetDocumentListByCustomer?\";\n      if (customerId === null) throw new Error(\"The parameter 'customerId' cannot be null.\");else if (customerId !== undefined) url_ += \"customerId=\" + encodeURIComponent(\"\" + customerId) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this27.processGetDocumentListByCustomer(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this27.processGetDocumentListByCustomer(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetDocumentListByCustomer\",\n    value: function processGetDocumentListByCustomer(response) {\n      var _this28 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator19 = _createForOfIteratorHelper(response.headers.keys()),\n            _step19;\n\n        try {\n          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n            var key = _step19.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator19.e(err);\n        } finally {\n          _iterator19.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this28.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator20 = _createForOfIteratorHelper(resultData200),\n                _step20;\n\n            try {\n              for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n                var item = _step20.value;\n                result200.push(DocumentDto.fromJS(item));\n              }\n            } catch (err) {\n              _iterator20.e(err);\n            } finally {\n              _iterator20.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return DocumentServiceProxy;\n}();\n\nDocumentServiceProxy.ɵfac = function DocumentServiceProxy_Factory(t) {\n  return new (t || DocumentServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nDocumentServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DocumentServiceProxy,\n  factory: DocumentServiceProxy.ɵfac\n});\nexport var ProductServiceProxy = /*#__PURE__*/function () {\n  function ProductServiceProxy(http, baseUrl) {\n    _classCallCheck(this, ProductServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(ProductServiceProxy, [{\n    key: \"createProduct\",\n    value: function createProduct(body) {\n      var _this29 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/CreateProduct\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this29.processCreateProduct(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this29.processCreateProduct(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreateProduct\",\n    value: function processCreateProduct(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator21 = _createForOfIteratorHelper(response.headers.keys()),\n            _step21;\n\n        try {\n          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n            var key = _step21.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator21.e(err);\n        } finally {\n          _iterator21.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getProduct\",\n    value: function getProduct(id) {\n      var _this30 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/GetProduct?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this30.processGetProduct(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this30.processGetProduct(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetProduct\",\n    value: function processGetProduct(response) {\n      var _this31 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator22 = _createForOfIteratorHelper(response.headers.keys()),\n            _step22;\n\n        try {\n          for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n            var key = _step22.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator22.e(err);\n        } finally {\n          _iterator22.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this31.jsonParseReviver);\n          result200 = ProductDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllProducts\",\n    value: function getAllProducts() {\n      var _this32 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/GetAllProducts\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this32.processGetAllProducts(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this32.processGetAllProducts(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllProducts\",\n    value: function processGetAllProducts(response) {\n      var _this33 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator23 = _createForOfIteratorHelper(response.headers.keys()),\n            _step23;\n\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var key = _step23.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this33.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator24 = _createForOfIteratorHelper(resultData200),\n                _step24;\n\n            try {\n              for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n                var item = _step24.value;\n                result200.push(ProductDto.fromJS(item));\n              }\n            } catch (err) {\n              _iterator24.e(err);\n            } finally {\n              _iterator24.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllProductsPaged\",\n    value: function getAllProductsPaged(keyword, skipCount, maxResultCount) {\n      var _this34 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/GetAllProductsPaged?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this34.processGetAllProductsPaged(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this34.processGetAllProductsPaged(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllProductsPaged\",\n    value: function processGetAllProductsPaged(response) {\n      var _this35 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator25 = _createForOfIteratorHelper(response.headers.keys()),\n            _step25;\n\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var key = _step25.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this35.jsonParseReviver);\n          result200 = ProductDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"updateProduct\",\n    value: function updateProduct(body) {\n      var _this36 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/UpdateProduct\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this36.processUpdateProduct(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this36.processUpdateProduct(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdateProduct\",\n    value: function processUpdateProduct(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator26 = _createForOfIteratorHelper(response.headers.keys()),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var key = _step26.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"deleteProduct\",\n    value: function deleteProduct(id) {\n      var _this37 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Product/DeleteProduct?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this37.processDeleteProduct(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this37.processDeleteProduct(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDeleteProduct\",\n    value: function processDeleteProduct(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator27 = _createForOfIteratorHelper(response.headers.keys()),\n            _step27;\n\n        try {\n          for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n            var key = _step27.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator27.e(err);\n        } finally {\n          _iterator27.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return ProductServiceProxy;\n}();\n\nProductServiceProxy.ɵfac = function ProductServiceProxy_Factory(t) {\n  return new (t || ProductServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nProductServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductServiceProxy,\n  factory: ProductServiceProxy.ɵfac\n});\nexport var RoleServiceProxy = /*#__PURE__*/function () {\n  function RoleServiceProxy(http, baseUrl) {\n    _classCallCheck(this, RoleServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(RoleServiceProxy, [{\n    key: \"create\",\n    value: function create(body) {\n      var _this38 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/Create\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this38.processCreate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this38.processCreate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreate\",\n    value: function processCreate(response) {\n      var _this39 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator28 = _createForOfIteratorHelper(response.headers.keys()),\n            _step28;\n\n        try {\n          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n            var key = _step28.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator28.e(err);\n        } finally {\n          _iterator28.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this39.jsonParseReviver);\n          result200 = RoleDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param permission (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getRoles\",\n    value: function getRoles(permission) {\n      var _this40 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/GetRoles?\";\n      if (permission === null) throw new Error(\"The parameter 'permission' cannot be null.\");else if (permission !== undefined) url_ += \"Permission=\" + encodeURIComponent(\"\" + permission) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this40.processGetRoles(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this40.processGetRoles(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetRoles\",\n    value: function processGetRoles(response) {\n      var _this41 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator29 = _createForOfIteratorHelper(response.headers.keys()),\n            _step29;\n\n        try {\n          for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n            var key = _step29.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator29.e(err);\n        } finally {\n          _iterator29.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this41.jsonParseReviver);\n          result200 = RoleListDtoListResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(body) {\n      var _this42 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/Update\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this42.processUpdate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this42.processUpdate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdate\",\n    value: function processUpdate(response) {\n      var _this43 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator30 = _createForOfIteratorHelper(response.headers.keys()),\n            _step30;\n\n        try {\n          for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n            var key = _step30.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator30.e(err);\n        } finally {\n          _iterator30.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this43.jsonParseReviver);\n          result200 = RoleDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var _this44 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/Delete?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this44.processDelete(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this44.processDelete(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDelete\",\n    value: function processDelete(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator31 = _createForOfIteratorHelper(response.headers.keys()),\n            _step31;\n\n        try {\n          for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n            var key = _step31.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator31.e(err);\n        } finally {\n          _iterator31.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllPermissions\",\n    value: function getAllPermissions() {\n      var _this45 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/GetAllPermissions\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this45.processGetAllPermissions(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this45.processGetAllPermissions(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllPermissions\",\n    value: function processGetAllPermissions(response) {\n      var _this46 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator32 = _createForOfIteratorHelper(response.headers.keys()),\n            _step32;\n\n        try {\n          for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n            var key = _step32.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator32.e(err);\n        } finally {\n          _iterator32.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this46.jsonParseReviver);\n          result200 = PermissionDtoListResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getRoleForEdit\",\n    value: function getRoleForEdit(id) {\n      var _this47 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/GetRoleForEdit?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this47.processGetRoleForEdit(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this47.processGetRoleForEdit(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetRoleForEdit\",\n    value: function processGetRoleForEdit(response) {\n      var _this48 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator33 = _createForOfIteratorHelper(response.headers.keys()),\n            _step33;\n\n        try {\n          for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n            var key = _step33.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator33.e(err);\n        } finally {\n          _iterator33.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this48.jsonParseReviver);\n          result200 = GetRoleForEditOutput.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var _this49 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/Get?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this49.processGet(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this49.processGet(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGet\",\n    value: function processGet(response) {\n      var _this50 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator34 = _createForOfIteratorHelper(response.headers.keys()),\n            _step34;\n\n        try {\n          for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n            var key = _step34.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator34.e(err);\n        } finally {\n          _iterator34.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this50.jsonParseReviver);\n          result200 = RoleDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(keyword, skipCount, maxResultCount) {\n      var _this51 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Role/GetAll?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this51.processGetAll(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this51.processGetAll(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAll\",\n    value: function processGetAll(response) {\n      var _this52 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator35 = _createForOfIteratorHelper(response.headers.keys()),\n            _step35;\n\n        try {\n          for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n            var key = _step35.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator35.e(err);\n        } finally {\n          _iterator35.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this52.jsonParseReviver);\n          result200 = RoleDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return RoleServiceProxy;\n}();\n\nRoleServiceProxy.ɵfac = function RoleServiceProxy_Factory(t) {\n  return new (t || RoleServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nRoleServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: RoleServiceProxy,\n  factory: RoleServiceProxy.ɵfac\n});\nexport var SessionServiceProxy = /*#__PURE__*/function () {\n  function SessionServiceProxy(http, baseUrl) {\n    _classCallCheck(this, SessionServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @return Success\n   */\n\n\n  _createClass(SessionServiceProxy, [{\n    key: \"getCurrentLoginInformations\",\n    value: function getCurrentLoginInformations() {\n      var _this53 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Session/GetCurrentLoginInformations\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this53.processGetCurrentLoginInformations(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this53.processGetCurrentLoginInformations(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetCurrentLoginInformations\",\n    value: function processGetCurrentLoginInformations(response) {\n      var _this54 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator36 = _createForOfIteratorHelper(response.headers.keys()),\n            _step36;\n\n        try {\n          for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n            var key = _step36.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator36.e(err);\n        } finally {\n          _iterator36.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this54.jsonParseReviver);\n          result200 = GetCurrentLoginInformationsOutput.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return SessionServiceProxy;\n}();\n\nSessionServiceProxy.ɵfac = function SessionServiceProxy_Factory(t) {\n  return new (t || SessionServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nSessionServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SessionServiceProxy,\n  factory: SessionServiceProxy.ɵfac\n});\nexport var TenantServiceProxy = /*#__PURE__*/function () {\n  function TenantServiceProxy(http, baseUrl) {\n    _classCallCheck(this, TenantServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(TenantServiceProxy, [{\n    key: \"create\",\n    value: function create(body) {\n      var _this55 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Tenant/Create\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this55.processCreate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this55.processCreate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreate\",\n    value: function processCreate(response) {\n      var _this56 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator37 = _createForOfIteratorHelper(response.headers.keys()),\n            _step37;\n\n        try {\n          for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n            var key = _step37.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator37.e(err);\n        } finally {\n          _iterator37.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this56.jsonParseReviver);\n          result200 = TenantDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var _this57 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Tenant/Delete?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this57.processDelete(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this57.processDelete(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDelete\",\n    value: function processDelete(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator38 = _createForOfIteratorHelper(response.headers.keys()),\n            _step38;\n\n        try {\n          for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n            var key = _step38.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator38.e(err);\n        } finally {\n          _iterator38.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var _this58 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Tenant/Get?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this58.processGet(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this58.processGet(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGet\",\n    value: function processGet(response) {\n      var _this59 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator39 = _createForOfIteratorHelper(response.headers.keys()),\n            _step39;\n\n        try {\n          for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n            var key = _step39.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator39.e(err);\n        } finally {\n          _iterator39.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this59.jsonParseReviver);\n          result200 = TenantDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param isActive (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(keyword, isActive, skipCount, maxResultCount) {\n      var _this60 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Tenant/GetAll?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (isActive === null) throw new Error(\"The parameter 'isActive' cannot be null.\");else if (isActive !== undefined) url_ += \"IsActive=\" + encodeURIComponent(\"\" + isActive) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this60.processGetAll(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this60.processGetAll(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAll\",\n    value: function processGetAll(response) {\n      var _this61 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator40 = _createForOfIteratorHelper(response.headers.keys()),\n            _step40;\n\n        try {\n          for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n            var key = _step40.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator40.e(err);\n        } finally {\n          _iterator40.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this61.jsonParseReviver);\n          result200 = TenantDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(body) {\n      var _this62 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Tenant/Update\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this62.processUpdate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this62.processUpdate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdate\",\n    value: function processUpdate(response) {\n      var _this63 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator41 = _createForOfIteratorHelper(response.headers.keys()),\n            _step41;\n\n        try {\n          for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n            var key = _step41.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator41.e(err);\n        } finally {\n          _iterator41.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this63.jsonParseReviver);\n          result200 = TenantDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return TenantServiceProxy;\n}();\n\nTenantServiceProxy.ɵfac = function TenantServiceProxy_Factory(t) {\n  return new (t || TenantServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nTenantServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TenantServiceProxy,\n  factory: TenantServiceProxy.ɵfac\n});\nexport var TokenAuthServiceProxy = /*#__PURE__*/function () {\n  function TokenAuthServiceProxy(http, baseUrl) {\n    _classCallCheck(this, TokenAuthServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(TokenAuthServiceProxy, [{\n    key: \"authenticate\",\n    value: function authenticate(body) {\n      var _this64 = this;\n\n      var url_ = this.baseUrl + \"/api/TokenAuth/Authenticate\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this64.processAuthenticate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this64.processAuthenticate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processAuthenticate\",\n    value: function processAuthenticate(response) {\n      var _this65 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator42 = _createForOfIteratorHelper(response.headers.keys()),\n            _step42;\n\n        try {\n          for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n            var key = _step42.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator42.e(err);\n        } finally {\n          _iterator42.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this65.jsonParseReviver);\n          result200 = AuthenticateResultModel.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getExternalAuthenticationProviders\",\n    value: function getExternalAuthenticationProviders() {\n      var _this66 = this;\n\n      var url_ = this.baseUrl + \"/api/TokenAuth/GetExternalAuthenticationProviders\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this66.processGetExternalAuthenticationProviders(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this66.processGetExternalAuthenticationProviders(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetExternalAuthenticationProviders\",\n    value: function processGetExternalAuthenticationProviders(response) {\n      var _this67 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator43 = _createForOfIteratorHelper(response.headers.keys()),\n            _step43;\n\n        try {\n          for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n            var key = _step43.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator43.e(err);\n        } finally {\n          _iterator43.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this67.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator44 = _createForOfIteratorHelper(resultData200),\n                _step44;\n\n            try {\n              for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n                var item = _step44.value;\n                result200.push(ExternalLoginProviderInfoModel.fromJS(item));\n              }\n            } catch (err) {\n              _iterator44.e(err);\n            } finally {\n              _iterator44.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"externalAuthenticate\",\n    value: function externalAuthenticate(body) {\n      var _this68 = this;\n\n      var url_ = this.baseUrl + \"/api/TokenAuth/ExternalAuthenticate\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this68.processExternalAuthenticate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this68.processExternalAuthenticate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processExternalAuthenticate\",\n    value: function processExternalAuthenticate(response) {\n      var _this69 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator45 = _createForOfIteratorHelper(response.headers.keys()),\n            _step45;\n\n        try {\n          for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n            var key = _step45.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator45.e(err);\n        } finally {\n          _iterator45.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this69.jsonParseReviver);\n          result200 = ExternalAuthenticateResultModel.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return TokenAuthServiceProxy;\n}();\n\nTokenAuthServiceProxy.ɵfac = function TokenAuthServiceProxy_Factory(t) {\n  return new (t || TokenAuthServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nTokenAuthServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenAuthServiceProxy,\n  factory: TokenAuthServiceProxy.ɵfac\n});\nexport var UserServiceProxy = /*#__PURE__*/function () {\n  function UserServiceProxy(http, baseUrl) {\n    _classCallCheck(this, UserServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(UserServiceProxy, [{\n    key: \"create\",\n    value: function create(body) {\n      var _this70 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/Create\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this70.processCreate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this70.processCreate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreate\",\n    value: function processCreate(response) {\n      var _this71 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator46 = _createForOfIteratorHelper(response.headers.keys()),\n            _step46;\n\n        try {\n          for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n            var key = _step46.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator46.e(err);\n        } finally {\n          _iterator46.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this71.jsonParseReviver);\n          result200 = UserDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"update\",\n    value: function update(body) {\n      var _this72 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/Update\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this72.processUpdate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this72.processUpdate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdate\",\n    value: function processUpdate(response) {\n      var _this73 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator47 = _createForOfIteratorHelper(response.headers.keys()),\n            _step47;\n\n        try {\n          for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n            var key = _step47.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator47.e(err);\n        } finally {\n          _iterator47.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this73.jsonParseReviver);\n          result200 = UserDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      var _this74 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/Delete?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this74.processDelete(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this74.processDelete(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDelete\",\n    value: function processDelete(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator48 = _createForOfIteratorHelper(response.headers.keys()),\n            _step48;\n\n        try {\n          for (_iterator48.s(); !(_step48 = _iterator48.n()).done;) {\n            var key = _step48.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator48.e(err);\n        } finally {\n          _iterator48.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate(body) {\n      var _this75 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/Activate\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this75.processActivate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this75.processActivate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processActivate\",\n    value: function processActivate(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator49 = _createForOfIteratorHelper(response.headers.keys()),\n            _step49;\n\n        try {\n          for (_iterator49.s(); !(_step49 = _iterator49.n()).done;) {\n            var key = _step49.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator49.e(err);\n        } finally {\n          _iterator49.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"deActivate\",\n    value: function deActivate(body) {\n      var _this76 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/DeActivate\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this76.processDeActivate(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this76.processDeActivate(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDeActivate\",\n    value: function processDeActivate(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator50 = _createForOfIteratorHelper(response.headers.keys()),\n            _step50;\n\n        try {\n          for (_iterator50.s(); !(_step50 = _iterator50.n()).done;) {\n            var key = _step50.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator50.e(err);\n        } finally {\n          _iterator50.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getRoles\",\n    value: function getRoles() {\n      var _this77 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/GetRoles\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this77.processGetRoles(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this77.processGetRoles(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetRoles\",\n    value: function processGetRoles(response) {\n      var _this78 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator51 = _createForOfIteratorHelper(response.headers.keys()),\n            _step51;\n\n        try {\n          for (_iterator51.s(); !(_step51 = _iterator51.n()).done;) {\n            var key = _step51.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator51.e(err);\n        } finally {\n          _iterator51.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this78.jsonParseReviver);\n          result200 = RoleDtoListResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"changeLanguage\",\n    value: function changeLanguage(body) {\n      var _this79 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/ChangeLanguage\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this79.processChangeLanguage(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this79.processChangeLanguage(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processChangeLanguage\",\n    value: function processChangeLanguage(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator52 = _createForOfIteratorHelper(response.headers.keys()),\n            _step52;\n\n        try {\n          for (_iterator52.s(); !(_step52 = _iterator52.n()).done;) {\n            var key = _step52.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator52.e(err);\n        } finally {\n          _iterator52.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(body) {\n      var _this80 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/ChangePassword\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this80.processChangePassword(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this80.processChangePassword(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processChangePassword\",\n    value: function processChangePassword(response) {\n      var _this81 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator53 = _createForOfIteratorHelper(response.headers.keys()),\n            _step53;\n\n        try {\n          for (_iterator53.s(); !(_step53 = _iterator53.n()).done;) {\n            var key = _step53.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator53.e(err);\n        } finally {\n          _iterator53.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this81.jsonParseReviver);\n          result200 = resultData200 !== undefined ? resultData200 : null;\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(body) {\n      var _this82 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/ResetPassword\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\",\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this82.processResetPassword(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this82.processResetPassword(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processResetPassword\",\n    value: function processResetPassword(response) {\n      var _this83 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator54 = _createForOfIteratorHelper(response.headers.keys()),\n            _step54;\n\n        try {\n          for (_iterator54.s(); !(_step54 = _iterator54.n()).done;) {\n            var key = _step54.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator54.e(err);\n        } finally {\n          _iterator54.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this83.jsonParseReviver);\n          result200 = resultData200 !== undefined ? resultData200 : null;\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      var _this84 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/Get?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this84.processGet(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this84.processGet(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGet\",\n    value: function processGet(response) {\n      var _this85 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator55 = _createForOfIteratorHelper(response.headers.keys()),\n            _step55;\n\n        try {\n          for (_iterator55.s(); !(_step55 = _iterator55.n()).done;) {\n            var key = _step55.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator55.e(err);\n        } finally {\n          _iterator55.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this85.jsonParseReviver);\n          result200 = UserDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param isActive (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAll\",\n    value: function getAll(keyword, isActive, skipCount, maxResultCount) {\n      var _this86 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/User/GetAll?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (isActive === null) throw new Error(\"The parameter 'isActive' cannot be null.\");else if (isActive !== undefined) url_ += \"IsActive=\" + encodeURIComponent(\"\" + isActive) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this86.processGetAll(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this86.processGetAll(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAll\",\n    value: function processGetAll(response) {\n      var _this87 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator56 = _createForOfIteratorHelper(response.headers.keys()),\n            _step56;\n\n        try {\n          for (_iterator56.s(); !(_step56 = _iterator56.n()).done;) {\n            var key = _step56.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator56.e(err);\n        } finally {\n          _iterator56.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this87.jsonParseReviver);\n          result200 = UserDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return UserServiceProxy;\n}();\n\nUserServiceProxy.ɵfac = function UserServiceProxy_Factory(t) {\n  return new (t || UserServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nUserServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserServiceProxy,\n  factory: UserServiceProxy.ɵfac\n});\nexport var WarehouseServiceProxy = /*#__PURE__*/function () {\n  function WarehouseServiceProxy(http, baseUrl) {\n    _classCallCheck(this, WarehouseServiceProxy);\n\n    this.jsonParseReviver = undefined;\n    this.http = http;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n  }\n  /**\n   * @param body (optional)\n   * @return Success\n   */\n\n\n  _createClass(WarehouseServiceProxy, [{\n    key: \"createWarehouse\",\n    value: function createWarehouse(body) {\n      var _this88 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/CreateWarehouse\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this88.processCreateWarehouse(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this88.processCreateWarehouse(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processCreateWarehouse\",\n    value: function processCreateWarehouse(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator57 = _createForOfIteratorHelper(response.headers.keys()),\n            _step57;\n\n        try {\n          for (_iterator57.s(); !(_step57 = _iterator57.n()).done;) {\n            var key = _step57.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator57.e(err);\n        } finally {\n          _iterator57.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getWarehouse\",\n    value: function getWarehouse(id) {\n      var _this89 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/GetWarehouse?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this89.processGetWarehouse(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this89.processGetWarehouse(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetWarehouse\",\n    value: function processGetWarehouse(response) {\n      var _this90 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator58 = _createForOfIteratorHelper(response.headers.keys()),\n            _step58;\n\n        try {\n          for (_iterator58.s(); !(_step58 = _iterator58.n()).done;) {\n            var key = _step58.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator58.e(err);\n        } finally {\n          _iterator58.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this90.jsonParseReviver);\n          result200 = WarehouseDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllWarehouses\",\n    value: function getAllWarehouses() {\n      var _this91 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/GetAllWarehouses\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this91.processGetAllWarehouses(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this91.processGetAllWarehouses(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllWarehouses\",\n    value: function processGetAllWarehouses(response) {\n      var _this92 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator59 = _createForOfIteratorHelper(response.headers.keys()),\n            _step59;\n\n        try {\n          for (_iterator59.s(); !(_step59 = _iterator59.n()).done;) {\n            var key = _step59.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator59.e(err);\n        } finally {\n          _iterator59.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this92.jsonParseReviver);\n\n          if (Array.isArray(resultData200)) {\n            result200 = [];\n\n            var _iterator60 = _createForOfIteratorHelper(resultData200),\n                _step60;\n\n            try {\n              for (_iterator60.s(); !(_step60 = _iterator60.n()).done;) {\n                var item = _step60.value;\n                result200.push(WarehouseDto.fromJS(item));\n              }\n            } catch (err) {\n              _iterator60.e(err);\n            } finally {\n              _iterator60.f();\n            }\n          } else {\n            result200 = null;\n          }\n\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param keyword (optional)\n     * @param skipCount (optional)\n     * @param maxResultCount (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"getAllWarehousesPaged\",\n    value: function getAllWarehousesPaged(keyword, skipCount, maxResultCount) {\n      var _this93 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/GetAllWarehousesPaged?\";\n      if (keyword === null) throw new Error(\"The parameter 'keyword' cannot be null.\");else if (keyword !== undefined) url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n      if (skipCount === null) throw new Error(\"The parameter 'skipCount' cannot be null.\");else if (skipCount !== undefined) url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n      if (maxResultCount === null) throw new Error(\"The parameter 'maxResultCount' cannot be null.\");else if (maxResultCount !== undefined) url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Accept\": \"text/plain\"\n        })\n      };\n      return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this93.processGetAllWarehousesPaged(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this93.processGetAllWarehousesPaged(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processGetAllWarehousesPaged\",\n    value: function processGetAllWarehousesPaged(response) {\n      var _this94 = this;\n\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator61 = _createForOfIteratorHelper(response.headers.keys()),\n            _step61;\n\n        try {\n          for (_iterator61.s(); !(_step61 = _iterator61.n()).done;) {\n            var key = _step61.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator61.e(err);\n        } finally {\n          _iterator61.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          var result200 = null;\n          var resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, _this94.jsonParseReviver);\n          result200 = WarehouseDtoPagedResultDto.fromJS(resultData200);\n          return _observableOf(result200);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param body (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"updateWarehouse\",\n    value: function updateWarehouse(body) {\n      var _this95 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/UpdateWarehouse\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var content_ = JSON.stringify(body);\n      var options_ = {\n        body: content_,\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({\n          \"Content-Type\": \"application/json-patch+json\"\n        })\n      };\n      return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this95.processUpdateWarehouse(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this95.processUpdateWarehouse(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processUpdateWarehouse\",\n    value: function processUpdateWarehouse(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator62 = _createForOfIteratorHelper(response.headers.keys()),\n            _step62;\n\n        try {\n          for (_iterator62.s(); !(_step62 = _iterator62.n()).done;) {\n            var key = _step62.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator62.e(err);\n        } finally {\n          _iterator62.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n    /**\n     * @param id (optional)\n     * @return Success\n     */\n\n  }, {\n    key: \"deleteWarehouse\",\n    value: function deleteWarehouse(id) {\n      var _this96 = this;\n\n      var url_ = this.baseUrl + \"/api/services/app/Warehouse/DeleteWarehouse?\";\n      if (id === null) throw new Error(\"The parameter 'id' cannot be null.\");else if (id !== undefined) url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n      url_ = url_.replace(/[?&]$/, \"\");\n      var options_ = {\n        observe: \"response\",\n        responseType: \"blob\",\n        headers: new HttpHeaders({})\n      };\n      return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap(function (response_) {\n        return _this96.processDeleteWarehouse(response_);\n      })).pipe(_observableCatch(function (response_) {\n        if (response_ instanceof HttpResponseBase) {\n          try {\n            return _this96.processDeleteWarehouse(response_);\n          } catch (e) {\n            return _observableThrow(e);\n          }\n        } else return _observableThrow(response_);\n      }));\n    }\n  }, {\n    key: \"processDeleteWarehouse\",\n    value: function processDeleteWarehouse(response) {\n      var status = response.status;\n      var responseBlob = response instanceof HttpResponse ? response.body : response.error instanceof Blob ? response.error : undefined;\n      var _headers = {};\n\n      if (response.headers) {\n        var _iterator63 = _createForOfIteratorHelper(response.headers.keys()),\n            _step63;\n\n        try {\n          for (_iterator63.s(); !(_step63 = _iterator63.n()).done;) {\n            var key = _step63.value;\n            _headers[key] = response.headers.get(key);\n          }\n        } catch (err) {\n          _iterator63.e(err);\n        } finally {\n          _iterator63.f();\n        }\n      }\n\n      if (status === 200) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return _observableOf(null);\n        }));\n      } else if (status !== 200 && status !== 204) {\n        return blobToText(responseBlob).pipe(_observableMergeMap(function (_responseText) {\n          return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n        }));\n      }\n\n      return _observableOf(null);\n    }\n  }]);\n\n  return WarehouseServiceProxy;\n}();\n\nWarehouseServiceProxy.ɵfac = function WarehouseServiceProxy_Factory(t) {\n  return new (t || WarehouseServiceProxy)(i0.ɵɵinject(HttpClient), i0.ɵɵinject(API_BASE_URL, 8));\n};\n\nWarehouseServiceProxy.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WarehouseServiceProxy,\n  factory: WarehouseServiceProxy.ɵfac\n});\nexport var ApplicationInfoDto = /*#__PURE__*/function () {\n  function ApplicationInfoDto(data) {\n    _classCallCheck(this, ApplicationInfoDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ApplicationInfoDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.version = _data[\"version\"];\n        this.releaseDate = _data[\"releaseDate\"] ? new Date(_data[\"releaseDate\"].toString()) : undefined;\n\n        if (_data[\"features\"]) {\n          this.features = {};\n\n          for (var key in _data[\"features\"]) {\n            if (_data[\"features\"].hasOwnProperty(key)) this.features[key] = _data[\"features\"][key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"version\"] = this.version;\n      data[\"releaseDate\"] = this.releaseDate ? this.releaseDate.toISOString() : undefined;\n\n      if (this.features) {\n        data[\"features\"] = {};\n\n        for (var key in this.features) {\n          if (this.features.hasOwnProperty(key)) data[\"features\"][key] = this.features[key];\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ApplicationInfoDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ApplicationInfoDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ApplicationInfoDto;\n}();\nexport var AuthenticateModel = /*#__PURE__*/function () {\n  function AuthenticateModel(data) {\n    _classCallCheck(this, AuthenticateModel);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(AuthenticateModel, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.userNameOrEmailAddress = _data[\"userNameOrEmailAddress\"];\n        this.password = _data[\"password\"];\n        this.rememberClient = _data[\"rememberClient\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"userNameOrEmailAddress\"] = this.userNameOrEmailAddress;\n      data[\"password\"] = this.password;\n      data[\"rememberClient\"] = this.rememberClient;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new AuthenticateModel();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new AuthenticateModel();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return AuthenticateModel;\n}();\nexport var AuthenticateResultModel = /*#__PURE__*/function () {\n  function AuthenticateResultModel(data) {\n    _classCallCheck(this, AuthenticateResultModel);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(AuthenticateResultModel, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.accessToken = _data[\"accessToken\"];\n        this.encryptedAccessToken = _data[\"encryptedAccessToken\"];\n        this.expireInSeconds = _data[\"expireInSeconds\"];\n        this.userId = _data[\"userId\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"accessToken\"] = this.accessToken;\n      data[\"encryptedAccessToken\"] = this.encryptedAccessToken;\n      data[\"expireInSeconds\"] = this.expireInSeconds;\n      data[\"userId\"] = this.userId;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new AuthenticateResultModel();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new AuthenticateResultModel();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return AuthenticateResultModel;\n}();\nexport var ChangePasswordDto = /*#__PURE__*/function () {\n  function ChangePasswordDto(data) {\n    _classCallCheck(this, ChangePasswordDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ChangePasswordDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.currentPassword = _data[\"currentPassword\"];\n        this.newPassword = _data[\"newPassword\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"currentPassword\"] = this.currentPassword;\n      data[\"newPassword\"] = this.newPassword;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ChangePasswordDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ChangePasswordDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ChangePasswordDto;\n}();\nexport var ChangeUiThemeInput = /*#__PURE__*/function () {\n  function ChangeUiThemeInput(data) {\n    _classCallCheck(this, ChangeUiThemeInput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ChangeUiThemeInput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.theme = _data[\"theme\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"theme\"] = this.theme;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ChangeUiThemeInput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ChangeUiThemeInput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ChangeUiThemeInput;\n}();\nexport var ChangeUserLanguageDto = /*#__PURE__*/function () {\n  function ChangeUserLanguageDto(data) {\n    _classCallCheck(this, ChangeUserLanguageDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ChangeUserLanguageDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.languageName = _data[\"languageName\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"languageName\"] = this.languageName;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ChangeUserLanguageDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ChangeUserLanguageDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ChangeUserLanguageDto;\n}();\nexport var CreateCustomerDto = /*#__PURE__*/function () {\n  function CreateCustomerDto(data) {\n    _classCallCheck(this, CreateCustomerDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateCustomerDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.customerCode = _data[\"customerCode\"];\n        this.title = _data[\"title\"];\n        this.taxNo = _data[\"taxNo\"];\n        this.taxOffice = _data[\"taxOffice\"];\n        this.telephone = _data[\"telephone\"];\n        this.email = _data[\"email\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"customerCode\"] = this.customerCode;\n      data[\"title\"] = this.title;\n      data[\"taxNo\"] = this.taxNo;\n      data[\"taxOffice\"] = this.taxOffice;\n      data[\"telephone\"] = this.telephone;\n      data[\"email\"] = this.email;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateCustomerDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateCustomerDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateCustomerDto;\n}();\nexport var CreateDocumentDto = /*#__PURE__*/function () {\n  function CreateDocumentDto(data) {\n    _classCallCheck(this, CreateDocumentDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateDocumentDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.documentNumber = _data[\"documentNumber\"];\n        this.documentDate = _data[\"documentDate\"] ? new Date(_data[\"documentDate\"].toString()) : undefined;\n        this.registrationDate = _data[\"registrationDate\"] ? new Date(_data[\"registrationDate\"].toString()) : undefined;\n        this.customerId = _data[\"customerId\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"documentNumber\"] = this.documentNumber;\n      data[\"documentDate\"] = this.documentDate ? this.documentDate.toISOString() : undefined;\n      data[\"registrationDate\"] = this.registrationDate ? this.registrationDate.toISOString() : undefined;\n      data[\"customerId\"] = this.customerId;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateDocumentDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateDocumentDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateDocumentDto;\n}();\nexport var CreateProductDto = /*#__PURE__*/function () {\n  function CreateProductDto(data) {\n    _classCallCheck(this, CreateProductDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateProductDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.productCode = _data[\"productCode\"];\n        this.productName = _data[\"productName\"];\n        this.brand = _data[\"brand\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"productCode\"] = this.productCode;\n      data[\"productName\"] = this.productName;\n      data[\"brand\"] = this.brand;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateProductDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateProductDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateProductDto;\n}();\nexport var CreateRoleDto = /*#__PURE__*/function () {\n  function CreateRoleDto(data) {\n    _classCallCheck(this, CreateRoleDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateRoleDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.normalizedName = _data[\"normalizedName\"];\n        this.description = _data[\"description\"];\n\n        if (Array.isArray(_data[\"grantedPermissions\"])) {\n          this.grantedPermissions = [];\n\n          var _iterator64 = _createForOfIteratorHelper(_data[\"grantedPermissions\"]),\n              _step64;\n\n          try {\n            for (_iterator64.s(); !(_step64 = _iterator64.n()).done;) {\n              var item = _step64.value;\n              this.grantedPermissions.push(item);\n            }\n          } catch (err) {\n            _iterator64.e(err);\n          } finally {\n            _iterator64.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"normalizedName\"] = this.normalizedName;\n      data[\"description\"] = this.description;\n\n      if (Array.isArray(this.grantedPermissions)) {\n        data[\"grantedPermissions\"] = [];\n\n        var _iterator65 = _createForOfIteratorHelper(this.grantedPermissions),\n            _step65;\n\n        try {\n          for (_iterator65.s(); !(_step65 = _iterator65.n()).done;) {\n            var item = _step65.value;\n            data[\"grantedPermissions\"].push(item);\n          }\n        } catch (err) {\n          _iterator65.e(err);\n        } finally {\n          _iterator65.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateRoleDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateRoleDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateRoleDto;\n}();\nexport var CreateTenantDto = /*#__PURE__*/function () {\n  function CreateTenantDto(data) {\n    _classCallCheck(this, CreateTenantDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateTenantDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.tenancyName = _data[\"tenancyName\"];\n        this.name = _data[\"name\"];\n        this.adminEmailAddress = _data[\"adminEmailAddress\"];\n        this.connectionString = _data[\"connectionString\"];\n        this.isActive = _data[\"isActive\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"tenancyName\"] = this.tenancyName;\n      data[\"name\"] = this.name;\n      data[\"adminEmailAddress\"] = this.adminEmailAddress;\n      data[\"connectionString\"] = this.connectionString;\n      data[\"isActive\"] = this.isActive;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateTenantDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateTenantDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateTenantDto;\n}();\nexport var CreateUserDto = /*#__PURE__*/function () {\n  function CreateUserDto(data) {\n    _classCallCheck(this, CreateUserDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateUserDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.userName = _data[\"userName\"];\n        this.name = _data[\"name\"];\n        this.surname = _data[\"surname\"];\n        this.emailAddress = _data[\"emailAddress\"];\n        this.isActive = _data[\"isActive\"];\n\n        if (Array.isArray(_data[\"roleNames\"])) {\n          this.roleNames = [];\n\n          var _iterator66 = _createForOfIteratorHelper(_data[\"roleNames\"]),\n              _step66;\n\n          try {\n            for (_iterator66.s(); !(_step66 = _iterator66.n()).done;) {\n              var item = _step66.value;\n              this.roleNames.push(item);\n            }\n          } catch (err) {\n            _iterator66.e(err);\n          } finally {\n            _iterator66.f();\n          }\n        }\n\n        this.password = _data[\"password\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"userName\"] = this.userName;\n      data[\"name\"] = this.name;\n      data[\"surname\"] = this.surname;\n      data[\"emailAddress\"] = this.emailAddress;\n      data[\"isActive\"] = this.isActive;\n\n      if (Array.isArray(this.roleNames)) {\n        data[\"roleNames\"] = [];\n\n        var _iterator67 = _createForOfIteratorHelper(this.roleNames),\n            _step67;\n\n        try {\n          for (_iterator67.s(); !(_step67 = _iterator67.n()).done;) {\n            var item = _step67.value;\n            data[\"roleNames\"].push(item);\n          }\n        } catch (err) {\n          _iterator67.e(err);\n        } finally {\n          _iterator67.f();\n        }\n      }\n\n      data[\"password\"] = this.password;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateUserDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateUserDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateUserDto;\n}();\nexport var CreateWarehouseDto = /*#__PURE__*/function () {\n  function CreateWarehouseDto(data) {\n    _classCallCheck(this, CreateWarehouseDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CreateWarehouseDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.warehouseCode = _data[\"warehouseCode\"];\n        this.warehouseName = _data[\"warehouseName\"];\n        this.warehouseType = _data[\"warehouseType\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"warehouseCode\"] = this.warehouseCode;\n      data[\"warehouseName\"] = this.warehouseName;\n      data[\"warehouseType\"] = this.warehouseType;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CreateWarehouseDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CreateWarehouseDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CreateWarehouseDto;\n}();\nexport var Customer = /*#__PURE__*/function () {\n  function Customer(data) {\n    _classCallCheck(this, Customer);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(Customer, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.customerCode = _data[\"customerCode\"];\n        this.title = _data[\"title\"];\n        this.taxNo = _data[\"taxNo\"];\n        this.taxOffice = _data[\"taxOffice\"];\n        this.telephone = _data[\"telephone\"];\n        this.email = _data[\"email\"];\n        this.isDeleted = _data[\"isDeleted\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"customerCode\"] = this.customerCode;\n      data[\"title\"] = this.title;\n      data[\"taxNo\"] = this.taxNo;\n      data[\"taxOffice\"] = this.taxOffice;\n      data[\"telephone\"] = this.telephone;\n      data[\"email\"] = this.email;\n      data[\"isDeleted\"] = this.isDeleted;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new Customer();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new Customer();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return Customer;\n}();\nexport var CustomerDto = /*#__PURE__*/function () {\n  function CustomerDto(data) {\n    _classCallCheck(this, CustomerDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CustomerDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.customerCode = _data[\"customerCode\"];\n        this.title = _data[\"title\"];\n        this.taxNo = _data[\"taxNo\"];\n        this.taxOffice = _data[\"taxOffice\"];\n        this.telephone = _data[\"telephone\"];\n        this.email = _data[\"email\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"customerCode\"] = this.customerCode;\n      data[\"title\"] = this.title;\n      data[\"taxNo\"] = this.taxNo;\n      data[\"taxOffice\"] = this.taxOffice;\n      data[\"telephone\"] = this.telephone;\n      data[\"email\"] = this.email;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CustomerDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CustomerDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CustomerDto;\n}();\nexport var CustomerDtoPagedResultDto = /*#__PURE__*/function () {\n  function CustomerDtoPagedResultDto(data) {\n    _classCallCheck(this, CustomerDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(CustomerDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator68 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step68;\n\n          try {\n            for (_iterator68.s(); !(_step68 = _iterator68.n()).done;) {\n              var item = _step68.value;\n              this.items.push(CustomerDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator68.e(err);\n          } finally {\n            _iterator68.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator69 = _createForOfIteratorHelper(this.items),\n            _step69;\n\n        try {\n          for (_iterator69.s(); !(_step69 = _iterator69.n()).done;) {\n            var item = _step69.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator69.e(err);\n        } finally {\n          _iterator69.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new CustomerDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new CustomerDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return CustomerDtoPagedResultDto;\n}();\nexport var DocumentDto = /*#__PURE__*/function () {\n  function DocumentDto(data) {\n    _classCallCheck(this, DocumentDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(DocumentDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.documentNumber = _data[\"documentNumber\"];\n        this.documentDate = _data[\"documentDate\"] ? new Date(_data[\"documentDate\"].toString()) : undefined;\n        this.registrationDate = _data[\"registrationDate\"] ? new Date(_data[\"registrationDate\"].toString()) : undefined;\n        this.customer = _data[\"customer\"] ? Customer.fromJS(_data[\"customer\"]) : undefined;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"documentNumber\"] = this.documentNumber;\n      data[\"documentDate\"] = this.documentDate ? this.documentDate.toISOString() : undefined;\n      data[\"registrationDate\"] = this.registrationDate ? this.registrationDate.toISOString() : undefined;\n      data[\"customer\"] = this.customer ? this.customer.toJSON() : undefined;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new DocumentDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new DocumentDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return DocumentDto;\n}();\nexport var DocumentDtoPagedResultDto = /*#__PURE__*/function () {\n  function DocumentDtoPagedResultDto(data) {\n    _classCallCheck(this, DocumentDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(DocumentDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator70 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step70;\n\n          try {\n            for (_iterator70.s(); !(_step70 = _iterator70.n()).done;) {\n              var item = _step70.value;\n              this.items.push(DocumentDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator70.e(err);\n          } finally {\n            _iterator70.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator71 = _createForOfIteratorHelper(this.items),\n            _step71;\n\n        try {\n          for (_iterator71.s(); !(_step71 = _iterator71.n()).done;) {\n            var item = _step71.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator71.e(err);\n        } finally {\n          _iterator71.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new DocumentDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new DocumentDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return DocumentDtoPagedResultDto;\n}();\nexport var ExternalAuthenticateModel = /*#__PURE__*/function () {\n  function ExternalAuthenticateModel(data) {\n    _classCallCheck(this, ExternalAuthenticateModel);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ExternalAuthenticateModel, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.authProvider = _data[\"authProvider\"];\n        this.providerKey = _data[\"providerKey\"];\n        this.providerAccessCode = _data[\"providerAccessCode\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"authProvider\"] = this.authProvider;\n      data[\"providerKey\"] = this.providerKey;\n      data[\"providerAccessCode\"] = this.providerAccessCode;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ExternalAuthenticateModel();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ExternalAuthenticateModel();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ExternalAuthenticateModel;\n}();\nexport var ExternalAuthenticateResultModel = /*#__PURE__*/function () {\n  function ExternalAuthenticateResultModel(data) {\n    _classCallCheck(this, ExternalAuthenticateResultModel);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ExternalAuthenticateResultModel, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.accessToken = _data[\"accessToken\"];\n        this.encryptedAccessToken = _data[\"encryptedAccessToken\"];\n        this.expireInSeconds = _data[\"expireInSeconds\"];\n        this.waitingForActivation = _data[\"waitingForActivation\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"accessToken\"] = this.accessToken;\n      data[\"encryptedAccessToken\"] = this.encryptedAccessToken;\n      data[\"expireInSeconds\"] = this.expireInSeconds;\n      data[\"waitingForActivation\"] = this.waitingForActivation;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ExternalAuthenticateResultModel();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ExternalAuthenticateResultModel();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ExternalAuthenticateResultModel;\n}();\nexport var ExternalLoginProviderInfoModel = /*#__PURE__*/function () {\n  function ExternalLoginProviderInfoModel(data) {\n    _classCallCheck(this, ExternalLoginProviderInfoModel);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ExternalLoginProviderInfoModel, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.name = _data[\"name\"];\n        this.clientId = _data[\"clientId\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"name\"] = this.name;\n      data[\"clientId\"] = this.clientId;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ExternalLoginProviderInfoModel();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ExternalLoginProviderInfoModel();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ExternalLoginProviderInfoModel;\n}();\nexport var FlatPermissionDto = /*#__PURE__*/function () {\n  function FlatPermissionDto(data) {\n    _classCallCheck(this, FlatPermissionDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(FlatPermissionDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.description = _data[\"description\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"description\"] = this.description;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new FlatPermissionDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new FlatPermissionDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return FlatPermissionDto;\n}();\nexport var GetCurrentLoginInformationsOutput = /*#__PURE__*/function () {\n  function GetCurrentLoginInformationsOutput(data) {\n    _classCallCheck(this, GetCurrentLoginInformationsOutput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(GetCurrentLoginInformationsOutput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.application = _data[\"application\"] ? ApplicationInfoDto.fromJS(_data[\"application\"]) : undefined;\n        this.user = _data[\"user\"] ? UserLoginInfoDto.fromJS(_data[\"user\"]) : undefined;\n        this.tenant = _data[\"tenant\"] ? TenantLoginInfoDto.fromJS(_data[\"tenant\"]) : undefined;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"application\"] = this.application ? this.application.toJSON() : undefined;\n      data[\"user\"] = this.user ? this.user.toJSON() : undefined;\n      data[\"tenant\"] = this.tenant ? this.tenant.toJSON() : undefined;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new GetCurrentLoginInformationsOutput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new GetCurrentLoginInformationsOutput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return GetCurrentLoginInformationsOutput;\n}();\nexport var GetRoleForEditOutput = /*#__PURE__*/function () {\n  function GetRoleForEditOutput(data) {\n    _classCallCheck(this, GetRoleForEditOutput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(GetRoleForEditOutput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.role = _data[\"role\"] ? RoleEditDto.fromJS(_data[\"role\"]) : undefined;\n\n        if (Array.isArray(_data[\"permissions\"])) {\n          this.permissions = [];\n\n          var _iterator72 = _createForOfIteratorHelper(_data[\"permissions\"]),\n              _step72;\n\n          try {\n            for (_iterator72.s(); !(_step72 = _iterator72.n()).done;) {\n              var item = _step72.value;\n              this.permissions.push(FlatPermissionDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator72.e(err);\n          } finally {\n            _iterator72.f();\n          }\n        }\n\n        if (Array.isArray(_data[\"grantedPermissionNames\"])) {\n          this.grantedPermissionNames = [];\n\n          var _iterator73 = _createForOfIteratorHelper(_data[\"grantedPermissionNames\"]),\n              _step73;\n\n          try {\n            for (_iterator73.s(); !(_step73 = _iterator73.n()).done;) {\n              var _item = _step73.value;\n              this.grantedPermissionNames.push(_item);\n            }\n          } catch (err) {\n            _iterator73.e(err);\n          } finally {\n            _iterator73.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"role\"] = this.role ? this.role.toJSON() : undefined;\n\n      if (Array.isArray(this.permissions)) {\n        data[\"permissions\"] = [];\n\n        var _iterator74 = _createForOfIteratorHelper(this.permissions),\n            _step74;\n\n        try {\n          for (_iterator74.s(); !(_step74 = _iterator74.n()).done;) {\n            var item = _step74.value;\n            data[\"permissions\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator74.e(err);\n        } finally {\n          _iterator74.f();\n        }\n      }\n\n      if (Array.isArray(this.grantedPermissionNames)) {\n        data[\"grantedPermissionNames\"] = [];\n\n        var _iterator75 = _createForOfIteratorHelper(this.grantedPermissionNames),\n            _step75;\n\n        try {\n          for (_iterator75.s(); !(_step75 = _iterator75.n()).done;) {\n            var _item2 = _step75.value;\n            data[\"grantedPermissionNames\"].push(_item2);\n          }\n        } catch (err) {\n          _iterator75.e(err);\n        } finally {\n          _iterator75.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new GetRoleForEditOutput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new GetRoleForEditOutput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return GetRoleForEditOutput;\n}();\nexport var Int64EntityDto = /*#__PURE__*/function () {\n  function Int64EntityDto(data) {\n    _classCallCheck(this, Int64EntityDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(Int64EntityDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new Int64EntityDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new Int64EntityDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return Int64EntityDto;\n}();\nexport var IsTenantAvailableInput = /*#__PURE__*/function () {\n  function IsTenantAvailableInput(data) {\n    _classCallCheck(this, IsTenantAvailableInput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(IsTenantAvailableInput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.tenancyName = _data[\"tenancyName\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"tenancyName\"] = this.tenancyName;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new IsTenantAvailableInput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new IsTenantAvailableInput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return IsTenantAvailableInput;\n}();\nexport var IsTenantAvailableOutput = /*#__PURE__*/function () {\n  function IsTenantAvailableOutput(data) {\n    _classCallCheck(this, IsTenantAvailableOutput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(IsTenantAvailableOutput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.state = _data[\"state\"];\n        this.tenantId = _data[\"tenantId\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"state\"] = this.state;\n      data[\"tenantId\"] = this.tenantId;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new IsTenantAvailableOutput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new IsTenantAvailableOutput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return IsTenantAvailableOutput;\n}();\nexport var PermissionDto = /*#__PURE__*/function () {\n  function PermissionDto(data) {\n    _classCallCheck(this, PermissionDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(PermissionDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.description = _data[\"description\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"description\"] = this.description;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new PermissionDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new PermissionDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return PermissionDto;\n}();\nexport var PermissionDtoListResultDto = /*#__PURE__*/function () {\n  function PermissionDtoListResultDto(data) {\n    _classCallCheck(this, PermissionDtoListResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(PermissionDtoListResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator76 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step76;\n\n          try {\n            for (_iterator76.s(); !(_step76 = _iterator76.n()).done;) {\n              var item = _step76.value;\n              this.items.push(PermissionDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator76.e(err);\n          } finally {\n            _iterator76.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator77 = _createForOfIteratorHelper(this.items),\n            _step77;\n\n        try {\n          for (_iterator77.s(); !(_step77 = _iterator77.n()).done;) {\n            var item = _step77.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator77.e(err);\n        } finally {\n          _iterator77.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new PermissionDtoListResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new PermissionDtoListResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return PermissionDtoListResultDto;\n}();\nexport var ProductDto = /*#__PURE__*/function () {\n  function ProductDto(data) {\n    _classCallCheck(this, ProductDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ProductDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.productCode = _data[\"productCode\"];\n        this.productName = _data[\"productName\"];\n        this.brand = _data[\"brand\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"productCode\"] = this.productCode;\n      data[\"productName\"] = this.productName;\n      data[\"brand\"] = this.brand;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ProductDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ProductDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ProductDto;\n}();\nexport var ProductDtoPagedResultDto = /*#__PURE__*/function () {\n  function ProductDtoPagedResultDto(data) {\n    _classCallCheck(this, ProductDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ProductDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator78 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step78;\n\n          try {\n            for (_iterator78.s(); !(_step78 = _iterator78.n()).done;) {\n              var item = _step78.value;\n              this.items.push(ProductDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator78.e(err);\n          } finally {\n            _iterator78.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator79 = _createForOfIteratorHelper(this.items),\n            _step79;\n\n        try {\n          for (_iterator79.s(); !(_step79 = _iterator79.n()).done;) {\n            var item = _step79.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator79.e(err);\n        } finally {\n          _iterator79.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ProductDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ProductDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ProductDtoPagedResultDto;\n}();\nexport var RegisterInput = /*#__PURE__*/function () {\n  function RegisterInput(data) {\n    _classCallCheck(this, RegisterInput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RegisterInput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.name = _data[\"name\"];\n        this.surname = _data[\"surname\"];\n        this.userName = _data[\"userName\"];\n        this.emailAddress = _data[\"emailAddress\"];\n        this.password = _data[\"password\"];\n        this.captchaResponse = _data[\"captchaResponse\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"name\"] = this.name;\n      data[\"surname\"] = this.surname;\n      data[\"userName\"] = this.userName;\n      data[\"emailAddress\"] = this.emailAddress;\n      data[\"password\"] = this.password;\n      data[\"captchaResponse\"] = this.captchaResponse;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RegisterInput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RegisterInput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RegisterInput;\n}();\nexport var RegisterOutput = /*#__PURE__*/function () {\n  function RegisterOutput(data) {\n    _classCallCheck(this, RegisterOutput);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RegisterOutput, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.canLogin = _data[\"canLogin\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"canLogin\"] = this.canLogin;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RegisterOutput();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RegisterOutput();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RegisterOutput;\n}();\nexport var ResetPasswordDto = /*#__PURE__*/function () {\n  function ResetPasswordDto(data) {\n    _classCallCheck(this, ResetPasswordDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(ResetPasswordDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.adminPassword = _data[\"adminPassword\"];\n        this.userId = _data[\"userId\"];\n        this.newPassword = _data[\"newPassword\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"adminPassword\"] = this.adminPassword;\n      data[\"userId\"] = this.userId;\n      data[\"newPassword\"] = this.newPassword;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new ResetPasswordDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new ResetPasswordDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return ResetPasswordDto;\n}();\nexport var RoleDto = /*#__PURE__*/function () {\n  function RoleDto(data) {\n    _classCallCheck(this, RoleDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.normalizedName = _data[\"normalizedName\"];\n        this.description = _data[\"description\"];\n\n        if (Array.isArray(_data[\"grantedPermissions\"])) {\n          this.grantedPermissions = [];\n\n          var _iterator80 = _createForOfIteratorHelper(_data[\"grantedPermissions\"]),\n              _step80;\n\n          try {\n            for (_iterator80.s(); !(_step80 = _iterator80.n()).done;) {\n              var item = _step80.value;\n              this.grantedPermissions.push(item);\n            }\n          } catch (err) {\n            _iterator80.e(err);\n          } finally {\n            _iterator80.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"normalizedName\"] = this.normalizedName;\n      data[\"description\"] = this.description;\n\n      if (Array.isArray(this.grantedPermissions)) {\n        data[\"grantedPermissions\"] = [];\n\n        var _iterator81 = _createForOfIteratorHelper(this.grantedPermissions),\n            _step81;\n\n        try {\n          for (_iterator81.s(); !(_step81 = _iterator81.n()).done;) {\n            var item = _step81.value;\n            data[\"grantedPermissions\"].push(item);\n          }\n        } catch (err) {\n          _iterator81.e(err);\n        } finally {\n          _iterator81.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleDto;\n}();\nexport var RoleDtoListResultDto = /*#__PURE__*/function () {\n  function RoleDtoListResultDto(data) {\n    _classCallCheck(this, RoleDtoListResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleDtoListResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator82 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step82;\n\n          try {\n            for (_iterator82.s(); !(_step82 = _iterator82.n()).done;) {\n              var item = _step82.value;\n              this.items.push(RoleDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator82.e(err);\n          } finally {\n            _iterator82.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator83 = _createForOfIteratorHelper(this.items),\n            _step83;\n\n        try {\n          for (_iterator83.s(); !(_step83 = _iterator83.n()).done;) {\n            var item = _step83.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator83.e(err);\n        } finally {\n          _iterator83.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleDtoListResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleDtoListResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleDtoListResultDto;\n}();\nexport var RoleDtoPagedResultDto = /*#__PURE__*/function () {\n  function RoleDtoPagedResultDto(data) {\n    _classCallCheck(this, RoleDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator84 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step84;\n\n          try {\n            for (_iterator84.s(); !(_step84 = _iterator84.n()).done;) {\n              var item = _step84.value;\n              this.items.push(RoleDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator84.e(err);\n          } finally {\n            _iterator84.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator85 = _createForOfIteratorHelper(this.items),\n            _step85;\n\n        try {\n          for (_iterator85.s(); !(_step85 = _iterator85.n()).done;) {\n            var item = _step85.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator85.e(err);\n        } finally {\n          _iterator85.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleDtoPagedResultDto;\n}();\nexport var RoleEditDto = /*#__PURE__*/function () {\n  function RoleEditDto(data) {\n    _classCallCheck(this, RoleEditDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleEditDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.description = _data[\"description\"];\n        this.isStatic = _data[\"isStatic\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"description\"] = this.description;\n      data[\"isStatic\"] = this.isStatic;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleEditDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleEditDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleEditDto;\n}();\nexport var RoleListDto = /*#__PURE__*/function () {\n  function RoleListDto(data) {\n    _classCallCheck(this, RoleListDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleListDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.name = _data[\"name\"];\n        this.displayName = _data[\"displayName\"];\n        this.isStatic = _data[\"isStatic\"];\n        this.isDefault = _data[\"isDefault\"];\n        this.creationTime = _data[\"creationTime\"] ? new Date(_data[\"creationTime\"].toString()) : undefined;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"name\"] = this.name;\n      data[\"displayName\"] = this.displayName;\n      data[\"isStatic\"] = this.isStatic;\n      data[\"isDefault\"] = this.isDefault;\n      data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : undefined;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleListDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleListDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleListDto;\n}();\nexport var RoleListDtoListResultDto = /*#__PURE__*/function () {\n  function RoleListDtoListResultDto(data) {\n    _classCallCheck(this, RoleListDtoListResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(RoleListDtoListResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator86 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step86;\n\n          try {\n            for (_iterator86.s(); !(_step86 = _iterator86.n()).done;) {\n              var item = _step86.value;\n              this.items.push(RoleListDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator86.e(err);\n          } finally {\n            _iterator86.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator87 = _createForOfIteratorHelper(this.items),\n            _step87;\n\n        try {\n          for (_iterator87.s(); !(_step87 = _iterator87.n()).done;) {\n            var item = _step87.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator87.e(err);\n        } finally {\n          _iterator87.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new RoleListDtoListResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new RoleListDtoListResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return RoleListDtoListResultDto;\n}();\nexport var TenantAvailabilityState;\n\n(function (TenantAvailabilityState) {\n  TenantAvailabilityState[TenantAvailabilityState[\"_1\"] = 1] = \"_1\";\n  TenantAvailabilityState[TenantAvailabilityState[\"_2\"] = 2] = \"_2\";\n  TenantAvailabilityState[TenantAvailabilityState[\"_3\"] = 3] = \"_3\";\n})(TenantAvailabilityState || (TenantAvailabilityState = {}));\n\nexport var TenantDto = /*#__PURE__*/function () {\n  function TenantDto(data) {\n    _classCallCheck(this, TenantDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(TenantDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.tenancyName = _data[\"tenancyName\"];\n        this.name = _data[\"name\"];\n        this.isActive = _data[\"isActive\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"tenancyName\"] = this.tenancyName;\n      data[\"name\"] = this.name;\n      data[\"isActive\"] = this.isActive;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new TenantDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new TenantDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return TenantDto;\n}();\nexport var TenantDtoPagedResultDto = /*#__PURE__*/function () {\n  function TenantDtoPagedResultDto(data) {\n    _classCallCheck(this, TenantDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(TenantDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator88 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step88;\n\n          try {\n            for (_iterator88.s(); !(_step88 = _iterator88.n()).done;) {\n              var item = _step88.value;\n              this.items.push(TenantDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator88.e(err);\n          } finally {\n            _iterator88.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator89 = _createForOfIteratorHelper(this.items),\n            _step89;\n\n        try {\n          for (_iterator89.s(); !(_step89 = _iterator89.n()).done;) {\n            var item = _step89.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator89.e(err);\n        } finally {\n          _iterator89.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new TenantDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new TenantDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return TenantDtoPagedResultDto;\n}();\nexport var TenantLoginInfoDto = /*#__PURE__*/function () {\n  function TenantLoginInfoDto(data) {\n    _classCallCheck(this, TenantLoginInfoDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(TenantLoginInfoDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.tenancyName = _data[\"tenancyName\"];\n        this.name = _data[\"name\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"tenancyName\"] = this.tenancyName;\n      data[\"name\"] = this.name;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new TenantLoginInfoDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new TenantLoginInfoDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return TenantLoginInfoDto;\n}();\nexport var UserDto = /*#__PURE__*/function () {\n  function UserDto(data) {\n    _classCallCheck(this, UserDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(UserDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.userName = _data[\"userName\"];\n        this.name = _data[\"name\"];\n        this.surname = _data[\"surname\"];\n        this.emailAddress = _data[\"emailAddress\"];\n        this.isActive = _data[\"isActive\"];\n        this.fullName = _data[\"fullName\"];\n        this.lastLoginTime = _data[\"lastLoginTime\"] ? new Date(_data[\"lastLoginTime\"].toString()) : undefined;\n        this.creationTime = _data[\"creationTime\"] ? new Date(_data[\"creationTime\"].toString()) : undefined;\n\n        if (Array.isArray(_data[\"roleNames\"])) {\n          this.roleNames = [];\n\n          var _iterator90 = _createForOfIteratorHelper(_data[\"roleNames\"]),\n              _step90;\n\n          try {\n            for (_iterator90.s(); !(_step90 = _iterator90.n()).done;) {\n              var item = _step90.value;\n              this.roleNames.push(item);\n            }\n          } catch (err) {\n            _iterator90.e(err);\n          } finally {\n            _iterator90.f();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"userName\"] = this.userName;\n      data[\"name\"] = this.name;\n      data[\"surname\"] = this.surname;\n      data[\"emailAddress\"] = this.emailAddress;\n      data[\"isActive\"] = this.isActive;\n      data[\"fullName\"] = this.fullName;\n      data[\"lastLoginTime\"] = this.lastLoginTime ? this.lastLoginTime.toISOString() : undefined;\n      data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : undefined;\n\n      if (Array.isArray(this.roleNames)) {\n        data[\"roleNames\"] = [];\n\n        var _iterator91 = _createForOfIteratorHelper(this.roleNames),\n            _step91;\n\n        try {\n          for (_iterator91.s(); !(_step91 = _iterator91.n()).done;) {\n            var item = _step91.value;\n            data[\"roleNames\"].push(item);\n          }\n        } catch (err) {\n          _iterator91.e(err);\n        } finally {\n          _iterator91.f();\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new UserDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new UserDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return UserDto;\n}();\nexport var UserDtoPagedResultDto = /*#__PURE__*/function () {\n  function UserDtoPagedResultDto(data) {\n    _classCallCheck(this, UserDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(UserDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator92 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step92;\n\n          try {\n            for (_iterator92.s(); !(_step92 = _iterator92.n()).done;) {\n              var item = _step92.value;\n              this.items.push(UserDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator92.e(err);\n          } finally {\n            _iterator92.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator93 = _createForOfIteratorHelper(this.items),\n            _step93;\n\n        try {\n          for (_iterator93.s(); !(_step93 = _iterator93.n()).done;) {\n            var item = _step93.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator93.e(err);\n        } finally {\n          _iterator93.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new UserDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new UserDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return UserDtoPagedResultDto;\n}();\nexport var UserLoginInfoDto = /*#__PURE__*/function () {\n  function UserLoginInfoDto(data) {\n    _classCallCheck(this, UserLoginInfoDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(UserLoginInfoDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.name = _data[\"name\"];\n        this.surname = _data[\"surname\"];\n        this.userName = _data[\"userName\"];\n        this.emailAddress = _data[\"emailAddress\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"name\"] = this.name;\n      data[\"surname\"] = this.surname;\n      data[\"userName\"] = this.userName;\n      data[\"emailAddress\"] = this.emailAddress;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new UserLoginInfoDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new UserLoginInfoDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return UserLoginInfoDto;\n}();\nexport var WarehouseDto = /*#__PURE__*/function () {\n  function WarehouseDto(data) {\n    _classCallCheck(this, WarehouseDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(WarehouseDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        this.id = _data[\"id\"];\n        this.warehouseCode = _data[\"warehouseCode\"];\n        this.warehouseName = _data[\"warehouseName\"];\n        this.warehouseType = _data[\"warehouseType\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n      data[\"id\"] = this.id;\n      data[\"warehouseCode\"] = this.warehouseCode;\n      data[\"warehouseName\"] = this.warehouseName;\n      data[\"warehouseType\"] = this.warehouseType;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new WarehouseDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new WarehouseDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return WarehouseDto;\n}();\nexport var WarehouseDtoPagedResultDto = /*#__PURE__*/function () {\n  function WarehouseDtoPagedResultDto(data) {\n    _classCallCheck(this, WarehouseDtoPagedResultDto);\n\n    if (data) {\n      for (var property in data) {\n        if (data.hasOwnProperty(property)) this[property] = data[property];\n      }\n    }\n  }\n\n  _createClass(WarehouseDtoPagedResultDto, [{\n    key: \"init\",\n    value: function init(_data) {\n      if (_data) {\n        if (Array.isArray(_data[\"items\"])) {\n          this.items = [];\n\n          var _iterator94 = _createForOfIteratorHelper(_data[\"items\"]),\n              _step94;\n\n          try {\n            for (_iterator94.s(); !(_step94 = _iterator94.n()).done;) {\n              var item = _step94.value;\n              this.items.push(WarehouseDto.fromJS(item));\n            }\n          } catch (err) {\n            _iterator94.e(err);\n          } finally {\n            _iterator94.f();\n          }\n        }\n\n        this.totalCount = _data[\"totalCount\"];\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(data) {\n      data = typeof data === 'object' ? data : {};\n\n      if (Array.isArray(this.items)) {\n        data[\"items\"] = [];\n\n        var _iterator95 = _createForOfIteratorHelper(this.items),\n            _step95;\n\n        try {\n          for (_iterator95.s(); !(_step95 = _iterator95.n()).done;) {\n            var item = _step95.value;\n            data[\"items\"].push(item.toJSON());\n          }\n        } catch (err) {\n          _iterator95.e(err);\n        } finally {\n          _iterator95.f();\n        }\n      }\n\n      data[\"totalCount\"] = this.totalCount;\n      return data;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var json = this.toJSON();\n      var result = new WarehouseDtoPagedResultDto();\n      result.init(json);\n      return result;\n    }\n  }], [{\n    key: \"fromJS\",\n    value: function fromJS(data) {\n      data = typeof data === 'object' ? data : {};\n      var result = new WarehouseDtoPagedResultDto();\n      result.init(data);\n      return result;\n    }\n  }]);\n\n  return WarehouseDtoPagedResultDto;\n}();\nexport var WarehouseType;\n\n(function (WarehouseType) {\n  WarehouseType[WarehouseType[\"_0\"] = 0] = \"_0\";\n  WarehouseType[WarehouseType[\"_1\"] = 1] = \"_1\";\n})(WarehouseType || (WarehouseType = {}));\n\nexport var ApiException = /*#__PURE__*/function (_Error) {\n  _inherits(ApiException, _Error);\n\n  var _super = _createSuper(ApiException);\n\n  function ApiException(message, status, response, headers, result) {\n    var _this97;\n\n    _classCallCheck(this, ApiException);\n\n    _this97 = _super.call(this);\n    _this97.isApiException = true;\n    _this97.message = message;\n    _this97.status = status;\n    _this97.response = response;\n    _this97.headers = headers;\n    _this97.result = result;\n    return _this97;\n  }\n\n  _createClass(ApiException, null, [{\n    key: \"isApiException\",\n    value: function isApiException(obj) {\n      return obj.isApiException === true;\n    }\n  }]);\n\n  return ApiException;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction throwException(message, status, response, headers, result) {\n  if (result !== null && result !== undefined) return _observableThrow(result);else return _observableThrow(new ApiException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob) {\n  return new Observable(function (observer) {\n    if (!blob) {\n      observer.next(\"\");\n      observer.complete();\n    } else {\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        observer.next(event.target.result);\n        observer.complete();\n      };\n\n      reader.readAsText(blob);\n    }\n  });\n}","map":{"version":3,"mappings":"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","names":["mergeMap","_observableMergeMap","catchError","_observableCatch","Observable","throwError","_observableThrow","of","_observableOf","InjectionToken","HttpClient","HttpHeaders","HttpResponse","HttpResponseBase","API_BASE_URL","AccountServiceProxy","http","baseUrl","undefined","body","url_","replace","content_","JSON","stringify","options_","observe","responseType","headers","request","pipe","response_","processIsTenantAvailable","e","response","status","responseBlob","error","Blob","_headers","keys","key","get","blobToText","result200","resultData200","_responseText","parse","jsonParseReviver","IsTenantAvailableOutput","fromJS","throwException","processRegister","RegisterOutput","i0","factory","ConfigurationServiceProxy","processChangeUiTheme","CustomerServiceProxy","processCreateCustomer","id","Error","encodeURIComponent","processGetCustomer","CustomerDto","customerCode","processGetCustomerWithCode","processGetAllCustomers","Array","isArray","item","push","keyword","skipCount","maxResultCount","processGetAllCustomersPaged","CustomerDtoPagedResultDto","processUpdateCustomer","processDeleteCustomer","DocumentServiceProxy","processCreateDocument","processGetDocument","DocumentDto","processGetAllDocuments","processDeleteDocument","processGetAllDocumentsPaged","DocumentDtoPagedResultDto","processUpdateDocument","customerId","processGetDocumentListByCustomer","ProductServiceProxy","processCreateProduct","processGetProduct","ProductDto","processGetAllProducts","processGetAllProductsPaged","ProductDtoPagedResultDto","processUpdateProduct","processDeleteProduct","RoleServiceProxy","processCreate","RoleDto","permission","processGetRoles","RoleListDtoListResultDto","processUpdate","processDelete","processGetAllPermissions","PermissionDtoListResultDto","processGetRoleForEdit","GetRoleForEditOutput","processGet","processGetAll","RoleDtoPagedResultDto","SessionServiceProxy","processGetCurrentLoginInformations","GetCurrentLoginInformationsOutput","TenantServiceProxy","TenantDto","isActive","TenantDtoPagedResultDto","TokenAuthServiceProxy","processAuthenticate","AuthenticateResultModel","processGetExternalAuthenticationProviders","ExternalLoginProviderInfoModel","processExternalAuthenticate","ExternalAuthenticateResultModel","UserServiceProxy","UserDto","processActivate","processDeActivate","RoleDtoListResultDto","processChangeLanguage","processChangePassword","processResetPassword","UserDtoPagedResultDto","WarehouseServiceProxy","processCreateWarehouse","processGetWarehouse","WarehouseDto","processGetAllWarehouses","processGetAllWarehousesPaged","WarehouseDtoPagedResultDto","processUpdateWarehouse","processDeleteWarehouse","ApplicationInfoDto","data","property","hasOwnProperty","_data","version","releaseDate","Date","toString","features","toISOString","json","toJSON","result","init","AuthenticateModel","userNameOrEmailAddress","password","rememberClient","accessToken","encryptedAccessToken","expireInSeconds","userId","ChangePasswordDto","currentPassword","newPassword","ChangeUiThemeInput","theme","ChangeUserLanguageDto","languageName","CreateCustomerDto","title","taxNo","taxOffice","telephone","email","CreateDocumentDto","documentNumber","documentDate","registrationDate","CreateProductDto","productCode","productName","brand","CreateRoleDto","name","displayName","normalizedName","description","grantedPermissions","CreateTenantDto","tenancyName","adminEmailAddress","connectionString","CreateUserDto","userName","surname","emailAddress","roleNames","CreateWarehouseDto","warehouseCode","warehouseName","warehouseType","Customer","isDeleted","items","totalCount","customer","ExternalAuthenticateModel","authProvider","providerKey","providerAccessCode","waitingForActivation","clientId","FlatPermissionDto","application","user","UserLoginInfoDto","tenant","TenantLoginInfoDto","role","RoleEditDto","permissions","grantedPermissionNames","Int64EntityDto","IsTenantAvailableInput","state","tenantId","PermissionDto","RegisterInput","captchaResponse","canLogin","ResetPasswordDto","adminPassword","isStatic","RoleListDto","isDefault","creationTime","TenantAvailabilityState","fullName","lastLoginTime","WarehouseType","ApiException","message","obj","isApiException","blob","observer","next","complete","reader","FileReader","onload","event","target","readAsText"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/service-proxies/service-proxies.ts"],"sourcesContent":["//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.16.1.0 (NJsonSchema v10.7.2.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\n\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\n\nexport const API_BASE_URL = new InjectionToken<string>('API_BASE_URL');\n\n@Injectable()\nexport class AccountServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    isTenantAvailable(body: IsTenantAvailableInput | undefined): Observable<IsTenantAvailableOutput> {\n        let url_ = this.baseUrl + \"/api/services/app/Account/IsTenantAvailable\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processIsTenantAvailable(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processIsTenantAvailable(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<IsTenantAvailableOutput>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<IsTenantAvailableOutput>;\n        }));\n    }\n\n    protected processIsTenantAvailable(response: HttpResponseBase): Observable<IsTenantAvailableOutput> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = IsTenantAvailableOutput.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<IsTenantAvailableOutput>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    register(body: RegisterInput | undefined): Observable<RegisterOutput> {\n        let url_ = this.baseUrl + \"/api/services/app/Account/Register\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processRegister(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processRegister(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RegisterOutput>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RegisterOutput>;\n        }));\n    }\n\n    protected processRegister(response: HttpResponseBase): Observable<RegisterOutput> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RegisterOutput.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RegisterOutput>(null as any);\n    }\n}\n\n@Injectable()\nexport class ConfigurationServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    changeUiTheme(body: ChangeUiThemeInput | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Configuration/ChangeUiTheme\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processChangeUiTheme(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processChangeUiTheme(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processChangeUiTheme(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n}\n\n@Injectable()\nexport class CustomerServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    createCustomer(body: CreateCustomerDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/CreateCustomer\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateCustomer(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateCustomer(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processCreateCustomer(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    getCustomer(id: number | undefined): Observable<CustomerDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/GetCustomer?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCustomer(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCustomer(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<CustomerDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<CustomerDto>;\n        }));\n    }\n\n    protected processGetCustomer(response: HttpResponseBase): Observable<CustomerDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = CustomerDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CustomerDto>(null as any);\n    }\n\n    /**\n     * @param customerCode (optional) \n     * @return Success\n     */\n    getCustomerWithCode(customerCode: string | undefined): Observable<CustomerDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/GetCustomerWithCode?\";\n        if (customerCode === null)\n            throw new Error(\"The parameter 'customerCode' cannot be null.\");\n        else if (customerCode !== undefined)\n            url_ += \"CustomerCode=\" + encodeURIComponent(\"\" + customerCode) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCustomerWithCode(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCustomerWithCode(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<CustomerDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<CustomerDto>;\n        }));\n    }\n\n    protected processGetCustomerWithCode(response: HttpResponseBase): Observable<CustomerDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = CustomerDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CustomerDto>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getAllCustomers(): Observable<CustomerDto[]> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/GetAllCustomers\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllCustomers(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllCustomers(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<CustomerDto[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<CustomerDto[]>;\n        }));\n    }\n\n    protected processGetAllCustomers(response: HttpResponseBase): Observable<CustomerDto[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(CustomerDto.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CustomerDto[]>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAllCustomersPaged(keyword: string | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<CustomerDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/GetAllCustomersPaged?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllCustomersPaged(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllCustomersPaged(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<CustomerDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<CustomerDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAllCustomersPaged(response: HttpResponseBase): Observable<CustomerDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = CustomerDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<CustomerDtoPagedResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    updateCustomer(body: CustomerDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/UpdateCustomer\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateCustomer(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateCustomer(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processUpdateCustomer(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    deleteCustomer(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Customer/DeleteCustomer?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteCustomer(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteCustomer(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDeleteCustomer(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n}\n\n@Injectable()\nexport class DocumentServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    createDocument(body: CreateDocumentDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/CreateDocument\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateDocument(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateDocument(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processCreateDocument(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    getDocument(id: number | undefined): Observable<DocumentDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/GetDocument?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetDocument(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetDocument(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<DocumentDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<DocumentDto>;\n        }));\n    }\n\n    protected processGetDocument(response: HttpResponseBase): Observable<DocumentDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = DocumentDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<DocumentDto>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getAllDocuments(): Observable<DocumentDto[]> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/GetAllDocuments\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllDocuments(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllDocuments(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<DocumentDto[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<DocumentDto[]>;\n        }));\n    }\n\n    protected processGetAllDocuments(response: HttpResponseBase): Observable<DocumentDto[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(DocumentDto.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<DocumentDto[]>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    deleteDocument(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/DeleteDocument?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteDocument(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteDocument(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDeleteDocument(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAllDocumentsPaged(keyword: string | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<DocumentDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/GetAllDocumentsPaged?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllDocumentsPaged(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllDocumentsPaged(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<DocumentDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<DocumentDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAllDocumentsPaged(response: HttpResponseBase): Observable<DocumentDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = DocumentDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<DocumentDtoPagedResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    updateDocument(body: DocumentDto | undefined): Observable<DocumentDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/UpdateDocument\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateDocument(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateDocument(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<DocumentDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<DocumentDto>;\n        }));\n    }\n\n    protected processUpdateDocument(response: HttpResponseBase): Observable<DocumentDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = DocumentDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<DocumentDto>(null as any);\n    }\n\n    /**\n     * @param customerId (optional) \n     * @return Success\n     */\n    getDocumentListByCustomer(customerId: number | undefined): Observable<DocumentDto[]> {\n        let url_ = this.baseUrl + \"/api/services/app/Document/GetDocumentListByCustomer?\";\n        if (customerId === null)\n            throw new Error(\"The parameter 'customerId' cannot be null.\");\n        else if (customerId !== undefined)\n            url_ += \"customerId=\" + encodeURIComponent(\"\" + customerId) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetDocumentListByCustomer(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetDocumentListByCustomer(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<DocumentDto[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<DocumentDto[]>;\n        }));\n    }\n\n    protected processGetDocumentListByCustomer(response: HttpResponseBase): Observable<DocumentDto[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(DocumentDto.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<DocumentDto[]>(null as any);\n    }\n}\n\n@Injectable()\nexport class ProductServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    createProduct(body: CreateProductDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/CreateProduct\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateProduct(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateProduct(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processCreateProduct(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    getProduct(id: number | undefined): Observable<ProductDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/GetProduct?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetProduct(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetProduct(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<ProductDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<ProductDto>;\n        }));\n    }\n\n    protected processGetProduct(response: HttpResponseBase): Observable<ProductDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = ProductDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ProductDto>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getAllProducts(): Observable<ProductDto[]> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/GetAllProducts\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllProducts(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllProducts(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<ProductDto[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<ProductDto[]>;\n        }));\n    }\n\n    protected processGetAllProducts(response: HttpResponseBase): Observable<ProductDto[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(ProductDto.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ProductDto[]>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAllProductsPaged(keyword: string | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<ProductDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/GetAllProductsPaged?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllProductsPaged(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllProductsPaged(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<ProductDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<ProductDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAllProductsPaged(response: HttpResponseBase): Observable<ProductDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = ProductDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ProductDtoPagedResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    updateProduct(body: ProductDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/UpdateProduct\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateProduct(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateProduct(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processUpdateProduct(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    deleteProduct(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Product/DeleteProduct?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteProduct(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteProduct(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDeleteProduct(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n}\n\n@Injectable()\nexport class RoleServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    create(body: CreateRoleDto | undefined): Observable<RoleDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/Create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleDto>;\n        }));\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<RoleDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleDto>(null as any);\n    }\n\n    /**\n     * @param permission (optional) \n     * @return Success\n     */\n    getRoles(permission: string | undefined): Observable<RoleListDtoListResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/GetRoles?\";\n        if (permission === null)\n            throw new Error(\"The parameter 'permission' cannot be null.\");\n        else if (permission !== undefined)\n            url_ += \"Permission=\" + encodeURIComponent(\"\" + permission) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetRoles(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetRoles(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleListDtoListResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleListDtoListResultDto>;\n        }));\n    }\n\n    protected processGetRoles(response: HttpResponseBase): Observable<RoleListDtoListResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleListDtoListResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleListDtoListResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    update(body: RoleDto | undefined): Observable<RoleDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/Update\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleDto>;\n        }));\n    }\n\n    protected processUpdate(response: HttpResponseBase): Observable<RoleDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleDto>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    delete(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/Delete?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getAllPermissions(): Observable<PermissionDtoListResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/GetAllPermissions\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllPermissions(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllPermissions(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<PermissionDtoListResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<PermissionDtoListResultDto>;\n        }));\n    }\n\n    protected processGetAllPermissions(response: HttpResponseBase): Observable<PermissionDtoListResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = PermissionDtoListResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<PermissionDtoListResultDto>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    getRoleForEdit(id: number | undefined): Observable<GetRoleForEditOutput> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/GetRoleForEdit?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetRoleForEdit(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetRoleForEdit(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<GetRoleForEditOutput>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<GetRoleForEditOutput>;\n        }));\n    }\n\n    protected processGetRoleForEdit(response: HttpResponseBase): Observable<GetRoleForEditOutput> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = GetRoleForEditOutput.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<GetRoleForEditOutput>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    get(id: number | undefined): Observable<RoleDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/Get?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleDto>;\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<RoleDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleDto>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAll(keyword: string | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<RoleDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Role/GetAll?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAll(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAll(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAll(response: HttpResponseBase): Observable<RoleDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleDtoPagedResultDto>(null as any);\n    }\n}\n\n@Injectable()\nexport class SessionServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @return Success\n     */\n    getCurrentLoginInformations(): Observable<GetCurrentLoginInformationsOutput> {\n        let url_ = this.baseUrl + \"/api/services/app/Session/GetCurrentLoginInformations\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetCurrentLoginInformations(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetCurrentLoginInformations(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<GetCurrentLoginInformationsOutput>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<GetCurrentLoginInformationsOutput>;\n        }));\n    }\n\n    protected processGetCurrentLoginInformations(response: HttpResponseBase): Observable<GetCurrentLoginInformationsOutput> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = GetCurrentLoginInformationsOutput.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<GetCurrentLoginInformationsOutput>(null as any);\n    }\n}\n\n@Injectable()\nexport class TenantServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    create(body: CreateTenantDto | undefined): Observable<TenantDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Tenant/Create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<TenantDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<TenantDto>;\n        }));\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<TenantDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = TenantDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TenantDto>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    delete(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Tenant/Delete?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    get(id: number | undefined): Observable<TenantDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Tenant/Get?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<TenantDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<TenantDto>;\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<TenantDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = TenantDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TenantDto>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param isActive (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAll(keyword: string | undefined, isActive: boolean | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<TenantDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Tenant/GetAll?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (isActive === null)\n            throw new Error(\"The parameter 'isActive' cannot be null.\");\n        else if (isActive !== undefined)\n            url_ += \"IsActive=\" + encodeURIComponent(\"\" + isActive) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAll(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAll(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<TenantDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<TenantDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAll(response: HttpResponseBase): Observable<TenantDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = TenantDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TenantDtoPagedResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    update(body: TenantDto | undefined): Observable<TenantDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Tenant/Update\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<TenantDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<TenantDto>;\n        }));\n    }\n\n    protected processUpdate(response: HttpResponseBase): Observable<TenantDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = TenantDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<TenantDto>(null as any);\n    }\n}\n\n@Injectable()\nexport class TokenAuthServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    authenticate(body: AuthenticateModel | undefined): Observable<AuthenticateResultModel> {\n        let url_ = this.baseUrl + \"/api/TokenAuth/Authenticate\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processAuthenticate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processAuthenticate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<AuthenticateResultModel>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<AuthenticateResultModel>;\n        }));\n    }\n\n    protected processAuthenticate(response: HttpResponseBase): Observable<AuthenticateResultModel> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = AuthenticateResultModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<AuthenticateResultModel>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getExternalAuthenticationProviders(): Observable<ExternalLoginProviderInfoModel[]> {\n        let url_ = this.baseUrl + \"/api/TokenAuth/GetExternalAuthenticationProviders\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetExternalAuthenticationProviders(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetExternalAuthenticationProviders(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<ExternalLoginProviderInfoModel[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<ExternalLoginProviderInfoModel[]>;\n        }));\n    }\n\n    protected processGetExternalAuthenticationProviders(response: HttpResponseBase): Observable<ExternalLoginProviderInfoModel[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(ExternalLoginProviderInfoModel.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ExternalLoginProviderInfoModel[]>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    externalAuthenticate(body: ExternalAuthenticateModel | undefined): Observable<ExternalAuthenticateResultModel> {\n        let url_ = this.baseUrl + \"/api/TokenAuth/ExternalAuthenticate\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processExternalAuthenticate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processExternalAuthenticate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<ExternalAuthenticateResultModel>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<ExternalAuthenticateResultModel>;\n        }));\n    }\n\n    protected processExternalAuthenticate(response: HttpResponseBase): Observable<ExternalAuthenticateResultModel> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = ExternalAuthenticateResultModel.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<ExternalAuthenticateResultModel>(null as any);\n    }\n}\n\n@Injectable()\nexport class UserServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    create(body: CreateUserDto | undefined): Observable<UserDto> {\n        let url_ = this.baseUrl + \"/api/services/app/User/Create\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<UserDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<UserDto>;\n        }));\n    }\n\n    protected processCreate(response: HttpResponseBase): Observable<UserDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    update(body: UserDto | undefined): Observable<UserDto> {\n        let url_ = this.baseUrl + \"/api/services/app/User/Update\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<UserDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<UserDto>;\n        }));\n    }\n\n    protected processUpdate(response: HttpResponseBase): Observable<UserDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserDto>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    delete(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/User/Delete?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDelete(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDelete(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDelete(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    activate(body: Int64EntityDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/User/Activate\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processActivate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processActivate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processActivate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    deActivate(body: Int64EntityDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/User/DeActivate\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeActivate(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeActivate(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDeActivate(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getRoles(): Observable<RoleDtoListResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/User/GetRoles\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetRoles(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetRoles(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<RoleDtoListResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<RoleDtoListResultDto>;\n        }));\n    }\n\n    protected processGetRoles(response: HttpResponseBase): Observable<RoleDtoListResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = RoleDtoListResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<RoleDtoListResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    changeLanguage(body: ChangeUserLanguageDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/User/ChangeLanguage\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processChangeLanguage(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processChangeLanguage(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processChangeLanguage(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    changePassword(body: ChangePasswordDto | undefined): Observable<boolean> {\n        let url_ = this.baseUrl + \"/api/services/app/User/ChangePassword\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processChangePassword(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processChangePassword(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<boolean>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<boolean>;\n        }));\n    }\n\n    protected processChangePassword(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    resetPassword(body: ResetPasswordDto | undefined): Observable<boolean> {\n        let url_ = this.baseUrl + \"/api/services/app/User/ResetPassword\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processResetPassword(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processResetPassword(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<boolean>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<boolean>;\n        }));\n    }\n\n    protected processResetPassword(response: HttpResponseBase): Observable<boolean> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n                result200 = resultData200 !== undefined ? resultData200 : <any>null;\n    \n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<boolean>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    get(id: number | undefined): Observable<UserDto> {\n        let url_ = this.baseUrl + \"/api/services/app/User/Get?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"Id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGet(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGet(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<UserDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<UserDto>;\n        }));\n    }\n\n    protected processGet(response: HttpResponseBase): Observable<UserDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserDto>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param isActive (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAll(keyword: string | undefined, isActive: boolean | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<UserDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/User/GetAll?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (isActive === null)\n            throw new Error(\"The parameter 'isActive' cannot be null.\");\n        else if (isActive !== undefined)\n            url_ += \"IsActive=\" + encodeURIComponent(\"\" + isActive) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAll(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAll(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<UserDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<UserDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAll(response: HttpResponseBase): Observable<UserDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = UserDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<UserDtoPagedResultDto>(null as any);\n    }\n}\n\n@Injectable()\nexport class WarehouseServiceProxy {\n    private http: HttpClient;\n    private baseUrl: string;\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\n\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(API_BASE_URL) baseUrl?: string) {\n        this.http = http;\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"\";\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    createWarehouse(body: CreateWarehouseDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/CreateWarehouse\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processCreateWarehouse(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processCreateWarehouse(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processCreateWarehouse(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    getWarehouse(id: number | undefined): Observable<WarehouseDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/GetWarehouse?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetWarehouse(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetWarehouse(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<WarehouseDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<WarehouseDto>;\n        }));\n    }\n\n    protected processGetWarehouse(response: HttpResponseBase): Observable<WarehouseDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = WarehouseDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<WarehouseDto>(null as any);\n    }\n\n    /**\n     * @return Success\n     */\n    getAllWarehouses(): Observable<WarehouseDto[]> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/GetAllWarehouses\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllWarehouses(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllWarehouses(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<WarehouseDto[]>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<WarehouseDto[]>;\n        }));\n    }\n\n    protected processGetAllWarehouses(response: HttpResponseBase): Observable<WarehouseDto[]> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            if (Array.isArray(resultData200)) {\n                result200 = [] as any;\n                for (let item of resultData200)\n                    result200.push(WarehouseDto.fromJS(item));\n            }\n            else {\n                result200 = <any>null;\n            }\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<WarehouseDto[]>(null as any);\n    }\n\n    /**\n     * @param keyword (optional) \n     * @param skipCount (optional) \n     * @param maxResultCount (optional) \n     * @return Success\n     */\n    getAllWarehousesPaged(keyword: string | undefined, skipCount: number | undefined, maxResultCount: number | undefined): Observable<WarehouseDtoPagedResultDto> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/GetAllWarehousesPaged?\";\n        if (keyword === null)\n            throw new Error(\"The parameter 'keyword' cannot be null.\");\n        else if (keyword !== undefined)\n            url_ += \"Keyword=\" + encodeURIComponent(\"\" + keyword) + \"&\";\n        if (skipCount === null)\n            throw new Error(\"The parameter 'skipCount' cannot be null.\");\n        else if (skipCount !== undefined)\n            url_ += \"SkipCount=\" + encodeURIComponent(\"\" + skipCount) + \"&\";\n        if (maxResultCount === null)\n            throw new Error(\"The parameter 'maxResultCount' cannot be null.\");\n        else if (maxResultCount !== undefined)\n            url_ += \"MaxResultCount=\" + encodeURIComponent(\"\" + maxResultCount) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Accept\": \"text/plain\"\n            })\n        };\n\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processGetAllWarehousesPaged(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processGetAllWarehousesPaged(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<WarehouseDtoPagedResultDto>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<WarehouseDtoPagedResultDto>;\n        }));\n    }\n\n    protected processGetAllWarehousesPaged(response: HttpResponseBase): Observable<WarehouseDtoPagedResultDto> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            let result200: any = null;\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n            result200 = WarehouseDtoPagedResultDto.fromJS(resultData200);\n            return _observableOf(result200);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<WarehouseDtoPagedResultDto>(null as any);\n    }\n\n    /**\n     * @param body (optional) \n     * @return Success\n     */\n    updateWarehouse(body: WarehouseDto | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/UpdateWarehouse\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        const content_ = JSON.stringify(body);\n\n        let options_ : any = {\n            body: content_,\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n                \"Content-Type\": \"application/json-patch+json\",\n            })\n        };\n\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processUpdateWarehouse(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processUpdateWarehouse(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processUpdateWarehouse(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n\n    /**\n     * @param id (optional) \n     * @return Success\n     */\n    deleteWarehouse(id: number | undefined): Observable<void> {\n        let url_ = this.baseUrl + \"/api/services/app/Warehouse/DeleteWarehouse?\";\n        if (id === null)\n            throw new Error(\"The parameter 'id' cannot be null.\");\n        else if (id !== undefined)\n            url_ += \"id=\" + encodeURIComponent(\"\" + id) + \"&\";\n        url_ = url_.replace(/[?&]$/, \"\");\n\n        let options_ : any = {\n            observe: \"response\",\n            responseType: \"blob\",\n            headers: new HttpHeaders({\n            })\n        };\n\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\n            return this.processDeleteWarehouse(response_);\n        })).pipe(_observableCatch((response_: any) => {\n            if (response_ instanceof HttpResponseBase) {\n                try {\n                    return this.processDeleteWarehouse(response_ as any);\n                } catch (e) {\n                    return _observableThrow(e) as any as Observable<void>;\n                }\n            } else\n                return _observableThrow(response_) as any as Observable<void>;\n        }));\n    }\n\n    protected processDeleteWarehouse(response: HttpResponseBase): Observable<void> {\n        const status = response.status;\n        const responseBlob =\n            response instanceof HttpResponse ? response.body :\n            (response as any).error instanceof Blob ? (response as any).error : undefined;\n\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }}\n        if (status === 200) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return _observableOf<void>(null as any);\n            }));\n        } else if (status !== 200 && status !== 204) {\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n            }));\n        }\n        return _observableOf<void>(null as any);\n    }\n}\n\nexport class ApplicationInfoDto implements IApplicationInfoDto {\n    version: string | undefined;\n    releaseDate: Date;\n    features: { [key: string]: boolean; } | undefined;\n\n    constructor(data?: IApplicationInfoDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.version = _data[\"version\"];\n            this.releaseDate = _data[\"releaseDate\"] ? new Date(_data[\"releaseDate\"].toString()) : <any>undefined;\n            if (_data[\"features\"]) {\n                this.features = {} as any;\n                for (let key in _data[\"features\"]) {\n                    if (_data[\"features\"].hasOwnProperty(key))\n                        (<any>this.features)[key] = _data[\"features\"][key];\n                }\n            }\n        }\n    }\n\n    static fromJS(data: any): ApplicationInfoDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ApplicationInfoDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"version\"] = this.version;\n        data[\"releaseDate\"] = this.releaseDate ? this.releaseDate.toISOString() : <any>undefined;\n        if (this.features) {\n            data[\"features\"] = {};\n            for (let key in this.features) {\n                if (this.features.hasOwnProperty(key))\n                    (<any>data[\"features\"])[key] = (<any>this.features)[key];\n            }\n        }\n        return data;\n    }\n\n    clone(): ApplicationInfoDto {\n        const json = this.toJSON();\n        let result = new ApplicationInfoDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IApplicationInfoDto {\n    version: string | undefined;\n    releaseDate: Date;\n    features: { [key: string]: boolean; } | undefined;\n}\n\nexport class AuthenticateModel implements IAuthenticateModel {\n    userNameOrEmailAddress: string;\n    password: string;\n    rememberClient: boolean;\n\n    constructor(data?: IAuthenticateModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.userNameOrEmailAddress = _data[\"userNameOrEmailAddress\"];\n            this.password = _data[\"password\"];\n            this.rememberClient = _data[\"rememberClient\"];\n        }\n    }\n\n    static fromJS(data: any): AuthenticateModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new AuthenticateModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"userNameOrEmailAddress\"] = this.userNameOrEmailAddress;\n        data[\"password\"] = this.password;\n        data[\"rememberClient\"] = this.rememberClient;\n        return data;\n    }\n\n    clone(): AuthenticateModel {\n        const json = this.toJSON();\n        let result = new AuthenticateModel();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IAuthenticateModel {\n    userNameOrEmailAddress: string;\n    password: string;\n    rememberClient: boolean;\n}\n\nexport class AuthenticateResultModel implements IAuthenticateResultModel {\n    accessToken: string | undefined;\n    encryptedAccessToken: string | undefined;\n    expireInSeconds: number;\n    userId: number;\n\n    constructor(data?: IAuthenticateResultModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.accessToken = _data[\"accessToken\"];\n            this.encryptedAccessToken = _data[\"encryptedAccessToken\"];\n            this.expireInSeconds = _data[\"expireInSeconds\"];\n            this.userId = _data[\"userId\"];\n        }\n    }\n\n    static fromJS(data: any): AuthenticateResultModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new AuthenticateResultModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"accessToken\"] = this.accessToken;\n        data[\"encryptedAccessToken\"] = this.encryptedAccessToken;\n        data[\"expireInSeconds\"] = this.expireInSeconds;\n        data[\"userId\"] = this.userId;\n        return data;\n    }\n\n    clone(): AuthenticateResultModel {\n        const json = this.toJSON();\n        let result = new AuthenticateResultModel();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IAuthenticateResultModel {\n    accessToken: string | undefined;\n    encryptedAccessToken: string | undefined;\n    expireInSeconds: number;\n    userId: number;\n}\n\nexport class ChangePasswordDto implements IChangePasswordDto {\n    currentPassword: string;\n    newPassword: string;\n\n    constructor(data?: IChangePasswordDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.currentPassword = _data[\"currentPassword\"];\n            this.newPassword = _data[\"newPassword\"];\n        }\n    }\n\n    static fromJS(data: any): ChangePasswordDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ChangePasswordDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"currentPassword\"] = this.currentPassword;\n        data[\"newPassword\"] = this.newPassword;\n        return data;\n    }\n\n    clone(): ChangePasswordDto {\n        const json = this.toJSON();\n        let result = new ChangePasswordDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IChangePasswordDto {\n    currentPassword: string;\n    newPassword: string;\n}\n\nexport class ChangeUiThemeInput implements IChangeUiThemeInput {\n    theme: string;\n\n    constructor(data?: IChangeUiThemeInput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.theme = _data[\"theme\"];\n        }\n    }\n\n    static fromJS(data: any): ChangeUiThemeInput {\n        data = typeof data === 'object' ? data : {};\n        let result = new ChangeUiThemeInput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"theme\"] = this.theme;\n        return data;\n    }\n\n    clone(): ChangeUiThemeInput {\n        const json = this.toJSON();\n        let result = new ChangeUiThemeInput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IChangeUiThemeInput {\n    theme: string;\n}\n\nexport class ChangeUserLanguageDto implements IChangeUserLanguageDto {\n    languageName: string;\n\n    constructor(data?: IChangeUserLanguageDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.languageName = _data[\"languageName\"];\n        }\n    }\n\n    static fromJS(data: any): ChangeUserLanguageDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ChangeUserLanguageDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"languageName\"] = this.languageName;\n        return data;\n    }\n\n    clone(): ChangeUserLanguageDto {\n        const json = this.toJSON();\n        let result = new ChangeUserLanguageDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IChangeUserLanguageDto {\n    languageName: string;\n}\n\nexport class CreateCustomerDto implements ICreateCustomerDto {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n\n    constructor(data?: ICreateCustomerDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.customerCode = _data[\"customerCode\"];\n            this.title = _data[\"title\"];\n            this.taxNo = _data[\"taxNo\"];\n            this.taxOffice = _data[\"taxOffice\"];\n            this.telephone = _data[\"telephone\"];\n            this.email = _data[\"email\"];\n        }\n    }\n\n    static fromJS(data: any): CreateCustomerDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateCustomerDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"customerCode\"] = this.customerCode;\n        data[\"title\"] = this.title;\n        data[\"taxNo\"] = this.taxNo;\n        data[\"taxOffice\"] = this.taxOffice;\n        data[\"telephone\"] = this.telephone;\n        data[\"email\"] = this.email;\n        return data;\n    }\n\n    clone(): CreateCustomerDto {\n        const json = this.toJSON();\n        let result = new CreateCustomerDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateCustomerDto {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n}\n\nexport class CreateDocumentDto implements ICreateDocumentDto {\n    id: number;\n    documentNumber: string | undefined;\n    documentDate: Date | undefined;\n    registrationDate: Date | undefined;\n    customerId: number;\n\n    constructor(data?: ICreateDocumentDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.documentNumber = _data[\"documentNumber\"];\n            this.documentDate = _data[\"documentDate\"] ? new Date(_data[\"documentDate\"].toString()) : <any>undefined;\n            this.registrationDate = _data[\"registrationDate\"] ? new Date(_data[\"registrationDate\"].toString()) : <any>undefined;\n            this.customerId = _data[\"customerId\"];\n        }\n    }\n\n    static fromJS(data: any): CreateDocumentDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateDocumentDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"documentNumber\"] = this.documentNumber;\n        data[\"documentDate\"] = this.documentDate ? this.documentDate.toISOString() : <any>undefined;\n        data[\"registrationDate\"] = this.registrationDate ? this.registrationDate.toISOString() : <any>undefined;\n        data[\"customerId\"] = this.customerId;\n        return data;\n    }\n\n    clone(): CreateDocumentDto {\n        const json = this.toJSON();\n        let result = new CreateDocumentDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateDocumentDto {\n    id: number;\n    documentNumber: string | undefined;\n    documentDate: Date | undefined;\n    registrationDate: Date | undefined;\n    customerId: number;\n}\n\nexport class CreateProductDto implements ICreateProductDto {\n    id: number;\n    productCode: string | undefined;\n    productName: string | undefined;\n    brand: string | undefined;\n\n    constructor(data?: ICreateProductDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.productCode = _data[\"productCode\"];\n            this.productName = _data[\"productName\"];\n            this.brand = _data[\"brand\"];\n        }\n    }\n\n    static fromJS(data: any): CreateProductDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateProductDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"productCode\"] = this.productCode;\n        data[\"productName\"] = this.productName;\n        data[\"brand\"] = this.brand;\n        return data;\n    }\n\n    clone(): CreateProductDto {\n        const json = this.toJSON();\n        let result = new CreateProductDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateProductDto {\n    id: number;\n    productCode: string | undefined;\n    productName: string | undefined;\n    brand: string | undefined;\n}\n\nexport class CreateRoleDto implements ICreateRoleDto {\n    name: string;\n    displayName: string;\n    normalizedName: string | undefined;\n    description: string | undefined;\n    grantedPermissions: string[] | undefined;\n\n    constructor(data?: ICreateRoleDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.normalizedName = _data[\"normalizedName\"];\n            this.description = _data[\"description\"];\n            if (Array.isArray(_data[\"grantedPermissions\"])) {\n                this.grantedPermissions = [] as any;\n                for (let item of _data[\"grantedPermissions\"])\n                    this.grantedPermissions.push(item);\n            }\n        }\n    }\n\n    static fromJS(data: any): CreateRoleDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateRoleDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"normalizedName\"] = this.normalizedName;\n        data[\"description\"] = this.description;\n        if (Array.isArray(this.grantedPermissions)) {\n            data[\"grantedPermissions\"] = [];\n            for (let item of this.grantedPermissions)\n                data[\"grantedPermissions\"].push(item);\n        }\n        return data;\n    }\n\n    clone(): CreateRoleDto {\n        const json = this.toJSON();\n        let result = new CreateRoleDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateRoleDto {\n    name: string;\n    displayName: string;\n    normalizedName: string | undefined;\n    description: string | undefined;\n    grantedPermissions: string[] | undefined;\n}\n\nexport class CreateTenantDto implements ICreateTenantDto {\n    tenancyName: string;\n    name: string;\n    adminEmailAddress: string;\n    connectionString: string | undefined;\n    isActive: boolean;\n\n    constructor(data?: ICreateTenantDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.tenancyName = _data[\"tenancyName\"];\n            this.name = _data[\"name\"];\n            this.adminEmailAddress = _data[\"adminEmailAddress\"];\n            this.connectionString = _data[\"connectionString\"];\n            this.isActive = _data[\"isActive\"];\n        }\n    }\n\n    static fromJS(data: any): CreateTenantDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateTenantDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"tenancyName\"] = this.tenancyName;\n        data[\"name\"] = this.name;\n        data[\"adminEmailAddress\"] = this.adminEmailAddress;\n        data[\"connectionString\"] = this.connectionString;\n        data[\"isActive\"] = this.isActive;\n        return data;\n    }\n\n    clone(): CreateTenantDto {\n        const json = this.toJSON();\n        let result = new CreateTenantDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateTenantDto {\n    tenancyName: string;\n    name: string;\n    adminEmailAddress: string;\n    connectionString: string | undefined;\n    isActive: boolean;\n}\n\nexport class CreateUserDto implements ICreateUserDto {\n    userName: string;\n    name: string;\n    surname: string;\n    emailAddress: string;\n    isActive: boolean;\n    roleNames: string[] | undefined;\n    password: string;\n\n    constructor(data?: ICreateUserDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.userName = _data[\"userName\"];\n            this.name = _data[\"name\"];\n            this.surname = _data[\"surname\"];\n            this.emailAddress = _data[\"emailAddress\"];\n            this.isActive = _data[\"isActive\"];\n            if (Array.isArray(_data[\"roleNames\"])) {\n                this.roleNames = [] as any;\n                for (let item of _data[\"roleNames\"])\n                    this.roleNames.push(item);\n            }\n            this.password = _data[\"password\"];\n        }\n    }\n\n    static fromJS(data: any): CreateUserDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateUserDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"userName\"] = this.userName;\n        data[\"name\"] = this.name;\n        data[\"surname\"] = this.surname;\n        data[\"emailAddress\"] = this.emailAddress;\n        data[\"isActive\"] = this.isActive;\n        if (Array.isArray(this.roleNames)) {\n            data[\"roleNames\"] = [];\n            for (let item of this.roleNames)\n                data[\"roleNames\"].push(item);\n        }\n        data[\"password\"] = this.password;\n        return data;\n    }\n\n    clone(): CreateUserDto {\n        const json = this.toJSON();\n        let result = new CreateUserDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateUserDto {\n    userName: string;\n    name: string;\n    surname: string;\n    emailAddress: string;\n    isActive: boolean;\n    roleNames: string[] | undefined;\n    password: string;\n}\n\nexport class CreateWarehouseDto implements ICreateWarehouseDto {\n    id: number;\n    warehouseCode: string | undefined;\n    warehouseName: string | undefined;\n    warehouseType: WarehouseType;\n\n    constructor(data?: ICreateWarehouseDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.warehouseCode = _data[\"warehouseCode\"];\n            this.warehouseName = _data[\"warehouseName\"];\n            this.warehouseType = _data[\"warehouseType\"];\n        }\n    }\n\n    static fromJS(data: any): CreateWarehouseDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CreateWarehouseDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"warehouseCode\"] = this.warehouseCode;\n        data[\"warehouseName\"] = this.warehouseName;\n        data[\"warehouseType\"] = this.warehouseType;\n        return data;\n    }\n\n    clone(): CreateWarehouseDto {\n        const json = this.toJSON();\n        let result = new CreateWarehouseDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICreateWarehouseDto {\n    id: number;\n    warehouseCode: string | undefined;\n    warehouseName: string | undefined;\n    warehouseType: WarehouseType;\n}\n\nexport class Customer implements ICustomer {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n    isDeleted: boolean;\n\n    constructor(data?: ICustomer) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.customerCode = _data[\"customerCode\"];\n            this.title = _data[\"title\"];\n            this.taxNo = _data[\"taxNo\"];\n            this.taxOffice = _data[\"taxOffice\"];\n            this.telephone = _data[\"telephone\"];\n            this.email = _data[\"email\"];\n            this.isDeleted = _data[\"isDeleted\"];\n        }\n    }\n\n    static fromJS(data: any): Customer {\n        data = typeof data === 'object' ? data : {};\n        let result = new Customer();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"customerCode\"] = this.customerCode;\n        data[\"title\"] = this.title;\n        data[\"taxNo\"] = this.taxNo;\n        data[\"taxOffice\"] = this.taxOffice;\n        data[\"telephone\"] = this.telephone;\n        data[\"email\"] = this.email;\n        data[\"isDeleted\"] = this.isDeleted;\n        return data;\n    }\n\n    clone(): Customer {\n        const json = this.toJSON();\n        let result = new Customer();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICustomer {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n    isDeleted: boolean;\n}\n\nexport class CustomerDto implements ICustomerDto {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n\n    constructor(data?: ICustomerDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.customerCode = _data[\"customerCode\"];\n            this.title = _data[\"title\"];\n            this.taxNo = _data[\"taxNo\"];\n            this.taxOffice = _data[\"taxOffice\"];\n            this.telephone = _data[\"telephone\"];\n            this.email = _data[\"email\"];\n        }\n    }\n\n    static fromJS(data: any): CustomerDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CustomerDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"customerCode\"] = this.customerCode;\n        data[\"title\"] = this.title;\n        data[\"taxNo\"] = this.taxNo;\n        data[\"taxOffice\"] = this.taxOffice;\n        data[\"telephone\"] = this.telephone;\n        data[\"email\"] = this.email;\n        return data;\n    }\n\n    clone(): CustomerDto {\n        const json = this.toJSON();\n        let result = new CustomerDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICustomerDto {\n    id: number;\n    customerCode: string | undefined;\n    title: string | undefined;\n    taxNo: string | undefined;\n    taxOffice: string | undefined;\n    telephone: string | undefined;\n    email: string | undefined;\n}\n\nexport class CustomerDtoPagedResultDto implements ICustomerDtoPagedResultDto {\n    items: CustomerDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: ICustomerDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(CustomerDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): CustomerDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new CustomerDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): CustomerDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new CustomerDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ICustomerDtoPagedResultDto {\n    items: CustomerDto[] | undefined;\n    totalCount: number;\n}\n\nexport class DocumentDto implements IDocumentDto {\n    id: number;\n    documentNumber: string | undefined;\n    documentDate: Date;\n    registrationDate: Date;\n    customer: Customer;\n\n    constructor(data?: IDocumentDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.documentNumber = _data[\"documentNumber\"];\n            this.documentDate = _data[\"documentDate\"] ? new Date(_data[\"documentDate\"].toString()) : <any>undefined;\n            this.registrationDate = _data[\"registrationDate\"] ? new Date(_data[\"registrationDate\"].toString()) : <any>undefined;\n            this.customer = _data[\"customer\"] ? Customer.fromJS(_data[\"customer\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): DocumentDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new DocumentDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"documentNumber\"] = this.documentNumber;\n        data[\"documentDate\"] = this.documentDate ? this.documentDate.toISOString() : <any>undefined;\n        data[\"registrationDate\"] = this.registrationDate ? this.registrationDate.toISOString() : <any>undefined;\n        data[\"customer\"] = this.customer ? this.customer.toJSON() : <any>undefined;\n        return data;\n    }\n\n    clone(): DocumentDto {\n        const json = this.toJSON();\n        let result = new DocumentDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IDocumentDto {\n    id: number;\n    documentNumber: string | undefined;\n    documentDate: Date;\n    registrationDate: Date;\n    customer: Customer;\n}\n\nexport class DocumentDtoPagedResultDto implements IDocumentDtoPagedResultDto {\n    items: DocumentDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: IDocumentDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(DocumentDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): DocumentDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new DocumentDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): DocumentDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new DocumentDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IDocumentDtoPagedResultDto {\n    items: DocumentDto[] | undefined;\n    totalCount: number;\n}\n\nexport class ExternalAuthenticateModel implements IExternalAuthenticateModel {\n    authProvider: string;\n    providerKey: string;\n    providerAccessCode: string;\n\n    constructor(data?: IExternalAuthenticateModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.authProvider = _data[\"authProvider\"];\n            this.providerKey = _data[\"providerKey\"];\n            this.providerAccessCode = _data[\"providerAccessCode\"];\n        }\n    }\n\n    static fromJS(data: any): ExternalAuthenticateModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new ExternalAuthenticateModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"authProvider\"] = this.authProvider;\n        data[\"providerKey\"] = this.providerKey;\n        data[\"providerAccessCode\"] = this.providerAccessCode;\n        return data;\n    }\n\n    clone(): ExternalAuthenticateModel {\n        const json = this.toJSON();\n        let result = new ExternalAuthenticateModel();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IExternalAuthenticateModel {\n    authProvider: string;\n    providerKey: string;\n    providerAccessCode: string;\n}\n\nexport class ExternalAuthenticateResultModel implements IExternalAuthenticateResultModel {\n    accessToken: string | undefined;\n    encryptedAccessToken: string | undefined;\n    expireInSeconds: number;\n    waitingForActivation: boolean;\n\n    constructor(data?: IExternalAuthenticateResultModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.accessToken = _data[\"accessToken\"];\n            this.encryptedAccessToken = _data[\"encryptedAccessToken\"];\n            this.expireInSeconds = _data[\"expireInSeconds\"];\n            this.waitingForActivation = _data[\"waitingForActivation\"];\n        }\n    }\n\n    static fromJS(data: any): ExternalAuthenticateResultModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new ExternalAuthenticateResultModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"accessToken\"] = this.accessToken;\n        data[\"encryptedAccessToken\"] = this.encryptedAccessToken;\n        data[\"expireInSeconds\"] = this.expireInSeconds;\n        data[\"waitingForActivation\"] = this.waitingForActivation;\n        return data;\n    }\n\n    clone(): ExternalAuthenticateResultModel {\n        const json = this.toJSON();\n        let result = new ExternalAuthenticateResultModel();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IExternalAuthenticateResultModel {\n    accessToken: string | undefined;\n    encryptedAccessToken: string | undefined;\n    expireInSeconds: number;\n    waitingForActivation: boolean;\n}\n\nexport class ExternalLoginProviderInfoModel implements IExternalLoginProviderInfoModel {\n    name: string | undefined;\n    clientId: string | undefined;\n\n    constructor(data?: IExternalLoginProviderInfoModel) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.name = _data[\"name\"];\n            this.clientId = _data[\"clientId\"];\n        }\n    }\n\n    static fromJS(data: any): ExternalLoginProviderInfoModel {\n        data = typeof data === 'object' ? data : {};\n        let result = new ExternalLoginProviderInfoModel();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"clientId\"] = this.clientId;\n        return data;\n    }\n\n    clone(): ExternalLoginProviderInfoModel {\n        const json = this.toJSON();\n        let result = new ExternalLoginProviderInfoModel();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IExternalLoginProviderInfoModel {\n    name: string | undefined;\n    clientId: string | undefined;\n}\n\nexport class FlatPermissionDto implements IFlatPermissionDto {\n    name: string | undefined;\n    displayName: string | undefined;\n    description: string | undefined;\n\n    constructor(data?: IFlatPermissionDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.description = _data[\"description\"];\n        }\n    }\n\n    static fromJS(data: any): FlatPermissionDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new FlatPermissionDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"description\"] = this.description;\n        return data;\n    }\n\n    clone(): FlatPermissionDto {\n        const json = this.toJSON();\n        let result = new FlatPermissionDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IFlatPermissionDto {\n    name: string | undefined;\n    displayName: string | undefined;\n    description: string | undefined;\n}\n\nexport class GetCurrentLoginInformationsOutput implements IGetCurrentLoginInformationsOutput {\n    application: ApplicationInfoDto;\n    user: UserLoginInfoDto;\n    tenant: TenantLoginInfoDto;\n\n    constructor(data?: IGetCurrentLoginInformationsOutput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.application = _data[\"application\"] ? ApplicationInfoDto.fromJS(_data[\"application\"]) : <any>undefined;\n            this.user = _data[\"user\"] ? UserLoginInfoDto.fromJS(_data[\"user\"]) : <any>undefined;\n            this.tenant = _data[\"tenant\"] ? TenantLoginInfoDto.fromJS(_data[\"tenant\"]) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): GetCurrentLoginInformationsOutput {\n        data = typeof data === 'object' ? data : {};\n        let result = new GetCurrentLoginInformationsOutput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"application\"] = this.application ? this.application.toJSON() : <any>undefined;\n        data[\"user\"] = this.user ? this.user.toJSON() : <any>undefined;\n        data[\"tenant\"] = this.tenant ? this.tenant.toJSON() : <any>undefined;\n        return data;\n    }\n\n    clone(): GetCurrentLoginInformationsOutput {\n        const json = this.toJSON();\n        let result = new GetCurrentLoginInformationsOutput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IGetCurrentLoginInformationsOutput {\n    application: ApplicationInfoDto;\n    user: UserLoginInfoDto;\n    tenant: TenantLoginInfoDto;\n}\n\nexport class GetRoleForEditOutput implements IGetRoleForEditOutput {\n    role: RoleEditDto;\n    permissions: FlatPermissionDto[] | undefined;\n    grantedPermissionNames: string[] | undefined;\n\n    constructor(data?: IGetRoleForEditOutput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.role = _data[\"role\"] ? RoleEditDto.fromJS(_data[\"role\"]) : <any>undefined;\n            if (Array.isArray(_data[\"permissions\"])) {\n                this.permissions = [] as any;\n                for (let item of _data[\"permissions\"])\n                    this.permissions.push(FlatPermissionDto.fromJS(item));\n            }\n            if (Array.isArray(_data[\"grantedPermissionNames\"])) {\n                this.grantedPermissionNames = [] as any;\n                for (let item of _data[\"grantedPermissionNames\"])\n                    this.grantedPermissionNames.push(item);\n            }\n        }\n    }\n\n    static fromJS(data: any): GetRoleForEditOutput {\n        data = typeof data === 'object' ? data : {};\n        let result = new GetRoleForEditOutput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"role\"] = this.role ? this.role.toJSON() : <any>undefined;\n        if (Array.isArray(this.permissions)) {\n            data[\"permissions\"] = [];\n            for (let item of this.permissions)\n                data[\"permissions\"].push(item.toJSON());\n        }\n        if (Array.isArray(this.grantedPermissionNames)) {\n            data[\"grantedPermissionNames\"] = [];\n            for (let item of this.grantedPermissionNames)\n                data[\"grantedPermissionNames\"].push(item);\n        }\n        return data;\n    }\n\n    clone(): GetRoleForEditOutput {\n        const json = this.toJSON();\n        let result = new GetRoleForEditOutput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IGetRoleForEditOutput {\n    role: RoleEditDto;\n    permissions: FlatPermissionDto[] | undefined;\n    grantedPermissionNames: string[] | undefined;\n}\n\nexport class Int64EntityDto implements IInt64EntityDto {\n    id: number;\n\n    constructor(data?: IInt64EntityDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n        }\n    }\n\n    static fromJS(data: any): Int64EntityDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new Int64EntityDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        return data;\n    }\n\n    clone(): Int64EntityDto {\n        const json = this.toJSON();\n        let result = new Int64EntityDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IInt64EntityDto {\n    id: number;\n}\n\nexport class IsTenantAvailableInput implements IIsTenantAvailableInput {\n    tenancyName: string;\n\n    constructor(data?: IIsTenantAvailableInput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.tenancyName = _data[\"tenancyName\"];\n        }\n    }\n\n    static fromJS(data: any): IsTenantAvailableInput {\n        data = typeof data === 'object' ? data : {};\n        let result = new IsTenantAvailableInput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"tenancyName\"] = this.tenancyName;\n        return data;\n    }\n\n    clone(): IsTenantAvailableInput {\n        const json = this.toJSON();\n        let result = new IsTenantAvailableInput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IIsTenantAvailableInput {\n    tenancyName: string;\n}\n\nexport class IsTenantAvailableOutput implements IIsTenantAvailableOutput {\n    state: TenantAvailabilityState;\n    tenantId: number | undefined;\n\n    constructor(data?: IIsTenantAvailableOutput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.state = _data[\"state\"];\n            this.tenantId = _data[\"tenantId\"];\n        }\n    }\n\n    static fromJS(data: any): IsTenantAvailableOutput {\n        data = typeof data === 'object' ? data : {};\n        let result = new IsTenantAvailableOutput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"state\"] = this.state;\n        data[\"tenantId\"] = this.tenantId;\n        return data;\n    }\n\n    clone(): IsTenantAvailableOutput {\n        const json = this.toJSON();\n        let result = new IsTenantAvailableOutput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IIsTenantAvailableOutput {\n    state: TenantAvailabilityState;\n    tenantId: number | undefined;\n}\n\nexport class PermissionDto implements IPermissionDto {\n    id: number;\n    name: string | undefined;\n    displayName: string | undefined;\n    description: string | undefined;\n\n    constructor(data?: IPermissionDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.description = _data[\"description\"];\n        }\n    }\n\n    static fromJS(data: any): PermissionDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new PermissionDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"description\"] = this.description;\n        return data;\n    }\n\n    clone(): PermissionDto {\n        const json = this.toJSON();\n        let result = new PermissionDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IPermissionDto {\n    id: number;\n    name: string | undefined;\n    displayName: string | undefined;\n    description: string | undefined;\n}\n\nexport class PermissionDtoListResultDto implements IPermissionDtoListResultDto {\n    items: PermissionDto[] | undefined;\n\n    constructor(data?: IPermissionDtoListResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(PermissionDto.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): PermissionDtoListResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new PermissionDtoListResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        return data;\n    }\n\n    clone(): PermissionDtoListResultDto {\n        const json = this.toJSON();\n        let result = new PermissionDtoListResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IPermissionDtoListResultDto {\n    items: PermissionDto[] | undefined;\n}\n\nexport class ProductDto implements IProductDto {\n    id: number;\n    productCode: string | undefined;\n    productName: string | undefined;\n    brand: string | undefined;\n\n    constructor(data?: IProductDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.productCode = _data[\"productCode\"];\n            this.productName = _data[\"productName\"];\n            this.brand = _data[\"brand\"];\n        }\n    }\n\n    static fromJS(data: any): ProductDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ProductDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"productCode\"] = this.productCode;\n        data[\"productName\"] = this.productName;\n        data[\"brand\"] = this.brand;\n        return data;\n    }\n\n    clone(): ProductDto {\n        const json = this.toJSON();\n        let result = new ProductDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IProductDto {\n    id: number;\n    productCode: string | undefined;\n    productName: string | undefined;\n    brand: string | undefined;\n}\n\nexport class ProductDtoPagedResultDto implements IProductDtoPagedResultDto {\n    items: ProductDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: IProductDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(ProductDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): ProductDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ProductDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): ProductDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new ProductDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IProductDtoPagedResultDto {\n    items: ProductDto[] | undefined;\n    totalCount: number;\n}\n\nexport class RegisterInput implements IRegisterInput {\n    name: string;\n    surname: string;\n    userName: string;\n    emailAddress: string;\n    password: string;\n    captchaResponse: string | undefined;\n\n    constructor(data?: IRegisterInput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.name = _data[\"name\"];\n            this.surname = _data[\"surname\"];\n            this.userName = _data[\"userName\"];\n            this.emailAddress = _data[\"emailAddress\"];\n            this.password = _data[\"password\"];\n            this.captchaResponse = _data[\"captchaResponse\"];\n        }\n    }\n\n    static fromJS(data: any): RegisterInput {\n        data = typeof data === 'object' ? data : {};\n        let result = new RegisterInput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"name\"] = this.name;\n        data[\"surname\"] = this.surname;\n        data[\"userName\"] = this.userName;\n        data[\"emailAddress\"] = this.emailAddress;\n        data[\"password\"] = this.password;\n        data[\"captchaResponse\"] = this.captchaResponse;\n        return data;\n    }\n\n    clone(): RegisterInput {\n        const json = this.toJSON();\n        let result = new RegisterInput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRegisterInput {\n    name: string;\n    surname: string;\n    userName: string;\n    emailAddress: string;\n    password: string;\n    captchaResponse: string | undefined;\n}\n\nexport class RegisterOutput implements IRegisterOutput {\n    canLogin: boolean;\n\n    constructor(data?: IRegisterOutput) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.canLogin = _data[\"canLogin\"];\n        }\n    }\n\n    static fromJS(data: any): RegisterOutput {\n        data = typeof data === 'object' ? data : {};\n        let result = new RegisterOutput();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"canLogin\"] = this.canLogin;\n        return data;\n    }\n\n    clone(): RegisterOutput {\n        const json = this.toJSON();\n        let result = new RegisterOutput();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRegisterOutput {\n    canLogin: boolean;\n}\n\nexport class ResetPasswordDto implements IResetPasswordDto {\n    adminPassword: string;\n    userId: number;\n    newPassword: string;\n\n    constructor(data?: IResetPasswordDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.adminPassword = _data[\"adminPassword\"];\n            this.userId = _data[\"userId\"];\n            this.newPassword = _data[\"newPassword\"];\n        }\n    }\n\n    static fromJS(data: any): ResetPasswordDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new ResetPasswordDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"adminPassword\"] = this.adminPassword;\n        data[\"userId\"] = this.userId;\n        data[\"newPassword\"] = this.newPassword;\n        return data;\n    }\n\n    clone(): ResetPasswordDto {\n        const json = this.toJSON();\n        let result = new ResetPasswordDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IResetPasswordDto {\n    adminPassword: string;\n    userId: number;\n    newPassword: string;\n}\n\nexport class RoleDto implements IRoleDto {\n    id: number;\n    name: string;\n    displayName: string;\n    normalizedName: string | undefined;\n    description: string | undefined;\n    grantedPermissions: string[] | undefined;\n\n    constructor(data?: IRoleDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.normalizedName = _data[\"normalizedName\"];\n            this.description = _data[\"description\"];\n            if (Array.isArray(_data[\"grantedPermissions\"])) {\n                this.grantedPermissions = [] as any;\n                for (let item of _data[\"grantedPermissions\"])\n                    this.grantedPermissions.push(item);\n            }\n        }\n    }\n\n    static fromJS(data: any): RoleDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"normalizedName\"] = this.normalizedName;\n        data[\"description\"] = this.description;\n        if (Array.isArray(this.grantedPermissions)) {\n            data[\"grantedPermissions\"] = [];\n            for (let item of this.grantedPermissions)\n                data[\"grantedPermissions\"].push(item);\n        }\n        return data;\n    }\n\n    clone(): RoleDto {\n        const json = this.toJSON();\n        let result = new RoleDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleDto {\n    id: number;\n    name: string;\n    displayName: string;\n    normalizedName: string | undefined;\n    description: string | undefined;\n    grantedPermissions: string[] | undefined;\n}\n\nexport class RoleDtoListResultDto implements IRoleDtoListResultDto {\n    items: RoleDto[] | undefined;\n\n    constructor(data?: IRoleDtoListResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(RoleDto.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): RoleDtoListResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleDtoListResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        return data;\n    }\n\n    clone(): RoleDtoListResultDto {\n        const json = this.toJSON();\n        let result = new RoleDtoListResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleDtoListResultDto {\n    items: RoleDto[] | undefined;\n}\n\nexport class RoleDtoPagedResultDto implements IRoleDtoPagedResultDto {\n    items: RoleDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: IRoleDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(RoleDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): RoleDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): RoleDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new RoleDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleDtoPagedResultDto {\n    items: RoleDto[] | undefined;\n    totalCount: number;\n}\n\nexport class RoleEditDto implements IRoleEditDto {\n    id: number;\n    name: string;\n    displayName: string;\n    description: string | undefined;\n    isStatic: boolean;\n\n    constructor(data?: IRoleEditDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.description = _data[\"description\"];\n            this.isStatic = _data[\"isStatic\"];\n        }\n    }\n\n    static fromJS(data: any): RoleEditDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleEditDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"description\"] = this.description;\n        data[\"isStatic\"] = this.isStatic;\n        return data;\n    }\n\n    clone(): RoleEditDto {\n        const json = this.toJSON();\n        let result = new RoleEditDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleEditDto {\n    id: number;\n    name: string;\n    displayName: string;\n    description: string | undefined;\n    isStatic: boolean;\n}\n\nexport class RoleListDto implements IRoleListDto {\n    id: number;\n    name: string | undefined;\n    displayName: string | undefined;\n    isStatic: boolean;\n    isDefault: boolean;\n    creationTime: Date;\n\n    constructor(data?: IRoleListDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n            this.displayName = _data[\"displayName\"];\n            this.isStatic = _data[\"isStatic\"];\n            this.isDefault = _data[\"isDefault\"];\n            this.creationTime = _data[\"creationTime\"] ? new Date(_data[\"creationTime\"].toString()) : <any>undefined;\n        }\n    }\n\n    static fromJS(data: any): RoleListDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleListDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        data[\"displayName\"] = this.displayName;\n        data[\"isStatic\"] = this.isStatic;\n        data[\"isDefault\"] = this.isDefault;\n        data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\n        return data;\n    }\n\n    clone(): RoleListDto {\n        const json = this.toJSON();\n        let result = new RoleListDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleListDto {\n    id: number;\n    name: string | undefined;\n    displayName: string | undefined;\n    isStatic: boolean;\n    isDefault: boolean;\n    creationTime: Date;\n}\n\nexport class RoleListDtoListResultDto implements IRoleListDtoListResultDto {\n    items: RoleListDto[] | undefined;\n\n    constructor(data?: IRoleListDtoListResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(RoleListDto.fromJS(item));\n            }\n        }\n    }\n\n    static fromJS(data: any): RoleListDtoListResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new RoleListDtoListResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        return data;\n    }\n\n    clone(): RoleListDtoListResultDto {\n        const json = this.toJSON();\n        let result = new RoleListDtoListResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IRoleListDtoListResultDto {\n    items: RoleListDto[] | undefined;\n}\n\nexport enum TenantAvailabilityState {\n    _1 = 1,\n    _2 = 2,\n    _3 = 3,\n}\n\nexport class TenantDto implements ITenantDto {\n    id: number;\n    tenancyName: string;\n    name: string;\n    isActive: boolean;\n\n    constructor(data?: ITenantDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.tenancyName = _data[\"tenancyName\"];\n            this.name = _data[\"name\"];\n            this.isActive = _data[\"isActive\"];\n        }\n    }\n\n    static fromJS(data: any): TenantDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new TenantDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"tenancyName\"] = this.tenancyName;\n        data[\"name\"] = this.name;\n        data[\"isActive\"] = this.isActive;\n        return data;\n    }\n\n    clone(): TenantDto {\n        const json = this.toJSON();\n        let result = new TenantDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ITenantDto {\n    id: number;\n    tenancyName: string;\n    name: string;\n    isActive: boolean;\n}\n\nexport class TenantDtoPagedResultDto implements ITenantDtoPagedResultDto {\n    items: TenantDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: ITenantDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(TenantDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): TenantDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new TenantDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): TenantDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new TenantDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ITenantDtoPagedResultDto {\n    items: TenantDto[] | undefined;\n    totalCount: number;\n}\n\nexport class TenantLoginInfoDto implements ITenantLoginInfoDto {\n    id: number;\n    tenancyName: string | undefined;\n    name: string | undefined;\n\n    constructor(data?: ITenantLoginInfoDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.tenancyName = _data[\"tenancyName\"];\n            this.name = _data[\"name\"];\n        }\n    }\n\n    static fromJS(data: any): TenantLoginInfoDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new TenantLoginInfoDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"tenancyName\"] = this.tenancyName;\n        data[\"name\"] = this.name;\n        return data;\n    }\n\n    clone(): TenantLoginInfoDto {\n        const json = this.toJSON();\n        let result = new TenantLoginInfoDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface ITenantLoginInfoDto {\n    id: number;\n    tenancyName: string | undefined;\n    name: string | undefined;\n}\n\nexport class UserDto implements IUserDto {\n    id: number;\n    userName: string;\n    name: string;\n    surname: string;\n    emailAddress: string;\n    isActive: boolean;\n    fullName: string | undefined;\n    lastLoginTime: Date | undefined;\n    creationTime: Date;\n    roleNames: string[] | undefined;\n\n    constructor(data?: IUserDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.userName = _data[\"userName\"];\n            this.name = _data[\"name\"];\n            this.surname = _data[\"surname\"];\n            this.emailAddress = _data[\"emailAddress\"];\n            this.isActive = _data[\"isActive\"];\n            this.fullName = _data[\"fullName\"];\n            this.lastLoginTime = _data[\"lastLoginTime\"] ? new Date(_data[\"lastLoginTime\"].toString()) : <any>undefined;\n            this.creationTime = _data[\"creationTime\"] ? new Date(_data[\"creationTime\"].toString()) : <any>undefined;\n            if (Array.isArray(_data[\"roleNames\"])) {\n                this.roleNames = [] as any;\n                for (let item of _data[\"roleNames\"])\n                    this.roleNames.push(item);\n            }\n        }\n    }\n\n    static fromJS(data: any): UserDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"userName\"] = this.userName;\n        data[\"name\"] = this.name;\n        data[\"surname\"] = this.surname;\n        data[\"emailAddress\"] = this.emailAddress;\n        data[\"isActive\"] = this.isActive;\n        data[\"fullName\"] = this.fullName;\n        data[\"lastLoginTime\"] = this.lastLoginTime ? this.lastLoginTime.toISOString() : <any>undefined;\n        data[\"creationTime\"] = this.creationTime ? this.creationTime.toISOString() : <any>undefined;\n        if (Array.isArray(this.roleNames)) {\n            data[\"roleNames\"] = [];\n            for (let item of this.roleNames)\n                data[\"roleNames\"].push(item);\n        }\n        return data;\n    }\n\n    clone(): UserDto {\n        const json = this.toJSON();\n        let result = new UserDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IUserDto {\n    id: number;\n    userName: string;\n    name: string;\n    surname: string;\n    emailAddress: string;\n    isActive: boolean;\n    fullName: string | undefined;\n    lastLoginTime: Date | undefined;\n    creationTime: Date;\n    roleNames: string[] | undefined;\n}\n\nexport class UserDtoPagedResultDto implements IUserDtoPagedResultDto {\n    items: UserDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: IUserDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(UserDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): UserDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): UserDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new UserDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IUserDtoPagedResultDto {\n    items: UserDto[] | undefined;\n    totalCount: number;\n}\n\nexport class UserLoginInfoDto implements IUserLoginInfoDto {\n    id: number;\n    name: string | undefined;\n    surname: string | undefined;\n    userName: string | undefined;\n    emailAddress: string | undefined;\n\n    constructor(data?: IUserLoginInfoDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.name = _data[\"name\"];\n            this.surname = _data[\"surname\"];\n            this.userName = _data[\"userName\"];\n            this.emailAddress = _data[\"emailAddress\"];\n        }\n    }\n\n    static fromJS(data: any): UserLoginInfoDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new UserLoginInfoDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"name\"] = this.name;\n        data[\"surname\"] = this.surname;\n        data[\"userName\"] = this.userName;\n        data[\"emailAddress\"] = this.emailAddress;\n        return data;\n    }\n\n    clone(): UserLoginInfoDto {\n        const json = this.toJSON();\n        let result = new UserLoginInfoDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IUserLoginInfoDto {\n    id: number;\n    name: string | undefined;\n    surname: string | undefined;\n    userName: string | undefined;\n    emailAddress: string | undefined;\n}\n\nexport class WarehouseDto implements IWarehouseDto {\n    id: number;\n    warehouseCode: string | undefined;\n    warehouseName: string | undefined;\n    warehouseType: WarehouseType;\n\n    constructor(data?: IWarehouseDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            this.id = _data[\"id\"];\n            this.warehouseCode = _data[\"warehouseCode\"];\n            this.warehouseName = _data[\"warehouseName\"];\n            this.warehouseType = _data[\"warehouseType\"];\n        }\n    }\n\n    static fromJS(data: any): WarehouseDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new WarehouseDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        data[\"id\"] = this.id;\n        data[\"warehouseCode\"] = this.warehouseCode;\n        data[\"warehouseName\"] = this.warehouseName;\n        data[\"warehouseType\"] = this.warehouseType;\n        return data;\n    }\n\n    clone(): WarehouseDto {\n        const json = this.toJSON();\n        let result = new WarehouseDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IWarehouseDto {\n    id: number;\n    warehouseCode: string | undefined;\n    warehouseName: string | undefined;\n    warehouseType: WarehouseType;\n}\n\nexport class WarehouseDtoPagedResultDto implements IWarehouseDtoPagedResultDto {\n    items: WarehouseDto[] | undefined;\n    totalCount: number;\n\n    constructor(data?: IWarehouseDtoPagedResultDto) {\n        if (data) {\n            for (var property in data) {\n                if (data.hasOwnProperty(property))\n                    (<any>this)[property] = (<any>data)[property];\n            }\n        }\n    }\n\n    init(_data?: any) {\n        if (_data) {\n            if (Array.isArray(_data[\"items\"])) {\n                this.items = [] as any;\n                for (let item of _data[\"items\"])\n                    this.items.push(WarehouseDto.fromJS(item));\n            }\n            this.totalCount = _data[\"totalCount\"];\n        }\n    }\n\n    static fromJS(data: any): WarehouseDtoPagedResultDto {\n        data = typeof data === 'object' ? data : {};\n        let result = new WarehouseDtoPagedResultDto();\n        result.init(data);\n        return result;\n    }\n\n    toJSON(data?: any) {\n        data = typeof data === 'object' ? data : {};\n        if (Array.isArray(this.items)) {\n            data[\"items\"] = [];\n            for (let item of this.items)\n                data[\"items\"].push(item.toJSON());\n        }\n        data[\"totalCount\"] = this.totalCount;\n        return data;\n    }\n\n    clone(): WarehouseDtoPagedResultDto {\n        const json = this.toJSON();\n        let result = new WarehouseDtoPagedResultDto();\n        result.init(json);\n        return result;\n    }\n}\n\nexport interface IWarehouseDtoPagedResultDto {\n    items: WarehouseDto[] | undefined;\n    totalCount: number;\n}\n\nexport enum WarehouseType {\n    _0 = 0,\n    _1 = 1,\n}\n\nexport class ApiException extends Error {\n    message: string;\n    status: number;\n    response: string;\n    headers: { [key: string]: any; };\n    result: any;\n\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\n        super();\n\n        this.message = message;\n        this.status = status;\n        this.response = response;\n        this.headers = headers;\n        this.result = result;\n    }\n\n    protected isApiException = true;\n\n    static isApiException(obj: any): obj is ApiException {\n        return obj.isApiException === true;\n    }\n}\n\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\n    if (result !== null && result !== undefined)\n        return _observableThrow(result);\n    else\n        return _observableThrow(new ApiException(message, status, response, headers, null));\n}\n\nfunction blobToText(blob: any): Observable<string> {\n    return new Observable<string>((observer: any) => {\n        if (!blob) {\n            observer.next(\"\");\n            observer.complete();\n        } else {\n            let reader = new FileReader();\n            reader.onload = event => {\n                observer.next((event.target as any).result);\n                observer.complete();\n            };\n            reader.readAsText(blob);\n        }\n    });\n}"]},"metadata":{},"sourceType":"module"}