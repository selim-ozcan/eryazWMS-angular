{"ast":null,"code":"import _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport var LayoutStoreService = /*#__PURE__*/function () {\n  function LayoutStoreService() {\n    _classCallCheck(this, LayoutStoreService);\n\n    this.initialLayoutConfig = {\n      sidebarExpanded: false\n    };\n    this.configSource = new BehaviorSubject(this.initialLayoutConfig);\n    this.config$ = this.configSource.asObservable();\n  }\n\n  _createClass(LayoutStoreService, [{\n    key: \"sidebarExpanded\",\n    get: function get() {\n      return this.config$.pipe(pluck('sidebarExpanded'), distinctUntilChanged());\n    }\n  }, {\n    key: \"setSidebarExpanded\",\n    value: function setSidebarExpanded(value) {\n      this.configSource.next(Object.assign(this.configSource.value, {\n        sidebarExpanded: value\n      }));\n    }\n  }]);\n\n  return LayoutStoreService;\n}();\n\nLayoutStoreService.ɵfac = function LayoutStoreService_Factory(t) {\n  return new (t || LayoutStoreService)();\n};\n\nLayoutStoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LayoutStoreService,\n  factory: LayoutStoreService.ɵfac\n});","map":{"version":3,"mappings":";;AACA,SAASA,eAAT,QAA4C,MAA5C;AACA,SAASC,oBAAT,EAA+BC,KAA/B,QAA4C,gBAA5C;;AAIA,WAAaC,kBAAb;EAOE;IAAA;;IALiB,2BAAoC;MACnDC,eAAe,EAAE;IADkC,CAApC;IAMf,KAAKC,YAAL,GAAoB,IAAIL,eAAJ,CAAoB,KAAKM,mBAAzB,CAApB;IACA,KAAKC,OAAL,GAAe,KAAKF,YAAL,CAAkBG,YAAlB,EAAf;EACD;;EAVH;IAAA;IAAA,KAYE,eAAmB;MACjB,OAAO,KAAKD,OAAL,CAAaE,IAAb,CACLP,KAAK,CAAC,iBAAD,CADA,EAELD,oBAAoB,EAFf,CAAP;IAID;EAjBH;IAAA;IAAA,OAmBS,4BAAmBS,KAAnB,EAAiC;MACtC,KAAKL,YAAL,CAAkBM,IAAlB,CACEC,MAAM,CAACC,MAAP,CAAc,KAAKR,YAAL,CAAkBK,KAAhC,EAAuC;QAAEN,eAAe,EAAEM;MAAnB,CAAvC,CADF;IAGD;EAvBH;;EAAA;AAAA;;;mBAAaP;AAAkB;;;SAAlBA;EAAkBW,SAAlBX,kBAAkB","names":["BehaviorSubject","distinctUntilChanged","pluck","LayoutStoreService","sidebarExpanded","configSource","initialLayoutConfig","config$","asObservable","pipe","value","next","Object","assign","factory"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/layout/layout-store.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\nimport { LayoutConfig } from './layout-config';\n\n@Injectable()\nexport class LayoutStoreService {\n  public readonly config$: Observable<LayoutConfig>;\n  private readonly initialLayoutConfig: LayoutConfig = {\n    sidebarExpanded: false\n  };\n  private configSource: BehaviorSubject<LayoutConfig>;\n\n  constructor() {\n    this.configSource = new BehaviorSubject(this.initialLayoutConfig);\n    this.config$ = this.configSource.asObservable();\n  }\n\n  get sidebarExpanded(): Observable<boolean> {\n    return this.config$.pipe(\n      pluck('sidebarExpanded'),\n      distinctUntilChanged()\n    ) as Observable<boolean>;\n  }\n\n  public setSidebarExpanded(value: boolean): void {\n    this.configSource.next(\n      Object.assign(this.configSource.value, { sidebarExpanded: value })\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}