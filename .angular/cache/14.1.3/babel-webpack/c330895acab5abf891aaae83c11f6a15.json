{"ast":null,"code":"import _get from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n  return function (source) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nvar BufferWhenOperator = /*#__PURE__*/function () {\n  function BufferWhenOperator(closingSelector) {\n    _classCallCheck(this, BufferWhenOperator);\n\n    this.closingSelector = closingSelector;\n  }\n\n  _createClass(BufferWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n  }]);\n\n  return BufferWhenOperator;\n}();\n\nvar BufferWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(BufferWhenSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(BufferWhenSubscriber);\n\n  function BufferWhenSubscriber(destination, closingSelector) {\n    var _this;\n\n    _classCallCheck(this, BufferWhenSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.closingSelector = closingSelector;\n    _this.subscribing = false;\n\n    _this.openBuffer();\n\n    return _this;\n  }\n\n  _createClass(BufferWhenSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      this.buffer.push(value);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var buffer = this.buffer;\n\n      if (buffer) {\n        this.destination.next(buffer);\n      }\n\n      _get(_getPrototypeOf(BufferWhenSubscriber.prototype), \"_complete\", this).call(this);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      this.buffer = undefined;\n      this.subscribing = false;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.openBuffer();\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.subscribing) {\n        this.complete();\n      } else {\n        this.openBuffer();\n      }\n    }\n  }, {\n    key: \"openBuffer\",\n    value: function openBuffer() {\n      var closingSubscription = this.closingSubscription;\n\n      if (closingSubscription) {\n        this.remove(closingSubscription);\n        closingSubscription.unsubscribe();\n      }\n\n      var buffer = this.buffer;\n\n      if (this.buffer) {\n        this.destination.next(buffer);\n      }\n\n      this.buffer = [];\n      var closingNotifier;\n\n      try {\n        var closingSelector = this.closingSelector;\n        closingNotifier = closingSelector();\n      } catch (err) {\n        return this.error(err);\n      }\n\n      closingSubscription = new Subscription();\n      this.closingSubscription = closingSubscription;\n      this.add(closingSubscription);\n      this.subscribing = true;\n      closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n      this.subscribing = false;\n    }\n  }]);\n\n  return BufferWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["Subscription","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","bufferWhen","closingSelector","source","lift","BufferWhenOperator","subscriber","subscribe","BufferWhenSubscriber","destination","subscribing","openBuffer","value","buffer","push","next","undefined","complete","closingSubscription","remove","unsubscribe","closingNotifier","err","error","add"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js"],"sourcesContent":["import { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass BufferWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        this.buffer = undefined;\n        this.subscribing = false;\n    }\n    notifyNext() {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (err) {\n            return this.error(err);\n        }\n        closingSubscription = new Subscription();\n        this.closingSubscription = closingSubscription;\n        this.add(closingSubscription);\n        this.subscribing = true;\n        closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n        this.subscribing = false;\n    }\n}\n"],"mappings":";;;;;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAAqC;EACxC,OAAO,UAAUC,MAAV,EAAkB;IACrB,OAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,kBAAJ,CAAuBH,eAAvB,CAAZ,CAAP;EACH,CAFD;AAGH;;IACKG,kB;EACF,4BAAYH,eAAZ,EAA6B;IAAA;;IACzB,KAAKA,eAAL,GAAuBA,eAAvB;EACH;;;;WACD,cAAKI,UAAL,EAAiBH,MAAjB,EAAyB;MACrB,OAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,oBAAJ,CAAyBF,UAAzB,EAAqC,KAAKJ,eAA1C,CAAjB,CAAP;IACH;;;;;;IAECM,oB;;;;;EACF,8BAAYC,WAAZ,EAAyBP,eAAzB,EAA0C;IAAA;;IAAA;;IACtC,0BAAMO,WAAN;IACA,MAAKP,eAAL,GAAuBA,eAAvB;IACA,MAAKQ,WAAL,GAAmB,KAAnB;;IACA,MAAKC,UAAL;;IAJsC;EAKzC;;;;WACD,eAAMC,KAAN,EAAa;MACT,KAAKC,MAAL,CAAYC,IAAZ,CAAiBF,KAAjB;IACH;;;WACD,qBAAY;MACR,IAAMC,MAAM,GAAG,KAAKA,MAApB;;MACA,IAAIA,MAAJ,EAAY;QACR,KAAKJ,WAAL,CAAiBM,IAAjB,CAAsBF,MAAtB;MACH;;MACD;IACH;;;WACD,wBAAe;MACX,KAAKA,MAAL,GAAcG,SAAd;MACA,KAAKN,WAAL,GAAmB,KAAnB;IACH;;;WACD,sBAAa;MACT,KAAKC,UAAL;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKD,WAAT,EAAsB;QAClB,KAAKO,QAAL;MACH,CAFD,MAGK;QACD,KAAKN,UAAL;MACH;IACJ;;;WACD,sBAAa;MACT,IAAMO,mBAAN,GAA8B,IAA9B,CAAMA,mBAAN;;MACA,IAAIA,mBAAJ,EAAyB;QACrB,KAAKC,MAAL,CAAYD,mBAAZ;QACAA,mBAAmB,CAACE,WAApB;MACH;;MACD,IAAMP,MAAM,GAAG,KAAKA,MAApB;;MACA,IAAI,KAAKA,MAAT,EAAiB;QACb,KAAKJ,WAAL,CAAiBM,IAAjB,CAAsBF,MAAtB;MACH;;MACD,KAAKA,MAAL,GAAc,EAAd;MACA,IAAIQ,eAAJ;;MACA,IAAI;QACA,IAAQnB,eAAR,GAA4B,IAA5B,CAAQA,eAAR;QACAmB,eAAe,GAAGnB,eAAe,EAAjC;MACH,CAHD,CAIA,OAAOoB,GAAP,EAAY;QACR,OAAO,KAAKC,KAAL,CAAWD,GAAX,CAAP;MACH;;MACDJ,mBAAmB,GAAG,IAAIrB,YAAJ,EAAtB;MACA,KAAKqB,mBAAL,GAA2BA,mBAA3B;MACA,KAAKM,GAAL,CAASN,mBAAT;MACA,KAAKR,WAAL,GAAmB,IAAnB;MACAQ,mBAAmB,CAACM,GAApB,CAAwBzB,cAAc,CAACsB,eAAD,EAAkB,IAAIrB,qBAAJ,CAA0B,IAA1B,CAAlB,CAAtC;MACA,KAAKU,WAAL,GAAmB,KAAnB;IACH;;;;EAzD8BZ,qB"},"metadata":{},"sourceType":"module"}