{"ast":null,"code":"import _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed) {\n  var concurrent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;\n  return function (source) {\n    return source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n  };\n}\nexport var MergeScanOperator = /*#__PURE__*/function () {\n  function MergeScanOperator(accumulator, seed, concurrent) {\n    _classCallCheck(this, MergeScanOperator);\n\n    this.accumulator = accumulator;\n    this.seed = seed;\n    this.concurrent = concurrent;\n  }\n\n  _createClass(MergeScanOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n  }]);\n\n  return MergeScanOperator;\n}();\nexport var MergeScanSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(MergeScanSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(MergeScanSubscriber);\n\n  function MergeScanSubscriber(destination, accumulator, acc, concurrent) {\n    var _this;\n\n    _classCallCheck(this, MergeScanSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.accumulator = accumulator;\n    _this.acc = acc;\n    _this.concurrent = concurrent;\n    _this.hasValue = false;\n    _this.hasCompleted = false;\n    _this.buffer = [];\n    _this.active = 0;\n    _this.index = 0;\n    return _this;\n  }\n\n  _createClass(MergeScanSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      if (this.active < this.concurrent) {\n        var index = this.index++;\n        var destination = this.destination;\n        var ish;\n\n        try {\n          var accumulator = this.accumulator;\n          ish = accumulator(this.acc, value, index);\n        } catch (e) {\n          return destination.error(e);\n        }\n\n        this.active++;\n\n        this._innerSub(ish);\n      } else {\n        this.buffer.push(value);\n      }\n    }\n  }, {\n    key: \"_innerSub\",\n    value: function _innerSub(ish) {\n      var innerSubscriber = new SimpleInnerSubscriber(this);\n      var destination = this.destination;\n      destination.add(innerSubscriber);\n      var innerSubscription = innerSubscribe(ish, innerSubscriber);\n\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (this.active === 0 && this.buffer.length === 0) {\n        if (this.hasValue === false) {\n          this.destination.next(this.acc);\n        }\n\n        this.destination.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      var destination = this.destination;\n      this.acc = innerValue;\n      this.hasValue = true;\n      destination.next(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      var buffer = this.buffer;\n      this.active--;\n\n      if (buffer.length > 0) {\n        this._next(buffer.shift());\n      } else if (this.active === 0 && this.hasCompleted) {\n        if (this.hasValue === false) {\n          this.destination.next(this.acc);\n        }\n\n        this.destination.complete();\n      }\n    }\n  }]);\n\n  return MergeScanSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","mergeScan","accumulator","seed","concurrent","Number","POSITIVE_INFINITY","source","lift","MergeScanOperator","subscriber","subscribe","MergeScanSubscriber","destination","acc","hasValue","hasCompleted","buffer","active","index","value","ish","e","error","_innerSub","push","innerSubscriber","add","innerSubscription","length","next","complete","unsubscribe","innerValue","_next","shift"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/mergeScan.js"],"sourcesContent":["import { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function mergeScan(accumulator, seed, concurrent = Number.POSITIVE_INFINITY) {\n    return (source) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexport class MergeScanOperator {\n    constructor(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n}\nexport class MergeScanSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, accumulator, acc, concurrent) {\n        super(destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            const index = this.index++;\n            const destination = this.destination;\n            let ish;\n            try {\n                const { accumulator } = this;\n                ish = accumulator(this.acc, value, index);\n            }\n            catch (e) {\n                return destination.error(e);\n            }\n            this.active++;\n            this._innerSub(ish);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _innerSub(ish) {\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        const innerSubscription = innerSubscribe(ish, innerSubscriber);\n        if (innerSubscription !== innerSubscriber) {\n            destination.add(innerSubscription);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        const { destination } = this;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}