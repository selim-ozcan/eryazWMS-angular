{"ast":null,"code":"import _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project) {\n  var concurrent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.POSITIVE_INFINITY;\n  var scheduler = arguments.length > 2 ? arguments[2] : undefined;\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n  return function (source) {\n    return source.lift(new ExpandOperator(project, concurrent, scheduler));\n  };\n}\nexport var ExpandOperator = /*#__PURE__*/function () {\n  function ExpandOperator(project, concurrent, scheduler) {\n    _classCallCheck(this, ExpandOperator);\n\n    this.project = project;\n    this.concurrent = concurrent;\n    this.scheduler = scheduler;\n  }\n\n  _createClass(ExpandOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n  }]);\n\n  return ExpandOperator;\n}();\nexport var ExpandSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(ExpandSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(ExpandSubscriber);\n\n  function ExpandSubscriber(destination, project, concurrent, scheduler) {\n    var _this;\n\n    _classCallCheck(this, ExpandSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.project = project;\n    _this.concurrent = concurrent;\n    _this.scheduler = scheduler;\n    _this.index = 0;\n    _this.active = 0;\n    _this.hasCompleted = false;\n\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      _this.buffer = [];\n    }\n\n    return _this;\n  }\n\n  _createClass(ExpandSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var destination = this.destination;\n\n      if (destination.closed) {\n        this._complete();\n\n        return;\n      }\n\n      var index = this.index++;\n\n      if (this.active < this.concurrent) {\n        destination.next(value);\n\n        try {\n          var project = this.project;\n          var result = project(value, index);\n\n          if (!this.scheduler) {\n            this.subscribeToProjection(result, value, index);\n          } else {\n            var state = {\n              subscriber: this,\n              result: result,\n              value: value,\n              index: index\n            };\n            var _destination = this.destination;\n\n            _destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n          }\n        } catch (e) {\n          destination.error(e);\n        }\n      } else {\n        this.buffer.push(value);\n      }\n    }\n  }, {\n    key: \"subscribeToProjection\",\n    value: function subscribeToProjection(result, value, index) {\n      this.active++;\n      var destination = this.destination;\n      destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      this.hasCompleted = true;\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n\n      this.unsubscribe();\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(innerValue) {\n      this._next(innerValue);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      var buffer = this.buffer;\n      this.active--;\n\n      if (buffer && buffer.length > 0) {\n        this._next(buffer.shift());\n      }\n\n      if (this.hasCompleted && this.active === 0) {\n        this.destination.complete();\n      }\n    }\n  }], [{\n    key: \"dispatch\",\n    value: function dispatch(arg) {\n      var subscriber = arg.subscriber,\n          result = arg.result,\n          value = arg.value,\n          index = arg.index;\n      subscriber.subscribeToProjection(result, value, index);\n    }\n  }]);\n\n  return ExpandSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","expand","project","concurrent","Number","POSITIVE_INFINITY","scheduler","source","lift","ExpandOperator","subscriber","subscribe","ExpandSubscriber","destination","index","active","hasCompleted","buffer","value","closed","_complete","next","result","subscribeToProjection","state","add","schedule","dispatch","e","error","push","complete","unsubscribe","innerValue","_next","length","shift","arg"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/expand.js"],"sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\nexport class ExpandSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            try {\n                const { project } = this;\n                const result = project(value, index);\n                if (!this.scheduler) {\n                    this.subscribeToProjection(result, value, index);\n                }\n                else {\n                    const state = { subscriber: this, result, value, index };\n                    const destination = this.destination;\n                    destination.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n                }\n            }\n            catch (e) {\n                destination.error(e);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        const destination = this.destination;\n        destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n        this.unsubscribe();\n    }\n    notifyNext(innerValue) {\n        this._next(innerValue);\n    }\n    notifyComplete() {\n        const buffer = this.buffer;\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}