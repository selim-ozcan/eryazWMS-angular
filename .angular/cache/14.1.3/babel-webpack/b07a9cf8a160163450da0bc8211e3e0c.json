{"ast":null,"code":"import _assertThisInitialized from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n  return function (source) {\n    return source.lift(new WindowToggleOperator(openings, closingSelector));\n  };\n}\n\nvar WindowToggleOperator = /*#__PURE__*/function () {\n  function WindowToggleOperator(openings, closingSelector) {\n    _classCallCheck(this, WindowToggleOperator);\n\n    this.openings = openings;\n    this.closingSelector = closingSelector;\n  }\n\n  _createClass(WindowToggleOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n  }]);\n\n  return WindowToggleOperator;\n}();\n\nvar WindowToggleSubscriber = /*#__PURE__*/function (_OuterSubscriber) {\n  _inherits(WindowToggleSubscriber, _OuterSubscriber);\n\n  var _super = _createSuper(WindowToggleSubscriber);\n\n  function WindowToggleSubscriber(destination, openings, closingSelector) {\n    var _this;\n\n    _classCallCheck(this, WindowToggleSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.openings = openings;\n    _this.closingSelector = closingSelector;\n    _this.contexts = [];\n\n    _this.add(_this.openSubscription = subscribeToResult(_assertThisInitialized(_this), openings, openings));\n\n    return _this;\n  }\n\n  _createClass(WindowToggleSubscriber, [{\n    key: \"_next\",\n    value: function _next(value) {\n      var contexts = this.contexts;\n\n      if (contexts) {\n        var len = contexts.length;\n\n        for (var i = 0; i < len; i++) {\n          contexts[i].window.next(value);\n        }\n      }\n    }\n  }, {\n    key: \"_error\",\n    value: function _error(err) {\n      var contexts = this.contexts;\n      this.contexts = null;\n\n      if (contexts) {\n        var len = contexts.length;\n        var index = -1;\n\n        while (++index < len) {\n          var context = contexts[index];\n          context.window.error(err);\n          context.subscription.unsubscribe();\n        }\n      }\n\n      _get(_getPrototypeOf(WindowToggleSubscriber.prototype), \"_error\", this).call(this, err);\n    }\n  }, {\n    key: \"_complete\",\n    value: function _complete() {\n      var contexts = this.contexts;\n      this.contexts = null;\n\n      if (contexts) {\n        var len = contexts.length;\n        var index = -1;\n\n        while (++index < len) {\n          var context = contexts[index];\n          context.window.complete();\n          context.subscription.unsubscribe();\n        }\n      }\n\n      _get(_getPrototypeOf(WindowToggleSubscriber.prototype), \"_complete\", this).call(this);\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var contexts = this.contexts;\n      this.contexts = null;\n\n      if (contexts) {\n        var len = contexts.length;\n        var index = -1;\n\n        while (++index < len) {\n          var context = contexts[index];\n          context.window.unsubscribe();\n          context.subscription.unsubscribe();\n        }\n      }\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n      if (outerValue === this.openings) {\n        var closingNotifier;\n\n        try {\n          var closingSelector = this.closingSelector;\n          closingNotifier = closingSelector(innerValue);\n        } catch (e) {\n          return this.error(e);\n        }\n\n        var window = new Subject();\n        var subscription = new Subscription();\n        var context = {\n          window: window,\n          subscription: subscription\n        };\n        this.contexts.push(context);\n        var innerSubscription = subscribeToResult(this, closingNotifier, context);\n\n        if (innerSubscription.closed) {\n          this.closeWindow(this.contexts.length - 1);\n        } else {\n          innerSubscription.context = context;\n          subscription.add(innerSubscription);\n        }\n\n        this.destination.next(window);\n      } else {\n        this.closeWindow(this.contexts.indexOf(outerValue));\n      }\n    }\n  }, {\n    key: \"notifyError\",\n    value: function notifyError(err) {\n      this.error(err);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete(inner) {\n      if (inner !== this.openSubscription) {\n        this.closeWindow(this.contexts.indexOf(inner.context));\n      }\n    }\n  }, {\n    key: \"closeWindow\",\n    value: function closeWindow(index) {\n      if (index === -1) {\n        return;\n      }\n\n      var contexts = this.contexts;\n      var context = contexts[index];\n      var window = context.window,\n          subscription = context.subscription;\n      contexts.splice(index, 1);\n      window.complete();\n      subscription.unsubscribe();\n    }\n  }]);\n\n  return WindowToggleSubscriber;\n}(OuterSubscriber);","map":{"version":3,"names":["Subject","Subscription","OuterSubscriber","subscribeToResult","windowToggle","openings","closingSelector","source","lift","WindowToggleOperator","subscriber","subscribe","WindowToggleSubscriber","destination","contexts","add","openSubscription","value","len","length","i","window","next","err","index","context","error","subscription","unsubscribe","complete","outerValue","innerValue","outerIndex","innerIndex","innerSub","closingNotifier","e","push","innerSubscription","closed","closeWindow","indexOf","inner","splice"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/windowToggle.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowToggle(openings, closingSelector) {\n    return (source) => source.lift(new WindowToggleOperator(openings, closingSelector));\n}\nclass WindowToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\nclass WindowToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    _next(value) {\n        const { contexts } = this;\n        if (contexts) {\n            const len = contexts.length;\n            for (let i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    }\n    _error(err) {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        super._error(err);\n    }\n    _complete() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        super._complete();\n    }\n    _unsubscribe() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            let closingNotifier;\n            try {\n                const { closingSelector } = this;\n                closingNotifier = closingSelector(innerValue);\n            }\n            catch (e) {\n                return this.error(e);\n            }\n            const window = new Subject();\n            const subscription = new Subscription();\n            const context = { window, subscription };\n            this.contexts.push(context);\n            const innerSubscription = subscribeToResult(this, closingNotifier, context);\n            if (innerSubscription.closed) {\n                this.closeWindow(this.contexts.length - 1);\n            }\n            else {\n                innerSubscription.context = context;\n                subscription.add(innerSubscription);\n            }\n            this.destination.next(window);\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    }\n    notifyError(err) {\n        this.error(err);\n    }\n    notifyComplete(inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    }\n    closeWindow(index) {\n        if (index === -1) {\n            return;\n        }\n        const { contexts } = this;\n        const context = contexts[index];\n        const { window, subscription } = context;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}