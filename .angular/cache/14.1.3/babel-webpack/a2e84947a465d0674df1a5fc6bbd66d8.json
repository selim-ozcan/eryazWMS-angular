{"ast":null,"code":"import _get from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n  return function (source) {\n    return source.lift(new RetryWhenOperator(notifier, source));\n  };\n}\n\nvar RetryWhenOperator = /*#__PURE__*/function () {\n  function RetryWhenOperator(notifier, source) {\n    _classCallCheck(this, RetryWhenOperator);\n\n    this.notifier = notifier;\n    this.source = source;\n  }\n\n  _createClass(RetryWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n  }]);\n\n  return RetryWhenOperator;\n}();\n\nvar RetryWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(RetryWhenSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(RetryWhenSubscriber);\n\n  function RetryWhenSubscriber(destination, notifier, source) {\n    var _this;\n\n    _classCallCheck(this, RetryWhenSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.notifier = notifier;\n    _this.source = source;\n    return _this;\n  }\n\n  _createClass(RetryWhenSubscriber, [{\n    key: \"error\",\n    value: function error(err) {\n      if (!this.isStopped) {\n        var errors = this.errors;\n        var retries = this.retries;\n        var retriesSubscription = this.retriesSubscription;\n\n        if (!retries) {\n          errors = new Subject();\n\n          try {\n            var notifier = this.notifier;\n            retries = notifier(errors);\n          } catch (e) {\n            return _get(_getPrototypeOf(RetryWhenSubscriber.prototype), \"error\", this).call(this, e);\n          }\n\n          retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n        } else {\n          this.errors = undefined;\n          this.retriesSubscription = undefined;\n        }\n\n        this._unsubscribeAndRecycle();\n\n        this.errors = errors;\n        this.retries = retries;\n        this.retriesSubscription = retriesSubscription;\n        errors.next(err);\n      }\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var errors = this.errors,\n          retriesSubscription = this.retriesSubscription;\n\n      if (errors) {\n        errors.unsubscribe();\n        this.errors = undefined;\n      }\n\n      if (retriesSubscription) {\n        retriesSubscription.unsubscribe();\n        this.retriesSubscription = undefined;\n      }\n\n      this.retries = undefined;\n    }\n  }, {\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      var _unsubscribe = this._unsubscribe;\n      this._unsubscribe = null;\n\n      this._unsubscribeAndRecycle();\n\n      this._unsubscribe = _unsubscribe;\n      this.source.subscribe(this);\n    }\n  }]);\n\n  return RetryWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","retryWhen","notifier","source","lift","RetryWhenOperator","subscriber","subscribe","RetryWhenSubscriber","destination","err","isStopped","errors","retries","retriesSubscription","e","undefined","_unsubscribeAndRecycle","next","unsubscribe","_unsubscribe"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/retryWhen.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\nclass RetryWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                try {\n                    const { notifier } = this;\n                    retries = notifier(errors);\n                }\n                catch (e) {\n                    return super.error(e);\n                }\n                retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n            }\n            else {\n                this.errors = undefined;\n                this.retriesSubscription = undefined;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    notifyNext() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;EAChC,OAAO,UAACC,MAAD;IAAA,OAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,iBAAJ,CAAsBH,QAAtB,EAAgCC,MAAhC,CAAZ,CAAZ;EAAA,CAAP;AACH;;IACKE,iB;EACF,2BAAYH,QAAZ,EAAsBC,MAAtB,EAA8B;IAAA;;IAC1B,KAAKD,QAAL,GAAgBA,QAAhB;IACA,KAAKC,MAAL,GAAcA,MAAd;EACH;;;;WACD,cAAKG,UAAL,EAAiBH,MAAjB,EAAyB;MACrB,OAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,mBAAJ,CAAwBF,UAAxB,EAAoC,KAAKJ,QAAzC,EAAmD,KAAKC,MAAxD,CAAjB,CAAP;IACH;;;;;;IAECK,mB;;;;;EACF,6BAAYC,WAAZ,EAAyBP,QAAzB,EAAmCC,MAAnC,EAA2C;IAAA;;IAAA;;IACvC,0BAAMM,WAAN;IACA,MAAKP,QAAL,GAAgBA,QAAhB;IACA,MAAKC,MAAL,GAAcA,MAAd;IAHuC;EAI1C;;;;WACD,eAAMO,GAAN,EAAW;MACP,IAAI,CAAC,KAAKC,SAAV,EAAqB;QACjB,IAAIC,MAAM,GAAG,KAAKA,MAAlB;QACA,IAAIC,OAAO,GAAG,KAAKA,OAAnB;QACA,IAAIC,mBAAmB,GAAG,KAAKA,mBAA/B;;QACA,IAAI,CAACD,OAAL,EAAc;UACVD,MAAM,GAAG,IAAIf,OAAJ,EAAT;;UACA,IAAI;YACA,IAAQK,QAAR,GAAqB,IAArB,CAAQA,QAAR;YACAW,OAAO,GAAGX,QAAQ,CAACU,MAAD,CAAlB;UACH,CAHD,CAIA,OAAOG,CAAP,EAAU;YACN,sFAAmBA,CAAnB;UACH;;UACDD,mBAAmB,GAAGf,cAAc,CAACc,OAAD,EAAU,IAAIb,qBAAJ,CAA0B,IAA1B,CAAV,CAApC;QACH,CAVD,MAWK;UACD,KAAKY,MAAL,GAAcI,SAAd;UACA,KAAKF,mBAAL,GAA2BE,SAA3B;QACH;;QACD,KAAKC,sBAAL;;QACA,KAAKL,MAAL,GAAcA,MAAd;QACA,KAAKC,OAAL,GAAeA,OAAf;QACA,KAAKC,mBAAL,GAA2BA,mBAA3B;QACAF,MAAM,CAACM,IAAP,CAAYR,GAAZ;MACH;IACJ;;;WACD,wBAAe;MACX,IAAQE,MAAR,GAAwC,IAAxC,CAAQA,MAAR;MAAA,IAAgBE,mBAAhB,GAAwC,IAAxC,CAAgBA,mBAAhB;;MACA,IAAIF,MAAJ,EAAY;QACRA,MAAM,CAACO,WAAP;QACA,KAAKP,MAAL,GAAcI,SAAd;MACH;;MACD,IAAIF,mBAAJ,EAAyB;QACrBA,mBAAmB,CAACK,WAApB;QACA,KAAKL,mBAAL,GAA2BE,SAA3B;MACH;;MACD,KAAKH,OAAL,GAAeG,SAAf;IACH;;;WACD,sBAAa;MACT,IAAQI,YAAR,GAAyB,IAAzB,CAAQA,YAAR;MACA,KAAKA,YAAL,GAAoB,IAApB;;MACA,KAAKH,sBAAL;;MACA,KAAKG,YAAL,GAAoBA,YAApB;MACA,KAAKjB,MAAL,CAAYI,SAAZ,CAAsB,IAAtB;IACH;;;;EAnD6BT,qB"},"metadata":{},"sourceType":"module"}