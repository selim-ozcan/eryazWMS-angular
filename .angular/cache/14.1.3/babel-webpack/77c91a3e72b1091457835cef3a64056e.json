{"ast":null,"code":"import _toConsumableArray from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Injector, Renderer2, ElementRef } from '@angular/core';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction AbpValidationSummaryComponent_ng_container_0_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var validationError_r2 = i0.ɵɵnextContext().$implicit;\n    var ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"d-block\", !!ctx_r3.control.errors[validationError_r2.name]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getValidationErrorMessage(validationError_r2), \" \");\n  }\n}\n\nfunction AbpValidationSummaryComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AbpValidationSummaryComponent_ng_container_0_ng_container_1_span_1_Template, 2, 3, \"span\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var validationError_r2 = ctx.$implicit;\n    var ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !!ctx_r1.control.errors[validationError_r2.name]);\n  }\n}\n\nfunction AbpValidationSummaryComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AbpValidationSummaryComponent_ng_container_0_ng_container_1_Template, 2, 1, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.validationErrors);\n  }\n}\n\nexport var AbpValidationSummaryComponent = /*#__PURE__*/function (_AppComponentBase) {\n  _inherits(AbpValidationSummaryComponent, _AppComponentBase);\n\n  var _super = _createSuper(AbpValidationSummaryComponent);\n\n  function AbpValidationSummaryComponent(injector, _renderer) {\n    var _this;\n\n    _classCallCheck(this, AbpValidationSummaryComponent);\n\n    _this = _super.call(this, injector);\n    _this._renderer = _renderer;\n    _this.defaultValidationErrors = [{\n      name: 'required',\n      localizationKey: 'ThisFieldIsRequired'\n    }, {\n      name: 'minlength',\n      localizationKey: 'PleaseEnterAtLeastNCharacter',\n      propertyKey: 'requiredLength'\n    }, {\n      name: 'maxlength',\n      localizationKey: 'PleaseEnterNoMoreThanNCharacter',\n      propertyKey: 'requiredLength'\n    }, {\n      name: 'email',\n      localizationKey: 'InvalidEmailAddress'\n    }, {\n      name: 'pattern',\n      localizationKey: 'InvalidPattern',\n      propertyKey: 'requiredPattern'\n    }, {\n      name: 'validateEqual',\n      localizationKey: 'PairsDoNotMatch'\n    }];\n    _this.validationErrors = _this.defaultValidationErrors;\n    return _this;\n  }\n\n  _createClass(AbpValidationSummaryComponent, [{\n    key: \"customValidationErrors\",\n    set: function set(val) {\n      if (val && val.length > 0) {\n        var defaults = this.defaultValidationErrors.filter(function (defaultValidationError) {\n          return !val.find(function (customValidationError) {\n            return customValidationError.name === defaultValidationError.name;\n          });\n        });\n        this.validationErrors = [].concat(_toConsumableArray(defaults), _toConsumableArray(val));\n      }\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      if (this.controlEl) {\n        this.control.valueChanges.subscribe(function () {\n          if (_this2.control.valid && (_this2.control.dirty || _this2.control.touched)) {\n            _this2._renderer.removeClass(_this2.controlEl, 'is-invalid');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"getValidationErrorMessage\",\n    value: function getValidationErrorMessage(error) {\n      if (this.controlEl) {\n        this._renderer.addClass(this.controlEl, 'is-invalid');\n      }\n\n      var propertyValue = this.control.errors[error.name][error.propertyKey];\n      return !!propertyValue ? this.l(error.localizationKey, propertyValue) : this.l(error.localizationKey);\n    }\n  }]);\n\n  return AbpValidationSummaryComponent;\n}(AppComponentBase);\n\nAbpValidationSummaryComponent.ɵfac = function AbpValidationSummaryComponent_Factory(t) {\n  return new (t || AbpValidationSummaryComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\n\nAbpValidationSummaryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AbpValidationSummaryComponent,\n  selectors: [[\"abp-validation-summary\"]],\n  inputs: {\n    control: \"control\",\n    controlEl: \"controlEl\",\n    customValidationErrors: \"customValidationErrors\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"error invalid-feedback\", 3, \"d-block\", 4, \"ngIf\"], [1, \"error\", \"invalid-feedback\"]],\n  template: function AbpValidationSummaryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AbpValidationSummaryComponent_ng_container_0_Template, 2, 1, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.control.invalid && (ctx.control.dirty || ctx.control.touched));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;AAAA,SAGEA,QAHF,EAIEC,SAJF,EAKEC,UALF,QAOO,eAPP;AASA,SAASC,gBAAT,QAAiC,4BAAjC;;;;;;ICPIC;IAKEA;IACFA;;;;;;IAHEA;IAEAA;IAAAA;;;;;;IANJA;IACEA;IAOFA;;;;;;IANKA;IAAAA;;;;;;IAHPA;IACEA;IASFA;;;;;IAT4CA;IAAAA;;;;ADe5C,WAAaC,6BAAb;EAAA;;EAAA;;EAiCE,uCAAYC,QAAZ,EAAuCC,SAAvC,EAA2D;IAAA;;IAAA;;IACzD,0BAAMD,QAAN;IADqC;IA/BvC,gCAAyD,CACvD;MAAEE,IAAI,EAAE,UAAR;MAAoBC,eAAe,EAAE;IAArC,CADuD,EAEvD;MACED,IAAI,EAAE,WADR;MAEEC,eAAe,EAAE,8BAFnB;MAGEC,WAAW,EAAE;IAHf,CAFuD,EAOvD;MACEF,IAAI,EAAE,WADR;MAEEC,eAAe,EAAE,iCAFnB;MAGEC,WAAW,EAAE;IAHf,CAPuD,EAYvD;MACEF,IAAI,EAAE,OADR;MAEEC,eAAe,EAAE;IAFnB,CAZuD,EAgBvD;MACED,IAAI,EAAE,SADR;MAEEC,eAAe,EAAE,gBAFnB;MAGEC,WAAW,EAAE;IAHf,CAhBuD,EAqBvD;MACEF,IAAI,EAAE,eADR;MAEEC,eAAe,EAAE;IAFnB,CArBuD,CAAzD;IA0BA,yBAAyC,MAAKE,uBAA9C;IAK2D;EAE1D;;EAnCH;IAAA;IAAA,KAqCE,aAAoCC,GAApC,EAA6D;MAC3D,IAAIA,GAAG,IAAIA,GAAG,CAACC,MAAJ,GAAa,CAAxB,EAA2B;QACzB,IAAMC,QAAQ,GAAG,KAAKH,uBAAL,CAA6BI,MAA7B,CACf,UAACC,sBAAD;UAAA,OACE,CAACJ,GAAG,CAACK,IAAJ,CACC,UAACC,qBAAD;YAAA,OACEA,qBAAqB,CAACV,IAAtB,KAA+BQ,sBAAsB,CAACR,IADxD;UAAA,CADD,CADH;QAAA,CADe,CAAjB;QAOA,KAAKW,gBAAL,gCAAkDL,QAAlD,sBAA+DF,GAA/D;MACD;IACF;EAhDH;IAAA;IAAA,OAkDE,oBAAQ;MAAA;;MACN,IAAI,KAAKQ,SAAT,EAAoB;QAClB,KAAKC,OAAL,CAAaC,YAAb,CAA0BC,SAA1B,CAAoC,YAAK;UACvC,IACE,MAAI,CAACF,OAAL,CAAaG,KAAb,KACC,MAAI,CAACH,OAAL,CAAaI,KAAb,IAAsB,MAAI,CAACJ,OAAL,CAAaK,OADpC,CADF,EAGE;YACA,MAAI,CAACnB,SAAL,CAAeoB,WAAf,CAA2B,MAAI,CAACP,SAAhC,EAA2C,YAA3C;UACD;QACF,CAPD;MAQD;IACF;EA7DH;IAAA;IAAA,OA+DE,mCAA0BQ,KAA1B,EAAmD;MACjD,IAAI,KAAKR,SAAT,EAAoB;QAClB,KAAKb,SAAL,CAAesB,QAAf,CAAwB,KAAKT,SAA7B,EAAwC,YAAxC;MACD;;MAED,IAAMU,aAAa,GAAG,KAAKT,OAAL,CAAaU,MAAb,CAAoBH,KAAK,CAACpB,IAA1B,EAAgCoB,KAAK,CAAClB,WAAtC,CAAtB;MACA,OAAO,CAAC,CAACoB,aAAF,GACH,KAAKE,CAAL,CAAOJ,KAAK,CAACnB,eAAb,EAA8BqB,aAA9B,CADG,GAEH,KAAKE,CAAL,CAAOJ,KAAK,CAACnB,eAAb,CAFJ;IAGD;EAxEH;;EAAA;AAAA,EAAmDN,gBAAnD;;;mBAAaE,+BAA6BD;AAAA;;;QAA7BC;EAA6B4B;EAAAC;IAAAb;IAAAD;IAAAe;EAAA;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MChB1CpC;;;;MAAeA","names":["Injector","Renderer2","ElementRef","AppComponentBase","i0","AbpValidationSummaryComponent","injector","_renderer","name","localizationKey","propertyKey","defaultValidationErrors","val","length","defaults","filter","defaultValidationError","find","customValidationError","validationErrors","controlEl","control","valueChanges","subscribe","valid","dirty","touched","removeClass","error","addClass","propertyValue","errors","l","selectors","inputs","customValidationErrors","features","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/components/validation/abp-validation.summary.component.ts","/Users/selim/repo/eryaz/angular/src/shared/components/validation/abp-validation.summary.component.html"],"sourcesContent":["import {\n  Component,\n  Input,\n  Injector,\n  Renderer2,\n  ElementRef,\n  OnInit\n} from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { AbpValidationError } from './abp-validation.api';\n\n@Component({\n  selector: 'abp-validation-summary',\n  templateUrl: './abp-validation.summary.component.html'\n})\nexport class AbpValidationSummaryComponent extends AppComponentBase implements OnInit {\n\n  defaultValidationErrors: Partial<AbpValidationError>[] = [\n    { name: 'required', localizationKey: 'ThisFieldIsRequired' },\n    {\n      name: 'minlength',\n      localizationKey: 'PleaseEnterAtLeastNCharacter',\n      propertyKey: 'requiredLength',\n    },\n    {\n      name: 'maxlength',\n      localizationKey: 'PleaseEnterNoMoreThanNCharacter',\n      propertyKey: 'requiredLength',\n    },\n    {\n      name: 'email',\n      localizationKey: 'InvalidEmailAddress',\n    },\n    {\n      name: 'pattern',\n      localizationKey: 'InvalidPattern',\n      propertyKey: 'requiredPattern',\n    },\n    {\n      name: 'validateEqual',\n      localizationKey: 'PairsDoNotMatch',\n    },\n  ];\n  validationErrors = <AbpValidationError[]>this.defaultValidationErrors;\n\n  @Input() control: AbstractControl;\n  @Input() controlEl: ElementRef;\n\n  constructor(injector: Injector, public _renderer: Renderer2) {\n    super(injector);\n  }\n\n  @Input() set customValidationErrors(val: AbpValidationError[]) {\n    if (val && val.length > 0) {\n      const defaults = this.defaultValidationErrors.filter(\n        (defaultValidationError) =>\n          !val.find(\n            (customValidationError) =>\n              customValidationError.name === defaultValidationError.name\n          )\n      );\n      this.validationErrors = <AbpValidationError[]>[...defaults, ...val];\n    }\n  }\n\n  ngOnInit() {\n    if (this.controlEl) {\n      this.control.valueChanges.subscribe(() => {\n        if (\n          this.control.valid &&\n          (this.control.dirty || this.control.touched)\n        ) {\n          this._renderer.removeClass(this.controlEl, 'is-invalid');\n        }\n      });\n    }\n  }\n\n  getValidationErrorMessage(error: AbpValidationError): string {\n    if (this.controlEl) {\n      this._renderer.addClass(this.controlEl, 'is-invalid');\n    }\n\n    const propertyValue = this.control.errors[error.name][error.propertyKey];\n    return !!propertyValue\n      ? this.l(error.localizationKey, propertyValue)\n      : this.l(error.localizationKey);\n  }\n}\n","<ng-container *ngIf=\"control.invalid && (control.dirty || control.touched)\">\n  <ng-container *ngFor=\"let validationError of validationErrors\">\n    <span\n      *ngIf=\"!!this.control.errors[validationError.name]\"\n      class=\"error invalid-feedback\"\n      [class.d-block]=\"!!this.control.errors[validationError.name]\"\n    >\n      {{ getValidationErrorMessage(validationError) }}\n    </span>\n  </ng-container>\n</ng-container>\n"]},"metadata":{},"sourceType":"module"}