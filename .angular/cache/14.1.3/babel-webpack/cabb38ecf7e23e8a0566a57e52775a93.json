{"ast":null,"code":"import _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared/service-proxies/service-proxies\";\nimport * as i2 from \"abp-ng2-module\";\nexport var AppSessionService = /*#__PURE__*/function () {\n  function AppSessionService(_sessionService, _abpMultiTenancyService) {\n    _classCallCheck(this, AppSessionService);\n\n    this._sessionService = _sessionService;\n    this._abpMultiTenancyService = _abpMultiTenancyService;\n  }\n\n  _createClass(AppSessionService, [{\n    key: \"application\",\n    get: function get() {\n      return this._application;\n    }\n  }, {\n    key: \"user\",\n    get: function get() {\n      return this._user;\n    }\n  }, {\n    key: \"userId\",\n    get: function get() {\n      return this.user ? this.user.id : null;\n    }\n  }, {\n    key: \"tenant\",\n    get: function get() {\n      return this._tenant;\n    }\n  }, {\n    key: \"tenantId\",\n    get: function get() {\n      return this.tenant ? this.tenant.id : null;\n    }\n  }, {\n    key: \"getShownLoginName\",\n    value: function getShownLoginName() {\n      var userName = this._user.userName;\n\n      if (!this._abpMultiTenancyService.isEnabled) {\n        return userName;\n      }\n\n      return (this._tenant ? this._tenant.tenancyName : '.') + '\\\\' + userName;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._sessionService.getCurrentLoginInformations().toPromise().then(function (result) {\n          _this._application = result.application;\n          _this._user = result.user;\n          _this._tenant = result.tenant;\n          resolve(true);\n        }, function (err) {\n          reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"changeTenantIfNeeded\",\n    value: function changeTenantIfNeeded(tenantId) {\n      if (this.isCurrentTenant(tenantId)) {\n        return false;\n      }\n\n      abp.multiTenancy.setTenantIdCookie(tenantId);\n      location.reload();\n      return true;\n    }\n  }, {\n    key: \"isCurrentTenant\",\n    value: function isCurrentTenant(tenantId) {\n      if (!tenantId && this.tenant) {\n        return false;\n      } else if (tenantId && (!this.tenant || this.tenant.id !== tenantId)) {\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return AppSessionService;\n}();\n\nAppSessionService.ɵfac = function AppSessionService_Factory(t) {\n  return new (t || AppSessionService)(i0.ɵɵinject(i1.SessionServiceProxy), i0.ɵɵinject(i2.AbpMultiTenancyService));\n};\n\nAppSessionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppSessionService,\n  factory: AppSessionService.ɵfac\n});","map":{"version":3,"mappings":";;;;;AAWA,WAAaA,iBAAb;EAMI,2BACYC,eADZ,EAEYC,uBAFZ,EAE2D;IAAA;;IAD/C;IACA;EACX;;EATL;IAAA;IAAA,KAWI,eAAe;MACX,OAAO,KAAKC,YAAZ;IACH;EAbL;IAAA;IAAA,KAeI,eAAQ;MACJ,OAAO,KAAKC,KAAZ;IACH;EAjBL;IAAA;IAAA,KAmBI,eAAU;MACN,OAAO,KAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUC,EAAtB,GAA2B,IAAlC;IACH;EArBL;IAAA;IAAA,KAuBI,eAAU;MACN,OAAO,KAAKC,OAAZ;IACH;EAzBL;IAAA;IAAA,KA2BI,eAAY;MACR,OAAO,KAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYF,EAA1B,GAA+B,IAAtC;IACH;EA7BL;IAAA;IAAA,OA+BI,6BAAiB;MACb,IAAMG,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAA5B;;MACA,IAAI,CAAC,KAAKP,uBAAL,CAA6BQ,SAAlC,EAA6C;QACzC,OAAOD,QAAP;MACH;;MAED,OAAO,CAAC,KAAKF,OAAL,GAAe,KAAKA,OAAL,CAAaI,WAA5B,GAA0C,GAA3C,IAAkD,IAAlD,GAAyDF,QAAhE;IACH;EAtCL;IAAA;IAAA,OAwCI,gBAAI;MAAA;;MACA,OAAO,IAAIG,OAAJ,CAAqB,UAACC,OAAD,EAAUC,MAAV,EAAoB;QAC5C,KAAI,CAACb,eAAL,CAAqBc,2BAArB,GAAmDC,SAAnD,GAA+DC,IAA/D,CAAoE,UAACC,MAAD,EAA8C;UAC9G,KAAI,CAACf,YAAL,GAAoBe,MAAM,CAACC,WAA3B;UACA,KAAI,CAACf,KAAL,GAAac,MAAM,CAACb,IAApB;UACA,KAAI,CAACE,OAAL,GAAeW,MAAM,CAACV,MAAtB;UAEAK,OAAO,CAAC,IAAD,CAAP;QACH,CAND,EAMG,UAACO,GAAD,EAAQ;UACPN,MAAM,CAACM,GAAD,CAAN;QACH,CARD;MASH,CAVM,CAAP;IAWH;EApDL;IAAA;IAAA,OAsDI,8BAAqBC,QAArB,EAAsC;MAClC,IAAI,KAAKC,eAAL,CAAqBD,QAArB,CAAJ,EAAoC;QAChC,OAAO,KAAP;MACH;;MAEDE,GAAG,CAACC,YAAJ,CAAiBC,iBAAjB,CAAmCJ,QAAnC;MACAK,QAAQ,CAACC,MAAT;MACA,OAAO,IAAP;IACH;EA9DL;IAAA;IAAA,OAgEY,yBAAgBN,QAAhB,EAAiC;MACrC,IAAI,CAACA,QAAD,IAAa,KAAKb,MAAtB,EAA8B;QAC1B,OAAO,KAAP;MACH,CAFD,MAEO,IAAIa,QAAQ,KAAK,CAAC,KAAKb,MAAN,IAAgB,KAAKA,MAAL,CAAYF,EAAZ,KAAmBe,QAAxC,CAAZ,EAA+D;QAClE,OAAO,KAAP;MACH;;MAED,OAAO,IAAP;IACH;EAxEL;;EAAA;AAAA;;;mBAAarB,mBAAiB4B;AAAA;;;SAAjB5B;EAAiB6B,SAAjB7B,iBAAiB","names":["AppSessionService","_sessionService","_abpMultiTenancyService","_application","_user","user","id","_tenant","tenant","userName","isEnabled","tenancyName","Promise","resolve","reject","getCurrentLoginInformations","toPromise","then","result","application","err","tenantId","isCurrentTenant","abp","multiTenancy","setTenantIdCookie","location","reload","i0","factory"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/session/app-session.service.ts"],"sourcesContent":["import { AbpMultiTenancyService } from 'abp-ng2-module';\nimport { Injectable } from '@angular/core';\nimport {\n    ApplicationInfoDto,\n    GetCurrentLoginInformationsOutput,\n    SessionServiceProxy,\n    TenantLoginInfoDto,\n    UserLoginInfoDto\n} from '@shared/service-proxies/service-proxies';\n\n@Injectable()\nexport class AppSessionService {\n\n    private _user: UserLoginInfoDto;\n    private _tenant: TenantLoginInfoDto;\n    private _application: ApplicationInfoDto;\n\n    constructor(\n        private _sessionService: SessionServiceProxy,\n        private _abpMultiTenancyService: AbpMultiTenancyService) {\n    }\n\n    get application(): ApplicationInfoDto {\n        return this._application;\n    }\n\n    get user(): UserLoginInfoDto {\n        return this._user;\n    }\n\n    get userId(): number {\n        return this.user ? this.user.id : null;\n    }\n\n    get tenant(): TenantLoginInfoDto {\n        return this._tenant;\n    }\n\n    get tenantId(): number {\n        return this.tenant ? this.tenant.id : null;\n    }\n\n    getShownLoginName(): string {\n        const userName = this._user.userName;\n        if (!this._abpMultiTenancyService.isEnabled) {\n            return userName;\n        }\n\n        return (this._tenant ? this._tenant.tenancyName : '.') + '\\\\' + userName;\n    }\n\n    init(): Promise<boolean> {\n        return new Promise<boolean>((resolve, reject) => {\n            this._sessionService.getCurrentLoginInformations().toPromise().then((result: GetCurrentLoginInformationsOutput) => {\n                this._application = result.application;\n                this._user = result.user;\n                this._tenant = result.tenant;\n\n                resolve(true);\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n    changeTenantIfNeeded(tenantId?: number): boolean {\n        if (this.isCurrentTenant(tenantId)) {\n            return false;\n        }\n\n        abp.multiTenancy.setTenantIdCookie(tenantId);\n        location.reload();\n        return true;\n    }\n\n    private isCurrentTenant(tenantId?: number) {\n        if (!tenantId && this.tenant) {\n            return false;\n        } else if (tenantId && (!this.tenant || this.tenant.id !== tenantId)) {\n            return false;\n        }\n\n        return true;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}