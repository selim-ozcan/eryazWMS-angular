{"ast":null,"code":"import _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Injector } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport { ChangePasswordDto } from '@shared/service-proxies/service-proxies';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared/service-proxies/service-proxies\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../../shared/components/validation/abp-validation.summary.component\";\nimport * as i5 from \"../../../shared/directives/equal-validator.directive\";\nimport * as i6 from \"@shared/pipes/localize.pipe\";\nexport var ChangePasswordComponent = /*#__PURE__*/function (_AppComponentBase) {\n  _inherits(ChangePasswordComponent, _AppComponentBase);\n\n  var _super = _createSuper(ChangePasswordComponent);\n\n  function ChangePasswordComponent(injector, userServiceProxy, router) {\n    var _this;\n\n    _classCallCheck(this, ChangePasswordComponent);\n\n    _this = _super.call(this, injector);\n    _this.userServiceProxy = userServiceProxy;\n    _this.router = router;\n    _this.saving = false;\n    _this.changePasswordDto = new ChangePasswordDto();\n    _this.newPasswordValidationErrors = [{\n      name: 'pattern',\n      localizationKey: 'PasswordsMustBeAtLeast8CharactersContainLowercaseUppercaseNumber'\n    }];\n    _this.confirmNewPasswordValidationErrors = [{\n      name: 'validateEqual',\n      localizationKey: 'PasswordsDoNotMatch'\n    }];\n    return _this;\n  }\n\n  _createClass(ChangePasswordComponent, [{\n    key: \"changePassword\",\n    value: function changePassword() {\n      var _this2 = this;\n\n      this.saving = true;\n      this.userServiceProxy.changePassword(this.changePasswordDto).pipe(finalize(function () {\n        _this2.saving = false;\n      })).subscribe(function (success) {\n        if (success) {\n          abp.message.success('Password changed successfully', 'Success');\n\n          _this2.router.navigate(['/']);\n        }\n      });\n    }\n  }]);\n\n  return ChangePasswordComponent;\n}(AppComponentBase);\n\nChangePasswordComponent.ɵfac = function ChangePasswordComponent_Factory(t) {\n  return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i1.UserServiceProxy), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nChangePasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChangePasswordComponent,\n  selectors: [[\"ng-component\"]],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 46,\n  vars: 27,\n  consts: [[1, \"content-header\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-6\"], [1, \"content\", \"px-2\"], [1, \"card\"], [\"autocomplete\", \"off\", 1, \"form-horizontal\", 3, \"ngSubmit\"], [\"changePasswordForm\", \"ngForm\"], [1, \"card-body\"], [1, \"modal-body\"], [1, \"form-group\", \"row\", \"required\"], [\"for\", \"currentPassword\", 1, \"col-md-3\", \"col-form-label\"], [1, \"col-md-9\"], [\"type\", \"password\", \"name\", \"currentPassword\", \"id\", \"currentPassword\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"32\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"currentPasswordModel\", \"ngModel\", \"currentPasswordEl\", \"\"], [3, \"control\", \"controlEl\"], [\"for\", \"newPassword\", 1, \"col-md-3\", \"col-form-label\"], [\"type\", \"password\", \"name\", \"newPassword\", \"id\", \"newPassword\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"32\", \"validateEqual\", \"confirmNewPassword\", \"reverse\", \"true\", \"pattern\", \"(?=^.{8,}$)(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s)[0-9a-zA-Z!@#$%^&*()]*$\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"newPasswordModel\", \"ngModel\", \"newPasswordEl\", \"\"], [3, \"control\", \"controlEl\", \"customValidationErrors\"], [\"for\", \"confirmNewPassword\", 1, \"col-md-3\", \"col-form-label\"], [\"type\", \"password\", \"name\", \"confirmNewPassword\", \"id\", \"confirmNewPassword\", \"required\", \"\", \"minlength\", \"2\", \"maxlength\", \"32\", \"validateEqual\", \"newPassword\", \"reverse\", \"false\", \"ngModel\", \"\", 1, \"form-control\"], [\"confirmNewPasswordModel\", \"ngModel\", \"confirmNewPasswordEl\", \"\"], [1, \"card-footer\", \"justify-content-between\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function ChangePasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"section\", 0)(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"h1\");\n      i0.ɵɵtext(6);\n      i0.ɵɵpipe(7, \"localize\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(8, \"section\", 4)(9, \"div\", 1)(10, \"div\", 5)(11, \"form\", 6, 7);\n      i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.changePassword();\n      });\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 9)(15, \"div\", 10)(16, \"label\", 11);\n      i0.ɵɵtext(17);\n      i0.ɵɵpipe(18, \"localize\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 12)(20, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.changePasswordDto.currentPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"abp-validation-summary\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"div\", 10)(25, \"label\", 16);\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"localize\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 12)(29, \"input\", 17, 18);\n      i0.ɵɵlistener(\"ngModelChange\", function ChangePasswordComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.changePasswordDto.newPassword = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(32, \"abp-validation-summary\", 19);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"div\", 10)(34, \"label\", 20);\n      i0.ɵɵtext(35);\n      i0.ɵɵpipe(36, \"localize\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 12);\n      i0.ɵɵelement(38, \"input\", 21, 22)(41, \"abp-validation-summary\", 19);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(42, \"div\", 23)(43, \"button\", 24);\n      i0.ɵɵtext(44);\n      i0.ɵɵpipe(45, \"localize\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n\n    if (rf & 2) {\n      var _r0 = i0.ɵɵreference(12);\n\n      var _r1 = i0.ɵɵreference(21);\n\n      var _r2 = i0.ɵɵreference(22);\n\n      var _r3 = i0.ɵɵreference(30);\n\n      var _r4 = i0.ɵɵreference(31);\n\n      var _r5 = i0.ɵɵreference(39);\n\n      var _r6 = i0.ɵɵreference(40);\n\n      i0.ɵɵproperty(\"@routerTransition\", undefined);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 17, \"UpdatePassword\"));\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(18, 19, \"CurrentPassword\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.changePasswordDto.currentPassword);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"control\", _r1)(\"controlEl\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 21, \"NewPassword\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.changePasswordDto.newPassword);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"control\", _r3)(\"controlEl\", _r4)(\"customValidationErrors\", ctx.newPasswordValidationErrors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(36, 23, \"ConfirmNewPassword\"), \" \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"control\", _r5)(\"controlEl\", _r6)(\"customValidationErrors\", ctx.confirmNewPasswordValidationErrors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid || ctx.saving);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(45, 25, \"Save\"), \" \");\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.MaxLengthValidator, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.AbpValidationSummaryComponent, i5.EqualValidator, i6.LocalizePipe],\n  encapsulation: 2,\n  data: {\n    animation: [appModuleAnimation()]\n  }\n});","map":{"version":3,"mappings":"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","names":["Injector","finalize","appModuleAnimation","AppComponentBase","ChangePasswordDto","ChangePasswordComponent","injector","userServiceProxy","router","name","localizationKey","saving","changePassword","changePasswordDto","pipe","subscribe","success","abp","message","navigate","i0","selectors","features","decls","vars","consts","template","ctx","_r2","_r4","_r6"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/app/users/change-password/change-password.component.ts","/Users/selim/repo/eryaz/angular/src/app/users/change-password/change-password.component.html"],"sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { finalize } from 'rxjs/operators';\nimport { appModuleAnimation } from '@shared/animations/routerTransition';\nimport { AppComponentBase } from '@shared/app-component-base';\nimport {\n  ChangePasswordDto,\n  UserServiceProxy\n} from '@shared/service-proxies/service-proxies';\nimport { AbpValidationError } from '@shared/components/validation/abp-validation.api';\n\n@Component({\n  templateUrl: './change-password.component.html',\n  animations: [appModuleAnimation()]\n})\nexport class ChangePasswordComponent extends AppComponentBase {\n  saving = false;\n  changePasswordDto = new ChangePasswordDto();\n  newPasswordValidationErrors: Partial<AbpValidationError>[] = [\n    {\n      name: 'pattern',\n      localizationKey:\n        'PasswordsMustBeAtLeast8CharactersContainLowercaseUppercaseNumber',\n    },\n  ];\n  confirmNewPasswordValidationErrors: Partial<AbpValidationError>[] = [\n    {\n      name: 'validateEqual',\n      localizationKey: 'PasswordsDoNotMatch',\n    },\n  ];\n\n  constructor(\n    injector: Injector,\n    private userServiceProxy: UserServiceProxy,\n    private router: Router\n  ) {\n    super(injector);\n  }\n\n  changePassword() {\n    this.saving = true;\n\n    this.userServiceProxy\n      .changePassword(this.changePasswordDto)\n      .pipe(\n        finalize(() => {\n          this.saving = false;\n        })\n      )\n      .subscribe((success) => {\n        if (success) {\n          abp.message.success('Password changed successfully', 'Success');\n          this.router.navigate(['/']);\n        }\n      });\n  }\n}\n","<div [@routerTransition]>\n  <section class=\"content-header\">\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div class=\"col-6\">\n          <h1>{{ \"UpdatePassword\" | localize }}</h1>\n        </div>\n      </div>\n    </div>\n  </section>\n  <section class=\"content px-2\">\n    <div class=\"container-fluid\">\n      <div class=\"card\">\n        <form\n          class=\"form-horizontal\"\n          autocomplete=\"off\"\n          #changePasswordForm=\"ngForm\"\n          (ngSubmit)=\"changePassword()\"\n        >\n          <div class=\"card-body\">\n            <div class=\"modal-body\">\n              <div class=\"form-group row required\">\n                <label class=\"col-md-3 col-form-label\" for=\"currentPassword\">\n                  {{ \"CurrentPassword\" | localize }}\n                </label>\n                <div class=\"col-md-9\">\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    name=\"currentPassword\"\n                    id=\"currentPassword\"\n                    required\n                    minlength=\"2\"\n                    maxlength=\"32\"\n                    [(ngModel)]=\"changePasswordDto.currentPassword\"\n                    #currentPasswordModel=\"ngModel\"\n                    #currentPasswordEl\n                  />\n                  <abp-validation-summary\n                    [control]=\"currentPasswordModel\"\n                    [controlEl]=\"currentPasswordEl\"\n                  ></abp-validation-summary>\n                </div>\n              </div>\n              <div class=\"form-group row required\">\n                <label class=\"col-md-3 col-form-label\" for=\"newPassword\">\n                  {{ \"NewPassword\" | localize }}\n                </label>\n                <div class=\"col-md-9\">\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    name=\"newPassword\"\n                    id=\"newPassword\"\n                    required\n                    minlength=\"2\"\n                    maxlength=\"32\"\n                    validateEqual=\"confirmNewPassword\"\n                    reverse=\"true\"\n                    pattern=\"(?=^.{8,}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s)[0-9a-zA-Z!@#$%^&*()]*$\"\n                    [(ngModel)]=\"changePasswordDto.newPassword\"\n                    #newPasswordModel=\"ngModel\"\n                    #newPasswordEl\n                  />\n                  <abp-validation-summary\n                    [control]=\"newPasswordModel\"\n                    [controlEl]=\"newPasswordEl\"\n                    [customValidationErrors]=\"newPasswordValidationErrors\"\n                  ></abp-validation-summary>\n                </div>\n              </div>\n              <div class=\"form-group row required\">\n                <label class=\"col-md-3 col-form-label\" for=\"confirmNewPassword\">\n                  {{ \"ConfirmNewPassword\" | localize }}\n                </label>\n                <div class=\"col-md-9\">\n                  <input\n                    type=\"password\"\n                    class=\"form-control\"\n                    name=\"confirmNewPassword\"\n                    id=\"confirmNewPassword\"\n                    required\n                    minlength=\"2\"\n                    maxlength=\"32\"\n                    validateEqual=\"newPassword\"\n                    reverse=\"false\"\n                    ngModel\n                    #confirmNewPasswordModel=\"ngModel\"\n                    #confirmNewPasswordEl\n                  />\n                  <abp-validation-summary\n                    [control]=\"confirmNewPasswordModel\"\n                    [controlEl]=\"confirmNewPasswordEl\"\n                    [customValidationErrors]=\"\n                      confirmNewPasswordValidationErrors\n                    \"\n                  ></abp-validation-summary>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer justify-content-between\">\n            <button\n              type=\"submit\"\n              class=\"btn btn-primary\"\n              [disabled]=\"!changePasswordForm.form.valid || saving\"\n            >\n              {{ \"Save\" | localize }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </section>\n</div>\n"]},"metadata":{},"sourceType":"module"}