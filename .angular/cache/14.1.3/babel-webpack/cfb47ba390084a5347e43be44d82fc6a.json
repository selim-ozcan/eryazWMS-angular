{"ast":null,"code":"import _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AbpHttpInterceptor } from 'abp-ng2-module';\nimport * as ApiServiceProxies from './service-proxies';\nimport * as i0 from \"@angular/core\";\nexport var ServiceProxyModule = /*#__PURE__*/_createClass(function ServiceProxyModule() {\n  _classCallCheck(this, ServiceProxyModule);\n});\n\nServiceProxyModule.ɵfac = function ServiceProxyModule_Factory(t) {\n  return new (t || ServiceProxyModule)();\n};\n\nServiceProxyModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n  type: ServiceProxyModule\n});\nServiceProxyModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n  providers: [ApiServiceProxies.RoleServiceProxy, ApiServiceProxies.SessionServiceProxy, ApiServiceProxies.TenantServiceProxy, ApiServiceProxies.UserServiceProxy, ApiServiceProxies.TokenAuthServiceProxy, ApiServiceProxies.AccountServiceProxy, ApiServiceProxies.ConfigurationServiceProxy, // Selim\n  ApiServiceProxies.CustomerServiceProxy, ApiServiceProxies.ProductServiceProxy, ApiServiceProxies.WarehouseServiceProxy, ApiServiceProxies.DocumentServiceProxy, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AbpHttpInterceptor,\n    multi: true\n  }]\n});","map":{"version":3,"mappings":";;AACA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,kBAAT,QAAmC,gBAAnC;AAEA,OAAO,KAAKC,iBAAZ,MAAmC,mBAAnC;;AAqBA,WAAaC,kBAAb;EAAA;AAAA;;;mBAAaA;AAAkB;;;QAAlBA;;;aAlBE,CACPD,iBAAiB,CAACE,gBADX,EAEPF,iBAAiB,CAACG,mBAFX,EAGPH,iBAAiB,CAACI,kBAHX,EAIPJ,iBAAiB,CAACK,gBAJX,EAKPL,iBAAiB,CAACM,qBALX,EAMPN,iBAAiB,CAACO,mBANX,EAOPP,iBAAiB,CAACQ,yBAPX,EASP;EACAR,iBAAiB,CAACS,oBAVX,EAWPT,iBAAiB,CAACU,mBAXX,EAYPV,iBAAiB,CAACW,qBAZX,EAaPX,iBAAiB,CAACY,oBAbX,EAeP;IAAEC,OAAO,EAAEf,iBAAX;IAA8BgB,QAAQ,EAAEf,kBAAxC;IAA4DgB,KAAK,EAAE;EAAnE,CAfO","names":["HTTP_INTERCEPTORS","AbpHttpInterceptor","ApiServiceProxies","ServiceProxyModule","RoleServiceProxy","SessionServiceProxy","TenantServiceProxy","UserServiceProxy","TokenAuthServiceProxy","AccountServiceProxy","ConfigurationServiceProxy","CustomerServiceProxy","ProductServiceProxy","WarehouseServiceProxy","DocumentServiceProxy","provide","useClass","multi"],"sourceRoot":"","sources":["/Users/selim/repo/eryaz/angular/src/shared/service-proxies/service-proxy.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AbpHttpInterceptor } from 'abp-ng2-module';\n\nimport * as ApiServiceProxies from './service-proxies';\n\n@NgModule({\n    providers: [\n        ApiServiceProxies.RoleServiceProxy,\n        ApiServiceProxies.SessionServiceProxy,\n        ApiServiceProxies.TenantServiceProxy,\n        ApiServiceProxies.UserServiceProxy,\n        ApiServiceProxies.TokenAuthServiceProxy,\n        ApiServiceProxies.AccountServiceProxy,\n        ApiServiceProxies.ConfigurationServiceProxy,\n\n        // Selim\n        ApiServiceProxies.CustomerServiceProxy,\n        ApiServiceProxies.ProductServiceProxy,\n        ApiServiceProxies.WarehouseServiceProxy,\n        ApiServiceProxies.DocumentServiceProxy,\n\n        { provide: HTTP_INTERCEPTORS, useClass: AbpHttpInterceptor, multi: true }\n    ]\n})\nexport class ServiceProxyModule { }\n"]},"metadata":{},"sourceType":"module"}