{"ast":null,"code":"import _get from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n  return function (source) {\n    return source.lift(new RepeatWhenOperator(notifier));\n  };\n}\n\nvar RepeatWhenOperator = /*#__PURE__*/function () {\n  function RepeatWhenOperator(notifier) {\n    _classCallCheck(this, RepeatWhenOperator);\n\n    this.notifier = notifier;\n  }\n\n  _createClass(RepeatWhenOperator, [{\n    key: \"call\",\n    value: function call(subscriber, source) {\n      return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n  }]);\n\n  return RepeatWhenOperator;\n}();\n\nvar RepeatWhenSubscriber = /*#__PURE__*/function (_SimpleOuterSubscribe) {\n  _inherits(RepeatWhenSubscriber, _SimpleOuterSubscribe);\n\n  var _super = _createSuper(RepeatWhenSubscriber);\n\n  function RepeatWhenSubscriber(destination, notifier, source) {\n    var _this;\n\n    _classCallCheck(this, RepeatWhenSubscriber);\n\n    _this = _super.call(this, destination);\n    _this.notifier = notifier;\n    _this.source = source;\n    _this.sourceIsBeingSubscribedTo = true;\n    return _this;\n  }\n\n  _createClass(RepeatWhenSubscriber, [{\n    key: \"notifyNext\",\n    value: function notifyNext() {\n      this.sourceIsBeingSubscribedTo = true;\n      this.source.subscribe(this);\n    }\n  }, {\n    key: \"notifyComplete\",\n    value: function notifyComplete() {\n      if (this.sourceIsBeingSubscribedTo === false) {\n        return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n      }\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.sourceIsBeingSubscribedTo = false;\n\n      if (!this.isStopped) {\n        if (!this.retries) {\n          this.subscribeToRetries();\n        }\n\n        if (!this.retriesSubscription || this.retriesSubscription.closed) {\n          return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n        }\n\n        this._unsubscribeAndRecycle();\n\n        this.notifications.next(undefined);\n      }\n    }\n  }, {\n    key: \"_unsubscribe\",\n    value: function _unsubscribe() {\n      var notifications = this.notifications,\n          retriesSubscription = this.retriesSubscription;\n\n      if (notifications) {\n        notifications.unsubscribe();\n        this.notifications = undefined;\n      }\n\n      if (retriesSubscription) {\n        retriesSubscription.unsubscribe();\n        this.retriesSubscription = undefined;\n      }\n\n      this.retries = undefined;\n    }\n  }, {\n    key: \"_unsubscribeAndRecycle\",\n    value: function _unsubscribeAndRecycle() {\n      var _unsubscribe = this._unsubscribe;\n      this._unsubscribe = null;\n\n      _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"_unsubscribeAndRecycle\", this).call(this);\n\n      this._unsubscribe = _unsubscribe;\n      return this;\n    }\n  }, {\n    key: \"subscribeToRetries\",\n    value: function subscribeToRetries() {\n      this.notifications = new Subject();\n      var retries;\n\n      try {\n        var notifier = this.notifier;\n        retries = notifier(this.notifications);\n      } catch (e) {\n        return _get(_getPrototypeOf(RepeatWhenSubscriber.prototype), \"complete\", this).call(this);\n      }\n\n      this.retries = retries;\n      this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    }\n  }]);\n\n  return RepeatWhenSubscriber;\n}(SimpleOuterSubscriber);","map":{"version":3,"names":["Subject","SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","repeatWhen","notifier","source","lift","RepeatWhenOperator","subscriber","subscribe","RepeatWhenSubscriber","destination","sourceIsBeingSubscribedTo","isStopped","retries","subscribeToRetries","retriesSubscription","closed","_unsubscribeAndRecycle","notifications","next","undefined","unsubscribe","_unsubscribe","e"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js"],"sourcesContent":["import { Subject } from '../Subject';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\nclass RepeatWhenSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext() {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete() {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next(undefined);\n        }\n    }\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = undefined;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = undefined;\n        }\n        this.retries = undefined;\n    }\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        let retries;\n        try {\n            const { notifier } = this;\n            retries = notifier(this.notifications);\n        }\n        catch (e) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n    }\n}\n"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,qBAAT,EAAgCC,cAAhC,EAAgDC,qBAAhD,QAA6E,mBAA7E;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8B;EACjC,OAAO,UAACC,MAAD;IAAA,OAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,kBAAJ,CAAuBH,QAAvB,CAAZ,CAAZ;EAAA,CAAP;AACH;;IACKG,kB;EACF,4BAAYH,QAAZ,EAAsB;IAAA;;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;EACH;;;;WACD,cAAKI,UAAL,EAAiBH,MAAjB,EAAyB;MACrB,OAAOA,MAAM,CAACI,SAAP,CAAiB,IAAIC,oBAAJ,CAAyBF,UAAzB,EAAqC,KAAKJ,QAA1C,EAAoDC,MAApD,CAAjB,CAAP;IACH;;;;;;IAECK,oB;;;;;EACF,8BAAYC,WAAZ,EAAyBP,QAAzB,EAAmCC,MAAnC,EAA2C;IAAA;;IAAA;;IACvC,0BAAMM,WAAN;IACA,MAAKP,QAAL,GAAgBA,QAAhB;IACA,MAAKC,MAAL,GAAcA,MAAd;IACA,MAAKO,yBAAL,GAAiC,IAAjC;IAJuC;EAK1C;;;;WACD,sBAAa;MACT,KAAKA,yBAAL,GAAiC,IAAjC;MACA,KAAKP,MAAL,CAAYI,SAAZ,CAAsB,IAAtB;IACH;;;WACD,0BAAiB;MACb,IAAI,KAAKG,yBAAL,KAAmC,KAAvC,EAA8C;QAC1C;MACH;IACJ;;;WACD,oBAAW;MACP,KAAKA,yBAAL,GAAiC,KAAjC;;MACA,IAAI,CAAC,KAAKC,SAAV,EAAqB;QACjB,IAAI,CAAC,KAAKC,OAAV,EAAmB;UACf,KAAKC,kBAAL;QACH;;QACD,IAAI,CAAC,KAAKC,mBAAN,IAA6B,KAAKA,mBAAL,CAAyBC,MAA1D,EAAkE;UAC9D;QACH;;QACD,KAAKC,sBAAL;;QACA,KAAKC,aAAL,CAAmBC,IAAnB,CAAwBC,SAAxB;MACH;IACJ;;;WACD,wBAAe;MACX,IAAQF,aAAR,GAA+C,IAA/C,CAAQA,aAAR;MAAA,IAAuBH,mBAAvB,GAA+C,IAA/C,CAAuBA,mBAAvB;;MACA,IAAIG,aAAJ,EAAmB;QACfA,aAAa,CAACG,WAAd;QACA,KAAKH,aAAL,GAAqBE,SAArB;MACH;;MACD,IAAIL,mBAAJ,EAAyB;QACrBA,mBAAmB,CAACM,WAApB;QACA,KAAKN,mBAAL,GAA2BK,SAA3B;MACH;;MACD,KAAKP,OAAL,GAAeO,SAAf;IACH;;;WACD,kCAAyB;MACrB,IAAQE,YAAR,GAAyB,IAAzB,CAAQA,YAAR;MACA,KAAKA,YAAL,GAAoB,IAApB;;MACA;;MACA,KAAKA,YAAL,GAAoBA,YAApB;MACA,OAAO,IAAP;IACH;;;WACD,8BAAqB;MACjB,KAAKJ,aAAL,GAAqB,IAAIpB,OAAJ,EAArB;MACA,IAAIe,OAAJ;;MACA,IAAI;QACA,IAAQV,QAAR,GAAqB,IAArB,CAAQA,QAAR;QACAU,OAAO,GAAGV,QAAQ,CAAC,KAAKe,aAAN,CAAlB;MACH,CAHD,CAIA,OAAOK,CAAP,EAAU;QACN;MACH;;MACD,KAAKV,OAAL,GAAeA,OAAf;MACA,KAAKE,mBAAL,GAA2Bf,cAAc,CAACa,OAAD,EAAU,IAAIZ,qBAAJ,CAA0B,IAA1B,CAAV,CAAzC;IACH;;;;EA5D8BF,qB"},"metadata":{},"sourceType":"module"}