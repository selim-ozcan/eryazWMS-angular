{"ast":null,"code":"import _classCallCheck from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/selim/repo/eryaz/angular/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport var Subscription = /*#__PURE__*/function () {\n  function Subscription(unsubscribe) {\n    _classCallCheck(this, Subscription);\n\n    this.closed = false;\n    this._parentOrParents = null;\n    this._subscriptions = null;\n\n    if (unsubscribe) {\n      this._ctorUnsubscribe = true;\n      this._unsubscribe = unsubscribe;\n    }\n  }\n\n  _createClass(Subscription, [{\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      var errors;\n\n      if (this.closed) {\n        return;\n      }\n\n      var _parentOrParents = this._parentOrParents,\n          _ctorUnsubscribe = this._ctorUnsubscribe,\n          _unsubscribe = this._unsubscribe,\n          _subscriptions = this._subscriptions;\n      this.closed = true;\n      this._parentOrParents = null;\n      this._subscriptions = null;\n\n      if (_parentOrParents instanceof Subscription) {\n        _parentOrParents.remove(this);\n      } else if (_parentOrParents !== null) {\n        for (var index = 0; index < _parentOrParents.length; ++index) {\n          var parent = _parentOrParents[index];\n          parent.remove(this);\n        }\n      }\n\n      if (isFunction(_unsubscribe)) {\n        if (_ctorUnsubscribe) {\n          this._unsubscribe = undefined;\n        }\n\n        try {\n          _unsubscribe.call(this);\n        } catch (e) {\n          errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n        }\n      }\n\n      if (isArray(_subscriptions)) {\n        var _index = -1;\n\n        var len = _subscriptions.length;\n\n        while (++_index < len) {\n          var sub = _subscriptions[_index];\n\n          if (isObject(sub)) {\n            try {\n              sub.unsubscribe();\n            } catch (e) {\n              errors = errors || [];\n\n              if (e instanceof UnsubscriptionError) {\n                errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n              } else {\n                errors.push(e);\n              }\n            }\n          }\n        }\n      }\n\n      if (errors) {\n        throw new UnsubscriptionError(errors);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(teardown) {\n      var subscription = teardown;\n\n      if (!teardown) {\n        return Subscription.EMPTY;\n      }\n\n      switch (typeof teardown) {\n        case 'function':\n          subscription = new Subscription(teardown);\n\n        case 'object':\n          if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n            return subscription;\n          } else if (this.closed) {\n            subscription.unsubscribe();\n            return subscription;\n          } else if (!(subscription instanceof Subscription)) {\n            var tmp = subscription;\n            subscription = new Subscription();\n            subscription._subscriptions = [tmp];\n          }\n\n          break;\n\n        default:\n          {\n            throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n          }\n      }\n\n      var _subscription = subscription,\n          _parentOrParents = _subscription._parentOrParents;\n\n      if (_parentOrParents === null) {\n        subscription._parentOrParents = this;\n      } else if (_parentOrParents instanceof Subscription) {\n        if (_parentOrParents === this) {\n          return subscription;\n        }\n\n        subscription._parentOrParents = [_parentOrParents, this];\n      } else if (_parentOrParents.indexOf(this) === -1) {\n        _parentOrParents.push(this);\n      } else {\n        return subscription;\n      }\n\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions === null) {\n        this._subscriptions = [subscription];\n      } else {\n        subscriptions.push(subscription);\n      }\n\n      return subscription;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(subscription) {\n      var subscriptions = this._subscriptions;\n\n      if (subscriptions) {\n        var subscriptionIndex = subscriptions.indexOf(subscription);\n\n        if (subscriptionIndex !== -1) {\n          subscriptions.splice(subscriptionIndex, 1);\n        }\n      }\n    }\n  }]);\n\n  return Subscription;\n}();\n\nSubscription.EMPTY = function (empty) {\n  empty.closed = true;\n  return empty;\n}(new Subscription());\n\nfunction flattenUnsubscriptionErrors(errors) {\n  return errors.reduce(function (errs, err) {\n    return errs.concat(err instanceof UnsubscriptionError ? err.errors : err);\n  }, []);\n}","map":{"version":3,"names":["isArray","isObject","isFunction","UnsubscriptionError","Subscription","unsubscribe","closed","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","errors","remove","index","length","parent","undefined","call","e","flattenUnsubscriptionErrors","len","sub","concat","push","teardown","subscription","EMPTY","tmp","Error","indexOf","subscriptions","subscriptionIndex","splice","empty","reduce","errs","err"],"sources":["/Users/selim/repo/eryaz/angular/node_modules/rxjs/_esm2015/internal/Subscription.js"],"sourcesContent":["import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nexport class Subscription {\n    constructor(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    unsubscribe() {\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (let index = 0; index < _parentOrParents.length; ++index) {\n                const parent = _parentOrParents[index];\n                parent.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            let index = -1;\n            let len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    add(teardown) {\n        let subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        let { _parentOrParents } = subscription;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        const subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    }\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n}\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}